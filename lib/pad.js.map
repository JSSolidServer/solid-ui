{"version":3,"file":"pad.js","names":["store","solidLogicSingleton","PAD","Namespace","NotepadElement","HTMLElement","NotepadPart","lightColorHash","author","hash","x","split","reduce","a","b","charCodeAt","uri","toString","notepad","dom","padDoc","subject","me","options","exists","table","createElement","kb","Error","updater","setAttribute","upstreamStatus","downstreamStatus","statusArea","t","appendChild","tr","complain","message","upstream","log","errorMessageBlock","clearStatus","_upsteam","innerHTML","setPartStyle","part","colors","pending","chunk","baseStyle","headingCore","headingStyle","any","ns","dc","bgcolor","indent","value","style","removePart","prev","undefined","next","sameTerm","del","statementsMatching","concat","ins","st","NamedNode","label","slice","update","ok","errorMessage","response","row","parentNode","before","previousSibling","removeChild","firstChild","focus","status","state","beep","setTimeout","reloadAndSync","res","changeIndent","delta","current","length","Number","object","newIndent","errorBody","requestDownstreamAction","addListeners","addEventListener","event","queueProperty","queue","keyCode","shiftKey","newChunk","preventDefault","nextSibling","updateStore","old","sioc","newOne","lastSent","xhr","inputChangeListener","_event","newPartAfter","tr1","text","insertBefore","ele","here","tagName","toLowerCase","newThing","push","_xhr","newPart","newLinesBefore","consistencyCheck","found","failed","complain2","msg","the","k","each","sts","forEach","sync","textContent","manif","i","children","refreshTree","root","refresh","reloading","checkAndSync","retryTimeout","tryReload","reload","holds","insertables","rdf","Date","getChunks","chunks","xmlEncode","str","replace","notepadToHTML","pad","html","title","anyValue","dct","level","increaseLevel","decreaseLevel","anyJS","rawContent","content","h"],"sources":["../src/pad.ts"],"sourcesContent":["/** **************\n *   Notepad Widget\n */\n\n/** @module pad\n */\nimport * as ns from './ns'\nimport { Namespace, NamedNode, st, IndexedFormula } from 'rdflib'\nimport { newThing, errorMessageBlock } from './widgets'\nimport { beep } from './utils'\nimport { log } from './debug'\nimport { solidLogicSingleton } from 'solid-logic'\nexport { renderPartipants, participationObject, manageParticipation, recordParticipation } from './participation'\n\nconst store = solidLogicSingleton.store\n\nconst PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\ntype notepadOptions = {\n  statusArea?: HTMLDivElement\n  exists?: boolean\n}\n/**\n * @ignore\n */\nclass NotepadElement extends HTMLElement {\n  subject?: NamedNode\n}\n/**\n * @ignore\n */\nclass NotepadPart extends HTMLElement {\n  subject?: NamedNode | string\n  value?: string\n  state?: Number\n  lastSent?: String\n}\n/** Figure out a random color from my webid\n *\n * @param {NamedNode} author - The author of text being displayed\n * @returns {String} The CSS color generated, constrained to be light for a background color\n */\nexport function lightColorHash (author?: NamedNode): string {\n  const hash = function (x) {\n    return x.split('').reduce(function (a, b) {\n      a = (a << 5) - a + b.charCodeAt(0)\n      return a & a\n    }, 0)\n  }\n  return author && author.uri\n    ? '#' + ((hash(author.uri) & 0xffffff) | 0xc0c0c0).toString(16)\n    : '#ffffff' // c0c0c0  forces pale\n} // no id -> white\n\n/**  notepad\n *\n * @param {HTMLDocument} dom - the web page of the browser\n * @param {NamedNode} padDoc - the document into which the particpation should be shown\n * @param {NamedNode} subject - the thing in which participation is happening\n * @param {NamedNode} me - person who is logged into the pod\n * @param {notepadOptions} options - the options that can be passed in consist of statusArea, exists\n */\nexport function notepad (dom: HTMLDocument, padDoc: NamedNode, subject: NamedNode, me: NamedNode, options?: notepadOptions) {\n  options = options || {}\n  const exists = options.exists\n  const table: any = dom.createElement('table')\n  const kb = store\n\n  if (me && !me.uri) throw new Error('UI.pad.notepad:  Invalid userid')\n\n  const updater = store.updater\n\n  const PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\n  table.setAttribute(\n    'style',\n    'padding: 1em; overflow: auto; resize: horizontal; min-width: 40em;'\n  )\n\n  let upstreamStatus: HTMLElement | null = null\n  let downstreamStatus: HTMLElement | null = null\n\n  if (options.statusArea) {\n    const t = options.statusArea.appendChild(dom.createElement('table'))\n    const tr = t.appendChild(dom.createElement('tr'))\n    upstreamStatus = tr.appendChild(dom.createElement('td'))\n    downstreamStatus = tr.appendChild(dom.createElement('td'))\n\n    if (upstreamStatus) {\n      upstreamStatus.setAttribute('style', 'width:50%')\n    }\n    if (downstreamStatus) {\n      downstreamStatus.setAttribute('style', 'width:50%')\n    }\n  }\n  /* @@ TODO want to look into this, it seems upstream should be a boolean and default to false ?\n  *\n  */\n  const complain = function (message: string, upstream: boolean = false) {\n    log(message)\n    if ((options as notepadOptions).statusArea) {\n      ; (upstream ? upstreamStatus as HTMLElement : downstreamStatus as HTMLElement).appendChild(errorMessageBlock(dom, message, 'pink'))\n    }\n  }\n  // @@ TODO need to refactor so that we don't have to type cast\n  const clearStatus = function (_upsteam?: any) {\n    if ((options as notepadOptions).statusArea) {\n      ((options as notepadOptions).statusArea as HTMLElement).innerHTML = ''\n    }\n  }\n\n  const setPartStyle = function (part: NotepadPart, colors?: string, pending?: any) {\n    const chunk = part.subject\n    colors = colors || ''\n    const baseStyle =\n      'font-size: 100%; font-family: monospace; width: 100%; border: none; white-space: pre-wrap;'\n    const headingCore =\n      'font-family: sans-serif; font-weight: bold;  border: none;'\n    const headingStyle = [\n      'font-size: 110%;  padding-top: 0.5em; padding-bottom: 0.5em; width: 100%;',\n      'font-size: 120%; padding-top: 1em; padding-bottom: 1em; width: 100%;',\n      'font-size: 150%; padding-top: 1em; padding-bottom: 1em; width: 100%;'\n    ]\n\n    const author = kb.any(chunk as any, ns.dc('author'))\n    if (!colors && author) {\n      // Hash the user webid for now -- later allow user selection!\n      const bgcolor = lightColorHash(author as any)\n      colors =\n        'color: ' +\n        (pending ? '#888' : 'black') +\n        '; background-color: ' +\n        bgcolor +\n        ';'\n    }\n\n    // @@ TODO Need to research when this can be an object with the indent stored in value\n    // and when the indent is stored as a Number itself, not in an object.\n    let indent: any = kb.any(chunk as any, PAD('indent'))\n\n    indent = indent ? indent.value : 0\n    const style =\n      indent >= 0\n        ? baseStyle + 'text-indent: ' + indent * 3 + 'em;'\n        : headingCore + headingStyle[-1 - indent]\n    // ? baseStyle + 'padding-left: ' + (indent * 3) + 'em;'\n    part.setAttribute('style', style + colors)\n  }\n\n  const removePart = function (part: NotepadPart) {\n    const chunk = part.subject\n    if (!chunk) throw new Error('No chunk for line to be deleted!') // just in case\n    const prev: any = kb.any(undefined, PAD('next'), chunk as any)\n    const next: any = kb.any(chunk as any, PAD('next'))\n    if (prev.sameTerm(subject) && next.sameTerm(subject)) {\n      // Last one\n      log(\"You can't delete the only line.\")\n      return\n    }\n\n    const del = kb\n      .statementsMatching(chunk as any, undefined, undefined, padDoc)\n      .concat(kb.statementsMatching(undefined, undefined, chunk as any, padDoc))\n    const ins = [st(prev, PAD('next'), next, padDoc)]\n\n    // @@ TODO what should we do if chunk is not a NamedNode should we\n    // assume then it is a string?\n    if (chunk instanceof NamedNode) {\n      const label = chunk.uri.slice(-4)\n\n      log('Deleting line ' + label)\n    }\n    if (!updater) {\n      throw new Error('have no updater')\n    }\n    // @@ TODO below you can see that before is redefined and not a boolean\n    updater.update(del, ins, function (uri, ok, errorMessage, response) {\n      if (ok) {\n        const row = part.parentNode\n        if (row) {\n          const before: any = row.previousSibling\n          if (row.parentNode) {\n            row.parentNode.removeChild(row)\n          }\n          // console.log('    deleted line ' + label + ' ok ' + part.value)\n          if (before && before.firstChild) {\n            // @@ TODO IMPORTANT FOCUS ISN'T A PROPERTY ON A CHILDNODE\n            before.firstChild.focus()\n          }\n        }\n      } else if (response && (response as any).status === 409) {\n        // Conflict\n        setPartStyle(part, 'color: black;  background-color: #ffd;') // yellow\n        part.state = 0 // Needs downstream refresh\n        beep(0.5, 512) // Ooops clash with other person\n        setTimeout(function () {\n          // Ideally, beep! @@\n          reloadAndSync() // Throw away our changes and\n          // updater.requestDownstreamAction(padDoc, reloadAndSync)\n        }, 1000)\n      } else {\n        log('    removePart FAILED ' + chunk + ': ' + errorMessage)\n        log(\"    removePart was deleteing :'\" + del)\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        const res = response ? (response as any).status : ' [no response field] '\n        complain('Error ' + res + ' saving changes: ' + (errorMessage as any).true) // upstream,\n        // updater.requestDownstreamAction(padDoc, reloadAndSync);\n      }\n    })\n  } // removePart\n\n  const changeIndent = function (part: NotepadPart, chunk: string, delta) {\n    const del = kb.statementsMatching(chunk as any, PAD('indent'))\n    const current = del.length ? Number(del[0].object.value) : 0\n    if (current + delta < -3) return //  limit negative indent\n    const newIndent = current + delta\n    const ins = st(chunk as any, PAD('indent'), newIndent, padDoc)\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update(del, ins as any, function (uri, ok, errorBody) {\n      if (!ok) {\n        log(\n          \"Indent change FAILED '\" +\n          newIndent +\n          \"' for \" +\n          padDoc +\n          ': ' +\n          errorBody\n        )\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        updater.requestDownstreamAction(padDoc, reloadAndSync)\n      } else {\n        setPartStyle(part) // Implement the indent\n      }\n    })\n  }\n\n  // Use this sort of code to split the line when return pressed in the middle @@\n  /*\n  function doGetCaretPosition doGetCaretPosition (oField) {\n    var iCaretPos = 0\n        // IE Support\n    if (document.selection) {\n            // Set focus on the element to avoid IE bug\n      oField.focus()\n            // To get cursor position, get empty selection range\n      var oSel = document.selection.createRange()\n            // Move selection start to 0 position\n      oSel.moveStart('character', -oField.value.length)\n            // The caret position is selection length\n      iCaretPos = oSel.text.length\n        // Firefox suppor\n    } else if (oField.selectionStart || oField.selectionStart === '0') {\n      iCaretPos = oField.selectionStart\n    }\n        // Return results\n    return (iCaretPos)\n  }\n  */\n  const addListeners = function (part: any, chunk: any) {\n    part.addEventListener('keydown', function (event) {\n      if (!updater) {\n        throw new Error('no updater')\n      }\n\n      let queueProperty, queue\n      //  up 38; down 40; left 37; right 39     tab 9; shift 16; escape 27\n      switch (event.keyCode) {\n        case 13: // Return\n        {\n          const before: NotepadElement = event.shiftKey\n          log('enter') // Shift-return inserts before -- only way to add to top of pad.\n          if (before) {\n            queue = kb.any(undefined, PAD('next'), chunk)\n            queueProperty = 'newlinesAfter'\n          } else {\n            queue = kb.any(chunk, PAD('next'))\n            queueProperty = 'newlinesBefore'\n          }\n          queue[queueProperty] = queue[queueProperty] || 0\n          queue[queueProperty] += 1\n          if (queue[queueProperty] > 1) {\n            log('    queueing newline queue = ' + queue[queueProperty])\n            return\n          }\n          log('    go ahead line before ' + queue[queueProperty])\n          newChunk(part, before) // was document.activeElement\n          break\n        }\n        case 8: // Delete\n          if (part.value.length === 0) {\n            log(\n              'Delete key line ' + chunk.uri.slice(-4) + ' state ' + part.state\n            )\n\n            switch (part.state) {\n              case 1: // contents being sent\n              case 2: // contents need to be sent again\n                part.state = 4 // delete me\n                return\n              case 3: // being deleted already\n              case 4: // already deleme state\n                return\n              case undefined:\n              case 0:\n                part.state = 3 // being deleted\n                removePart(part)\n                event.preventDefault()\n                break // continue\n              default:\n                throw new Error('pad: Unexpected state ' + part)\n            }\n          }\n          break\n        case 9: // Tab\n        {\n          const delta = event.shiftKey ? -1 : 1\n          changeIndent(part, chunk, delta)\n          event.preventDefault() // default is to highlight next field\n          break\n        }\n        case 27: // ESC\n          log('escape')\n          updater.requestDownstreamAction(padDoc, reloadAndSync)\n          event.preventDefault()\n          break\n\n        case 38: // Up\n          if (part.parentNode.previousSibling) {\n            part.parentNode.previousSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        case 40: // Down\n          if (part.parentNode.nextSibling) {\n            part.parentNode.nextSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        default:\n      }\n    })\n\n    const updateStore = function (part: NotepadPart) {\n      const chunk: any = part.subject\n      setPartStyle(part, undefined, true)\n      const old = (kb.any(chunk, ns.sioc('content')) as any).value\n      const del = [st(chunk, ns.sioc('content'), old, padDoc)]\n      let ins\n      if (part.value) {\n        ins = [st(chunk, ns.sioc('content'), part.value as any, padDoc)]\n      }\n      const newOne = part.value\n\n      // DEBUGGING ONLY\n      if (part.lastSent) {\n        if (old !== part.lastSent) {\n          throw new Error(\n            \"Out of order, last sent expected '\" +\n            old +\n            \"' but found '\" +\n            part.lastSent +\n            \"'\"\n          )\n        }\n      }\n      part.lastSent = newOne\n\n      /* console.log(\n        ' Patch proposed to ' +\n        chunk.uri.slice(-4) +\n        \" '\" +\n        old +\n        \"' -> '\" +\n        newOne +\n        \"' \"\n      ) */\n      if (!updater) {\n        throw new Error('no updater')\n      }\n\n      updater.update(del, ins, function (uri, ok, errorBody, xhr) {\n        if (!ok) {\n          // alert(\"clash \" + errorBody);\n          log(\n            '    patch FAILED ' +\n            (xhr as any).status +\n            \" for '\" +\n            old +\n            \"' -> '\" +\n            newOne +\n            \"': \" +\n            errorBody\n          )\n          if ((xhr as any).status === 409) {\n            // Conflict -  @@ we assume someone else\n            setPartStyle(part, 'color: black;  background-color: #fdd;')\n            part.state = 0 // Needs downstream refresh\n            beep(0.5, 512) // Ooops clash with other person\n            setTimeout(function () {\n              updater.requestDownstreamAction(padDoc, reloadAndSync)\n            }, 1000)\n          } else {\n            setPartStyle(part, 'color: black;  background-color: #fdd;') // failed pink\n            part.state = 0\n            complain(\n              '    Error ' + (xhr as any).status + ' sending data: ' + errorBody,\n              true\n            )\n            beep(1.0, 128) // Other\n            // @@@   Do soemthing more serious with other errors eg auth, etc\n          }\n        } else {\n          clearStatus(true) // upstream\n          setPartStyle(part) // synced\n          log(\"    Patch ok '\" + old + \"' -> '\" + newOne + \"' \")\n\n          if (part.state === 4) {\n            //  delete me\n            part.state = 3\n            removePart(part)\n          } else if (part.state === 3) {\n            // being deleted\n            // pass\n          } else if (part.state === 2) {\n            part.state = 1 // pending: lock\n            updateStore(part)\n          } else {\n            part.state = 0 // clear lock\n          }\n        }\n      })\n    }\n\n    part.addEventListener('input', function inputChangeListener (_event) {\n      // debug.log(\"input changed \"+part.value);\n      setPartStyle(part, undefined, true) // grey out - not synced\n      log(\n        'Input event state ' + part.state + \" value '\" + part.value + \"'\"\n      )\n      switch (part.state) {\n        case 3: // being deleted\n          return\n        case 4: // needs to be deleted\n          return\n        case 2: // needs content updating, we know\n          return\n        case 1:\n          part.state = 2 // lag we need another patch\n          return\n        case 0:\n        case undefined:\n          part.state = 1 // being upadted\n          updateStore(part)\n      }\n    }) // listener\n  } // addlisteners\n\n  // @@ TODO Need to research before as it appears to be used as an Element and a boolean\n  const newPartAfter = function (tr1: HTMLTableElement, chunk: String, before?: NotepadElement | boolean) {\n    // @@ take chunk and add listeners\n    let text: any = kb.any(chunk as any, ns.sioc('content'))\n    text = text ? text.value : ''\n    const tr = dom.createElement('tr')\n    if (before) {\n      table.insertBefore(tr, tr1)\n    } else {\n      // after\n      if (tr1 && tr1.nextSibling) {\n        table.insertBefore(tr, tr1.nextSibling)\n      } else {\n        table.appendChild(tr)\n      }\n    }\n    const part: any = tr.appendChild(dom.createElement('input'))\n    part.subject = chunk\n    part.setAttribute('type', 'text')\n    part.value = text\n    if (me) {\n      setPartStyle(part, '')\n      addListeners(part, chunk)\n    } else {\n      setPartStyle(part, 'color: #222; background-color: #fff')\n      log(\"Note can't add listeners - not logged in\")\n    }\n    return part\n  }\n\n  /* @@ TODO we need to look at indent, it can be a Number or an Object this doesn't seem correct.\n  */\n  const newChunk = function (ele?: NotepadElement, before?: NotepadElement) {\n    // element of chunk being split\n    const kb = store\n    let indent: any = 0\n    let queueProperty: string | null = null\n    let here, prev, next, queue, tr1: any\n\n    if (ele) {\n      if (ele.tagName.toLowerCase() !== 'input') {\n        log('return pressed when current document is: ' + ele.tagName)\n      }\n      here = ele.subject\n      indent = kb.any(here, PAD('indent'))\n      indent = indent ? Number(indent.value) : 0\n      if (before) {\n        prev = kb.any(undefined, PAD('next'), here)\n        next = here\n        queue = prev\n        queueProperty = 'newlinesAfter'\n      } else {\n        prev = here\n        next = kb.any(here, PAD('next'))\n        queue = next\n        queueProperty = 'newlinesBefore'\n      }\n      tr1 = ele.parentNode\n    } else {\n      prev = subject\n      next = subject\n      tr1 = undefined\n    }\n\n    const chunk = newThing(padDoc)\n    const label = chunk.uri.slice(-4)\n\n    const del = [st(prev, PAD('next'), next, padDoc)]\n    const ins = [\n      st(prev, PAD('next'), chunk, padDoc),\n      st(chunk, PAD('next'), next, padDoc),\n      st(chunk, ns.dc('author'), me, padDoc),\n      st(chunk, ns.sioc('content'), '' as any, padDoc)\n    ]\n    if (indent > 0) {\n      // Do not inherit\n      ins.push(st(chunk, PAD('indent'), indent, padDoc))\n    }\n\n    log('    Fresh chunk ' + label + ' proposed')\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update(del, ins, function (uri, ok, errorBody, _xhr) {\n      if (!ok) {\n        // alert(\"Error writing new line \" + label + \": \" + errorBody);\n        log('    ERROR writing new line ' + label + ': ' + errorBody)\n      } else {\n        const newPart = newPartAfter(tr1, chunk, before)\n        setPartStyle(newPart)\n        newPart.focus() // Note this is delayed\n        if (queueProperty) {\n          log(\n            '    Fresh chunk ' +\n            label +\n            ' updated, queue = ' +\n            queue[queueProperty]\n          )\n          queue[queueProperty] -= 1\n          if (queue[queueProperty] > 0) {\n            log(\n              '    Implementing queued newlines = ' + next.newLinesBefore\n            )\n            newChunk(newPart, before)\n          }\n        }\n      }\n    })\n  }\n\n  const consistencyCheck = function () {\n    const found: { [uri: string]: boolean } = {}\n    let failed = 0\n    function complain2 (msg) {\n      complain(msg)\n      failed++\n    }\n\n    if (!kb.the(subject, PAD('next'))) {\n      complain2('No initial next pointer')\n      return false // can't do linked list\n    }\n    // var chunk = kb.the(subject, PAD('next'))\n    let prev = subject\n    let chunk\n    for (; ;) {\n      chunk = kb.the(prev, PAD('next'))\n      if (!chunk) {\n        complain2('No next pointer from ' + prev)\n      }\n      if (chunk.sameTerm(subject)) {\n        break\n      }\n      prev = chunk\n      const label = chunk.uri.split('#')[1]\n      if (found[chunk.uri]) {\n        complain2('Loop!')\n        return false\n      }\n\n      found[chunk.uri] = true\n      let k = kb.each(chunk, PAD('next')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' next pointer for ' + label)\n      }\n\n      k = kb.each(chunk, PAD('indent')).length\n      if (k > 1) {\n        complain2('Should be 0 or 1 not ' + k + ' indent for ' + label)\n      }\n\n      k = kb.each(chunk, ns.sioc('content')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' contents for ' + label)\n      }\n\n      k = kb.each(chunk, ns.dc('author')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' author for ' + label)\n      }\n\n      const sts = kb.statementsMatching(undefined, ns.sioc('contents'))\n      sts.forEach(function (st) {\n        if (!found[st.subject.value]) {\n          complain2('Loose chunk! ' + st.subject.value)\n        }\n      })\n    }\n    return !failed\n  }\n\n  // Ensure that the display matches the current state of the\n  // @@ TODO really need to refactor this so that we don't need to cast types\n  const sync = function () {\n    // var first = kb.the(subject, PAD('next'))\n    if (kb.each(subject, PAD('next')).length !== 1) {\n      const msg =\n        'Pad: Inconsistent data - NEXT pointers: ' +\n        kb.each(subject, PAD('next')).length\n      log(msg)\n      if ((options as notepadOptions).statusArea) {\n        ((options as notepadOptions).statusArea as HTMLElement).textContent += msg\n      }\n      return\n    }\n    // var last = kb.the(undefined, PAD('previous'), subject)\n    // var chunk = first //  = kb.the(subject, PAD('next'));\n    let row\n\n    // First see which of the logical chunks have existing physical manifestations\n    const manif: any = []\n    // Find which lines correspond to existing chunks\n\n    for (\n      let chunk = kb.the(subject, PAD('next')) as unknown as any;\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      for (let i = 0; i < table.children.length; i++) {\n        const tr: any = table.children[i]\n        if (tr.firstChild) {\n          if (tr.firstChild.subject.sameTerm(chunk)) {\n            manif[chunk.uri] = tr.firstChild\n          }\n        }\n      }\n    }\n\n    // Remove any deleted lines\n    for (let i = table.children.length - 1; i >= 0; i--) {\n      row = table.children[i]\n      if (!manif[row.firstChild.subject.uri]) {\n        table.removeChild(row)\n      }\n    }\n    // Insert any new lines and update old ones\n    row = table.firstChild // might be null\n    for (\n      let chunk = kb.the(subject, PAD('next')) as unknown as any;\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      const text = (kb.any(chunk, ns.sioc('content')) as any).value\n      // superstitious -- don't mess with unchanged input fields\n      // which may be selected by the user\n      if (row && manif[chunk.uri]) {\n        const part = row.firstChild\n        if (text !== part.value) {\n          part.value = text\n        }\n        setPartStyle(part)\n        part.state = 0 // Clear the state machine\n        delete part.lastSent // DEBUG ONLY\n        row = row.nextSibling\n      } else {\n        newPartAfter(row, chunk, true) // actually before\n      }\n    }\n  }\n\n  // Refresh the DOM tree\n\n  const refreshTree = function (root) {\n    if (root.refresh) {\n      root.refresh()\n      return\n    }\n    for (let i = 0; i < root.children.length; i++) {\n      refreshTree(root.children[i])\n    }\n  }\n\n  let reloading = false\n\n  const checkAndSync = function () {\n    log('    reloaded OK')\n    clearStatus()\n    if (!consistencyCheck()) {\n      complain('CONSITENCY CHECK FAILED')\n    } else {\n      refreshTree(table)\n    }\n  }\n\n  const reloadAndSync = function () {\n    if (reloading) {\n      log('   Already reloading - stop')\n      return // once only needed\n    }\n    reloading = true\n    let retryTimeout = 1000 // ms\n    const tryReload = function () {\n      log('try reload - timeout = ' + retryTimeout)\n      if (!updater) {\n        throw new Error('no updater')\n      }\n      updater.reload(updater.store, padDoc, function (ok, message, xhr) {\n        reloading = false\n        if (ok) {\n          checkAndSync()\n        } else {\n          if ((xhr as any).status === 0) {\n            complain(\n              'Network error refreshing the pad. Retrying in ' +\n              retryTimeout / 1000\n            )\n            reloading = true\n            retryTimeout = retryTimeout * 2\n            setTimeout(tryReload, retryTimeout)\n          } else {\n            complain(\n              'Error ' +\n              (xhr as any).status +\n              'refreshing the pad:' +\n              message +\n              '. Stopped. ' +\n              padDoc\n            )\n          }\n        }\n      })\n    }\n    tryReload()\n  }\n\n  table.refresh = sync // Catch downward propagating refresh events\n  table.reloadAndSync = reloadAndSync\n\n  if (!me) log('Warning: must be logged in for pad to be edited')\n\n  if (exists) {\n    log('Existing pad.')\n    if (consistencyCheck()) {\n      sync()\n      if (kb.holds(subject, PAD('next'), subject)) {\n        // Empty list untenable\n        newChunk() // require at least one line\n      }\n    } else {\n      log((table.textContent = 'Inconsistent data. Abort'))\n    }\n  } else {\n    // Make new pad\n    log('No pad exists - making new one.')\n    const insertables = [\n      st(subject, ns.rdf('type'), PAD('Notepad'), padDoc),\n      st(subject, ns.dc('author'), me, padDoc),\n      st(subject, ns.dc('created'), new Date() as any, padDoc),\n      st(subject, PAD('next'), subject, padDoc)\n    ]\n\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update([], insertables, function (uri: string | null | undefined, ok: boolean, errorBody?: string) {\n      if (!ok) {\n        complain(errorBody || '')\n      } else {\n        log('Initial pad created')\n        newChunk() // Add a first chunck\n        // getResults();\n      }\n    })\n  }\n  return table\n}\n\n/**\n * Get the chunks of the notepad\n * They are stored in a RDF linked list\n */\n\n// @ignore exporting this only for the unit test\nexport function getChunks (subject: NamedNode, kb: IndexedFormula) {\n  const chunks: any[] = []\n  for (\n    let chunk: any = kb.the(subject, PAD('next'));\n    !chunk.sameTerm(subject);\n    chunk = kb.the(chunk, PAD('next'))\n  ) {\n    chunks.push(chunk)\n  }\n  return chunks\n}\n\n/**\n *  Encode content to be put in XML or HTML elements\n */\n// @ignore exporting this only for the unit test\nexport function xmlEncode (str) {\n  return str.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n}\n\n/**\n * Convert a notepad to HTML\n *   @param { } pad - the notepad\n *   @param {store} pad - the data store\n */\nexport function notepadToHTML (pad: any, kb: IndexedFormula) {\n  const chunks = getChunks(pad, kb)\n  let html = '<html>\\n  <head>\\n'\n  const title = kb.anyValue(pad, ns.dct('title'))\n  if (title) {\n    html += `    <title>${xmlEncode(title)}</title>\\n`\n  }\n  html += '  </head>\\n  <body>\\n'\n  let level = 0\n\n  function increaseLevel (indent) {\n    for (; level < indent; level++) {\n      html += '<ul>\\n'\n    }\n  }\n\n  function decreaseLevel (indent) {\n    for (; level > indent; level--) {\n      html += '</ul>\\n'\n    }\n  }\n  chunks.forEach(chunk => {\n    const indent = kb.anyJS(chunk, PAD('indent'))\n    const rawContent = kb.anyJS(chunk, ns.sioc('content'))\n    if (!rawContent) return // seed chunk is dummy\n    const content = xmlEncode(rawContent)\n    if (indent < 0) { // negative indent levels represent heading levels\n      decreaseLevel(0)\n      const h = indent >= -3 ? 4 + indent : 1 // -1 -> h4, -2 -> h3\n      html += `\\n<h${h}>${content}</h${h}>\\n`\n    } else { // >= 0\n      if (indent > 0) { // Lists\n        decreaseLevel(indent)\n        increaseLevel(indent)\n        html += `<li>${content}</li>\\n`\n      } else { // indent 0\n        decreaseLevel(indent)\n        html += `<p>${content}</p>\\n`\n      }\n    }\n  }) // foreach chunk\n  // At the end decreaseLevel any open ULs\n  decreaseLevel(0)\n  html += '  </body>\\n</html>\\n'\n  return html\n}\n"],"mappings":"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"}