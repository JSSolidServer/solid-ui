{"version":3,"file":"pad.js","names":["store","solidLogicSingleton","PAD","Namespace","NotepadElement","HTMLElement","NotepadPart","lightColorHash","author","hash","x","split","reduce","a","b","charCodeAt","uri","toString","notepad","dom","padDoc","subject","me","options","exists","table","createElement","kb","Error","updater","setAttribute","upstreamStatus","downstreamStatus","statusArea","t","appendChild","tr","complain","message","upstream","log","errorMessageBlock","clearStatus","_upsteam","innerHTML","setPartStyle","part","colors","pending","chunk","baseStyle","headingCore","headingStyle","any","ns","dc","bgcolor","indent","value","style","removePart","prev","undefined","next","sameTerm","del","statementsMatching","concat","ins","st","NamedNode","label","slice","update","ok","errorMessage","response","row","parentNode","before","previousSibling","removeChild","firstChild","focus","status","state","beep","setTimeout","reloadAndSync","res","changeIndent","delta","current","length","Number","object","newIndent","errorBody","requestDownstreamAction","addListeners","addEventListener","event","queueProperty","queue","keyCode","shiftKey","newChunk","preventDefault","nextSibling","updateStore","old","sioc","newOne","lastSent","xhr","inputChangeListener","_event","newPartAfter","tr1","text","insertBefore","ele","here","tagName","toLowerCase","newThing","push","_xhr","newPart","newLinesBefore","consistencyCheck","found","failed","complain2","msg","the","k","each","sts","forEach","sync","textContent","manif","i","children","refreshTree","root","refresh","reloading","checkAndSync","retryTimeout","tryReload","reload","holds","insertables","rdf","Date","getChunks","chunks","xmlEncode","str","replace","notepadToHTML","pad","html","title","anyValue","dct","level","increaseLevel","decreaseLevel","anyJS","rawContent","content","h"],"sources":["../src/pad.ts"],"sourcesContent":["/** **************\n *   Notepad Widget\n */\n\n/** @module pad\n */\nimport * as ns from './ns'\nimport { Namespace, NamedNode, st, IndexedFormula } from 'rdflib'\nimport { newThing, errorMessageBlock } from './widgets'\nimport { beep } from './utils'\nimport { log } from './debug'\nimport { solidLogicSingleton } from 'solid-logic'\nexport { renderPartipants, participationObject, manageParticipation, recordParticipation } from './participation'\n\nconst store = solidLogicSingleton.store\n\nconst PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\ntype notepadOptions = {\n  statusArea?: HTMLDivElement\n  exists?: boolean\n}\n/**\n * @ignore\n */\nclass NotepadElement extends HTMLElement {\n  subject?: NamedNode\n}\n/**\n * @ignore\n */\nclass NotepadPart extends HTMLElement {\n  subject?: NamedNode | string\n  value?: string\n  state?: Number\n  lastSent?: String\n}\n/** Figure out a random color from my webid\n *\n * @param {NamedNode} author - The author of text being displayed\n * @returns {String} The CSS color generated, constrained to be light for a background color\n */\nexport function lightColorHash (author?: NamedNode): string {\n  const hash = function (x) {\n    return x.split('').reduce(function (a, b) {\n      a = (a << 5) - a + b.charCodeAt(0)\n      return a & a\n    }, 0)\n  }\n  return author && author.uri\n    ? '#' + ((hash(author.uri) & 0xffffff) | 0xc0c0c0).toString(16)\n    : '#ffffff' // c0c0c0  forces pale\n} // no id -> white\n\n/**  notepad\n *\n * @param {HTMLDocument} dom - the web page of the browser\n * @param {NamedNode} padDoc - the document into which the particpation should be shown\n * @param {NamedNode} subject - the thing in which participation is happening\n * @param {NamedNode} me - person who is logged into the pod\n * @param {notepadOptions} options - the options that can be passed in consist of statusArea, exists\n */\nexport function notepad (dom: HTMLDocument, padDoc: NamedNode, subject: NamedNode, me: NamedNode, options?: notepadOptions) {\n  options = options || {}\n  const exists = options.exists\n  const table: any = dom.createElement('table')\n  const kb = store\n\n  if (me && !me.uri) throw new Error('UI.pad.notepad:  Invalid userid')\n\n  const updater = store.updater\n\n  const PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\n  table.setAttribute(\n    'style',\n    'padding: 1em; overflow: auto; resize: horizontal; min-width: 40em;'\n  )\n\n  let upstreamStatus: HTMLElement | null = null\n  let downstreamStatus: HTMLElement | null = null\n\n  if (options.statusArea) {\n    const t = options.statusArea.appendChild(dom.createElement('table'))\n    const tr = t.appendChild(dom.createElement('tr'))\n    upstreamStatus = tr.appendChild(dom.createElement('td'))\n    downstreamStatus = tr.appendChild(dom.createElement('td'))\n\n    if (upstreamStatus) {\n      upstreamStatus.setAttribute('style', 'width:50%')\n    }\n    if (downstreamStatus) {\n      downstreamStatus.setAttribute('style', 'width:50%')\n    }\n  }\n  /* @@ TODO want to look into this, it seems upstream should be a boolean and default to false ?\n  *\n  */\n  const complain = function (message: string, upstream: boolean = false) {\n    log(message)\n    if ((options as notepadOptions).statusArea) {\n      ; (upstream ? upstreamStatus as HTMLElement : downstreamStatus as HTMLElement).appendChild(errorMessageBlock(dom, message, 'pink'))\n    }\n  }\n  // @@ TODO need to refactor so that we don't have to type cast\n  const clearStatus = function (_upsteam?: any) {\n    if ((options as notepadOptions).statusArea) {\n      ((options as notepadOptions).statusArea as HTMLElement).innerHTML = ''\n    }\n  }\n\n  const setPartStyle = function (part: NotepadPart, colors?: string, pending?: any) {\n    const chunk = part.subject\n    colors = colors || ''\n    const baseStyle =\n      'font-size: 100%; font-family: monospace; width: 100%; border: none; white-space: pre-wrap;'\n    const headingCore =\n      'font-family: sans-serif; font-weight: bold;  border: none;'\n    const headingStyle = [\n      'font-size: 110%;  padding-top: 0.5em; padding-bottom: 0.5em; width: 100%;',\n      'font-size: 120%; padding-top: 1em; padding-bottom: 1em; width: 100%;',\n      'font-size: 150%; padding-top: 1em; padding-bottom: 1em; width: 100%;'\n    ]\n\n    const author = kb.any(chunk as any, ns.dc('author'))\n    if (!colors && author) {\n      // Hash the user webid for now -- later allow user selection!\n      const bgcolor = lightColorHash(author as any)\n      colors =\n        'color: ' +\n        (pending ? '#888' : 'black') +\n        '; background-color: ' +\n        bgcolor +\n        ';'\n    }\n\n    // @@ TODO Need to research when this can be an object with the indent stored in value\n    // and when the indent is stored as a Number itself, not in an object.\n    let indent: any = kb.any(chunk as any, PAD('indent'))\n\n    indent = indent ? indent.value : 0\n    const style =\n      indent >= 0\n        ? baseStyle + 'text-indent: ' + indent * 3 + 'em;'\n        : headingCore + headingStyle[-1 - indent]\n    // ? baseStyle + 'padding-left: ' + (indent * 3) + 'em;'\n    part.setAttribute('style', style + colors)\n  }\n\n  const removePart = function (part: NotepadPart) {\n    const chunk = part.subject\n    if (!chunk) throw new Error('No chunk for line to be deleted!') // just in case\n    const prev: any = kb.any(undefined, PAD('next'), chunk as any)\n    const next: any = kb.any(chunk as any, PAD('next'))\n    if (prev.sameTerm(subject) && next.sameTerm(subject)) {\n      // Last one\n      log(\"You can't delete the only line.\")\n      return\n    }\n\n    const del = kb\n      .statementsMatching(chunk as any, undefined, undefined, padDoc)\n      .concat(kb.statementsMatching(undefined, undefined, chunk as any, padDoc))\n    const ins = [st(prev, PAD('next'), next, padDoc)]\n\n    // @@ TODO what should we do if chunk is not a NamedNode should we\n    // assume then it is a string?\n    if (chunk instanceof NamedNode) {\n      const label = chunk.uri.slice(-4)\n\n      log('Deleting line ' + label)\n    }\n    if (!updater) {\n      throw new Error('have no updater')\n    }\n    // @@ TODO below you can see that before is redefined and not a boolean\n    updater.update(del, ins, function (uri, ok, errorMessage, response) {\n      if (ok) {\n        const row = part.parentNode\n        if (row) {\n          const before: any = row.previousSibling\n          if (row.parentNode) {\n            row.parentNode.removeChild(row)\n          }\n          // console.log('    deleted line ' + label + ' ok ' + part.value)\n          if (before && before.firstChild) {\n            // @@ TODO IMPORTANT FOCUS ISN'T A PROPERTY ON A CHILDNODE\n            before.firstChild.focus()\n          }\n        }\n      } else if (response && (response as any).status === 409) {\n        // Conflict\n        setPartStyle(part, 'color: black;  background-color: #ffd;') // yellow\n        part.state = 0 // Needs downstream refresh\n        beep(0.5, 512) // Ooops clash with other person\n        setTimeout(function () {\n          // Ideally, beep! @@\n          reloadAndSync() // Throw away our changes and\n          // updater.requestDownstreamAction(padDoc, reloadAndSync)\n        }, 1000)\n      } else {\n        log('    removePart FAILED ' + chunk + ': ' + errorMessage)\n        log(\"    removePart was deleteing :'\" + del)\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        const res = response ? (response as any).status : ' [no response field] '\n        complain('Error ' + res + ' saving changes: ' + (errorMessage as any).true) // upstream,\n        // updater.requestDownstreamAction(padDoc, reloadAndSync);\n      }\n    })\n  } // removePart\n\n  const changeIndent = function (part: NotepadPart, chunk: string, delta) {\n    const del = kb.statementsMatching(chunk as any, PAD('indent'))\n    const current = del.length ? Number(del[0].object.value) : 0\n    if (current + delta < -3) return //  limit negative indent\n    const newIndent = current + delta\n    const ins = st(chunk as any, PAD('indent'), newIndent, padDoc)\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update(del, ins as any, function (uri, ok, errorBody) {\n      if (!ok) {\n        log(\n          \"Indent change FAILED '\" +\n          newIndent +\n          \"' for \" +\n          padDoc +\n          ': ' +\n          errorBody\n        )\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        updater.requestDownstreamAction(padDoc, reloadAndSync)\n      } else {\n        setPartStyle(part) // Implement the indent\n      }\n    })\n  }\n\n  // Use this sort of code to split the line when return pressed in the middle @@\n  /*\n  function doGetCaretPosition doGetCaretPosition (oField) {\n    var iCaretPos = 0\n        // IE Support\n    if (document.selection) {\n            // Set focus on the element to avoid IE bug\n      oField.focus()\n            // To get cursor position, get empty selection range\n      var oSel = document.selection.createRange()\n            // Move selection start to 0 position\n      oSel.moveStart('character', -oField.value.length)\n            // The caret position is selection length\n      iCaretPos = oSel.text.length\n        // Firefox suppor\n    } else if (oField.selectionStart || oField.selectionStart === '0') {\n      iCaretPos = oField.selectionStart\n    }\n        // Return results\n    return (iCaretPos)\n  }\n  */\n  const addListeners = function (part: any, chunk: any) {\n    part.addEventListener('keydown', function (event) {\n      if (!updater) {\n        throw new Error('no updater')\n      }\n\n      let queueProperty, queue\n      //  up 38; down 40; left 37; right 39     tab 9; shift 16; escape 27\n      switch (event.keyCode) {\n        case 13: // Return\n        {\n          const before: NotepadElement = event.shiftKey\n          log('enter') // Shift-return inserts before -- only way to add to top of pad.\n          if (before) {\n            queue = kb.any(undefined, PAD('next'), chunk)\n            queueProperty = 'newlinesAfter'\n          } else {\n            queue = kb.any(chunk, PAD('next'))\n            queueProperty = 'newlinesBefore'\n          }\n          queue[queueProperty] = queue[queueProperty] || 0\n          queue[queueProperty] += 1\n          if (queue[queueProperty] > 1) {\n            log('    queueing newline queue = ' + queue[queueProperty])\n            return\n          }\n          log('    go ahead line before ' + queue[queueProperty])\n          newChunk(part, before) // was document.activeElement\n          break\n        }\n        case 8: // Delete\n          if (part.value.length === 0) {\n            log(\n              'Delete key line ' + chunk.uri.slice(-4) + ' state ' + part.state\n            )\n\n            switch (part.state) {\n              case 1: // contents being sent\n              case 2: // contents need to be sent again\n                part.state = 4 // delete me\n                return\n              case 3: // being deleted already\n              case 4: // already deleme state\n                return\n              case undefined:\n              case 0:\n                part.state = 3 // being deleted\n                removePart(part)\n                event.preventDefault()\n                break // continue\n              default:\n                throw new Error('pad: Unexpected state ' + part)\n            }\n          }\n          break\n        case 9: // Tab\n        {\n          const delta = event.shiftKey ? -1 : 1\n          changeIndent(part, chunk, delta)\n          event.preventDefault() // default is to highlight next field\n          break\n        }\n        case 27: // ESC\n          log('escape')\n          updater.requestDownstreamAction(padDoc, reloadAndSync)\n          event.preventDefault()\n          break\n\n        case 38: // Up\n          if (part.parentNode.previousSibling) {\n            part.parentNode.previousSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        case 40: // Down\n          if (part.parentNode.nextSibling) {\n            part.parentNode.nextSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        default:\n      }\n    })\n\n    const updateStore = function (part: NotepadPart) {\n      const chunk: any = part.subject\n      setPartStyle(part, undefined, true)\n      const old = (kb.any(chunk, ns.sioc('content')) as any).value\n      const del = [st(chunk, ns.sioc('content'), old, padDoc)]\n      let ins\n      if (part.value) {\n        ins = [st(chunk, ns.sioc('content'), part.value as any, padDoc)]\n      }\n      const newOne = part.value\n\n      // DEBUGGING ONLY\n      if (part.lastSent) {\n        if (old !== part.lastSent) {\n          throw new Error(\n            \"Out of order, last sent expected '\" +\n            old +\n            \"' but found '\" +\n            part.lastSent +\n            \"'\"\n          )\n        }\n      }\n      part.lastSent = newOne\n\n      /* console.log(\n        ' Patch proposed to ' +\n        chunk.uri.slice(-4) +\n        \" '\" +\n        old +\n        \"' -> '\" +\n        newOne +\n        \"' \"\n      ) */\n      if (!updater) {\n        throw new Error('no updater')\n      }\n\n      updater.update(del, ins, function (uri, ok, errorBody, xhr) {\n        if (!ok) {\n          // alert(\"clash \" + errorBody);\n          log(\n            '    patch FAILED ' +\n            (xhr as any).status +\n            \" for '\" +\n            old +\n            \"' -> '\" +\n            newOne +\n            \"': \" +\n            errorBody\n          )\n          if ((xhr as any).status === 409) {\n            // Conflict -  @@ we assume someone else\n            setPartStyle(part, 'color: black;  background-color: #fdd;')\n            part.state = 0 // Needs downstream refresh\n            beep(0.5, 512) // Ooops clash with other person\n            setTimeout(function () {\n              updater.requestDownstreamAction(padDoc, reloadAndSync)\n            }, 1000)\n          } else {\n            setPartStyle(part, 'color: black;  background-color: #fdd;') // failed pink\n            part.state = 0\n            complain(\n              '    Error ' + (xhr as any).status + ' sending data: ' + errorBody,\n              true\n            )\n            beep(1.0, 128) // Other\n            // @@@   Do soemthing more serious with other errors eg auth, etc\n          }\n        } else {\n          clearStatus(true) // upstream\n          setPartStyle(part) // synced\n          log(\"    Patch ok '\" + old + \"' -> '\" + newOne + \"' \")\n\n          if (part.state === 4) {\n            //  delete me\n            part.state = 3\n            removePart(part)\n          } else if (part.state === 3) {\n            // being deleted\n            // pass\n          } else if (part.state === 2) {\n            part.state = 1 // pending: lock\n            updateStore(part)\n          } else {\n            part.state = 0 // clear lock\n          }\n        }\n      })\n    }\n\n    part.addEventListener('input', function inputChangeListener (_event) {\n      // debug.log(\"input changed \"+part.value);\n      setPartStyle(part, undefined, true) // grey out - not synced\n      log(\n        'Input event state ' + part.state + \" value '\" + part.value + \"'\"\n      )\n      switch (part.state) {\n        case 3: // being deleted\n          return\n        case 4: // needs to be deleted\n          return\n        case 2: // needs content updating, we know\n          return\n        case 1:\n          part.state = 2 // lag we need another patch\n          return\n        case 0:\n        case undefined:\n          part.state = 1 // being upadted\n          updateStore(part)\n      }\n    }) // listener\n  } // addlisteners\n\n  // @@ TODO Need to research before as it appears to be used as an Element and a boolean\n  const newPartAfter = function (tr1: HTMLTableElement, chunk: String, before?: NotepadElement | boolean) {\n    // @@ take chunk and add listeners\n    let text: any = kb.any(chunk as any, ns.sioc('content'))\n    text = text ? text.value : ''\n    const tr = dom.createElement('tr')\n    if (before) {\n      table.insertBefore(tr, tr1)\n    } else {\n      // after\n      if (tr1 && tr1.nextSibling) {\n        table.insertBefore(tr, tr1.nextSibling)\n      } else {\n        table.appendChild(tr)\n      }\n    }\n    const part: any = tr.appendChild(dom.createElement('input'))\n    part.subject = chunk\n    part.setAttribute('type', 'text')\n    part.value = text\n    if (me) {\n      setPartStyle(part, '')\n      addListeners(part, chunk)\n    } else {\n      setPartStyle(part, 'color: #222; background-color: #fff')\n      log(\"Note can't add listeners - not logged in\")\n    }\n    return part\n  }\n\n  /* @@ TODO we need to look at indent, it can be a Number or an Object this doesn't seem correct.\n  */\n  const newChunk = function (ele?: NotepadElement, before?: NotepadElement) {\n    // element of chunk being split\n    const kb = store\n    let indent: any = 0\n    let queueProperty: string | null = null\n    let here, prev, next, queue, tr1: any\n\n    if (ele) {\n      if (ele.tagName.toLowerCase() !== 'input') {\n        log('return pressed when current document is: ' + ele.tagName)\n      }\n      here = ele.subject\n      indent = kb.any(here, PAD('indent'))\n      indent = indent ? Number(indent.value) : 0\n      if (before) {\n        prev = kb.any(undefined, PAD('next'), here)\n        next = here\n        queue = prev\n        queueProperty = 'newlinesAfter'\n      } else {\n        prev = here\n        next = kb.any(here, PAD('next'))\n        queue = next\n        queueProperty = 'newlinesBefore'\n      }\n      tr1 = ele.parentNode\n    } else {\n      prev = subject\n      next = subject\n      tr1 = undefined\n    }\n\n    const chunk = newThing(padDoc)\n    const label = chunk.uri.slice(-4)\n\n    const del = [st(prev, PAD('next'), next, padDoc)]\n    const ins = [\n      st(prev, PAD('next'), chunk, padDoc),\n      st(chunk, PAD('next'), next, padDoc),\n      st(chunk, ns.dc('author'), me, padDoc),\n      st(chunk, ns.sioc('content'), '' as any, padDoc)\n    ]\n    if (indent > 0) {\n      // Do not inherit\n      ins.push(st(chunk, PAD('indent'), indent, padDoc))\n    }\n\n    log('    Fresh chunk ' + label + ' proposed')\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update(del, ins, function (uri, ok, errorBody, _xhr) {\n      if (!ok) {\n        // alert(\"Error writing new line \" + label + \": \" + errorBody);\n        log('    ERROR writing new line ' + label + ': ' + errorBody)\n      } else {\n        const newPart = newPartAfter(tr1, chunk, before)\n        setPartStyle(newPart)\n        newPart.focus() // Note this is delayed\n        if (queueProperty) {\n          log(\n            '    Fresh chunk ' +\n            label +\n            ' updated, queue = ' +\n            queue[queueProperty]\n          )\n          queue[queueProperty] -= 1\n          if (queue[queueProperty] > 0) {\n            log(\n              '    Implementing queued newlines = ' + next.newLinesBefore\n            )\n            newChunk(newPart, before)\n          }\n        }\n      }\n    })\n  }\n\n  const consistencyCheck = function () {\n    const found: { [uri: string]: boolean } = {}\n    let failed = 0\n    function complain2 (msg) {\n      complain(msg)\n      failed++\n    }\n\n    if (!kb.the(subject, PAD('next'))) {\n      complain2('No initial next pointer')\n      return false // can't do linked list\n    }\n    // var chunk = kb.the(subject, PAD('next'))\n    let prev = subject\n    let chunk\n    for (; ;) {\n      chunk = kb.the(prev, PAD('next'))\n      if (!chunk) {\n        complain2('No next pointer from ' + prev)\n      }\n      if (chunk.sameTerm(subject)) {\n        break\n      }\n      prev = chunk\n      const label = chunk.uri.split('#')[1]\n      if (found[chunk.uri]) {\n        complain2('Loop!')\n        return false\n      }\n\n      found[chunk.uri] = true\n      let k = kb.each(chunk, PAD('next')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' next pointer for ' + label)\n      }\n\n      k = kb.each(chunk, PAD('indent')).length\n      if (k > 1) {\n        complain2('Should be 0 or 1 not ' + k + ' indent for ' + label)\n      }\n\n      k = kb.each(chunk, ns.sioc('content')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' contents for ' + label)\n      }\n\n      k = kb.each(chunk, ns.dc('author')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' author for ' + label)\n      }\n\n      const sts = kb.statementsMatching(undefined, ns.sioc('contents'))\n      sts.forEach(function (st) {\n        if (!found[st.subject.value]) {\n          complain2('Loose chunk! ' + st.subject.value)\n        }\n      })\n    }\n    return !failed\n  }\n\n  // Ensure that the display matches the current state of the\n  // @@ TODO really need to refactor this so that we don't need to cast types\n  const sync = function () {\n    // var first = kb.the(subject, PAD('next'))\n    if (kb.each(subject, PAD('next')).length !== 1) {\n      const msg =\n        'Pad: Inconsistent data - NEXT pointers: ' +\n        kb.each(subject, PAD('next')).length\n      log(msg)\n      if ((options as notepadOptions).statusArea) {\n        ((options as notepadOptions).statusArea as HTMLElement).textContent += msg\n      }\n      return\n    }\n    // var last = kb.the(undefined, PAD('previous'), subject)\n    // var chunk = first //  = kb.the(subject, PAD('next'));\n    let row\n\n    // First see which of the logical chunks have existing physical manifestations\n    const manif: any = []\n    // Find which lines correspond to existing chunks\n\n    for (\n      let chunk = kb.the(subject, PAD('next')) as unknown as any;\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      for (let i = 0; i < table.children.length; i++) {\n        const tr: any = table.children[i]\n        if (tr.firstChild) {\n          if (tr.firstChild.subject.sameTerm(chunk)) {\n            manif[chunk.uri] = tr.firstChild\n          }\n        }\n      }\n    }\n\n    // Remove any deleted lines\n    for (let i = table.children.length - 1; i >= 0; i--) {\n      row = table.children[i]\n      if (!manif[row.firstChild.subject.uri]) {\n        table.removeChild(row)\n      }\n    }\n    // Insert any new lines and update old ones\n    row = table.firstChild // might be null\n    for (\n      let chunk = kb.the(subject, PAD('next')) as unknown as any;\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      const text = (kb.any(chunk, ns.sioc('content')) as any).value\n      // superstitious -- don't mess with unchanged input fields\n      // which may be selected by the user\n      if (row && manif[chunk.uri]) {\n        const part = row.firstChild\n        if (text !== part.value) {\n          part.value = text\n        }\n        setPartStyle(part)\n        part.state = 0 // Clear the state machine\n        delete part.lastSent // DEBUG ONLY\n        row = row.nextSibling\n      } else {\n        newPartAfter(row, chunk, true) // actually before\n      }\n    }\n  }\n\n  // Refresh the DOM tree\n\n  const refreshTree = function (root) {\n    if (root.refresh) {\n      root.refresh()\n      return\n    }\n    for (let i = 0; i < root.children.length; i++) {\n      refreshTree(root.children[i])\n    }\n  }\n\n  let reloading = false\n\n  const checkAndSync = function () {\n    log('    reloaded OK')\n    clearStatus()\n    if (!consistencyCheck()) {\n      complain('CONSITENCY CHECK FAILED')\n    } else {\n      refreshTree(table)\n    }\n  }\n\n  const reloadAndSync = function () {\n    if (reloading) {\n      log('   Already reloading - stop')\n      return // once only needed\n    }\n    reloading = true\n    let retryTimeout = 1000 // ms\n    const tryReload = function () {\n      log('try reload - timeout = ' + retryTimeout)\n      if (!updater) {\n        throw new Error('no updater')\n      }\n      updater.reload(updater.store, padDoc, function (ok, message, xhr) {\n        reloading = false\n        if (ok) {\n          checkAndSync()\n        } else {\n          if ((xhr as any).status === 0) {\n            complain(\n              'Network error refreshing the pad. Retrying in ' +\n              retryTimeout / 1000\n            )\n            reloading = true\n            retryTimeout = retryTimeout * 2\n            setTimeout(tryReload, retryTimeout)\n          } else {\n            complain(\n              'Error ' +\n              (xhr as any).status +\n              'refreshing the pad:' +\n              message +\n              '. Stopped. ' +\n              padDoc\n            )\n          }\n        }\n      })\n    }\n    tryReload()\n  }\n\n  table.refresh = sync // Catch downward propagating refresh events\n  table.reloadAndSync = reloadAndSync\n\n  if (!me) log('Warning: must be logged in for pad to be edited')\n\n  if (exists) {\n    log('Existing pad.')\n    if (consistencyCheck()) {\n      sync()\n      if (kb.holds(subject, PAD('next'), subject)) {\n        // Empty list untenable\n        newChunk() // require at least one line\n      }\n    } else {\n      log((table.textContent = 'Inconsistent data. Abort'))\n    }\n  } else {\n    // Make new pad\n    log('No pad exists - making new one.')\n    const insertables = [\n      st(subject, ns.rdf('type'), PAD('Notepad'), padDoc),\n      st(subject, ns.dc('author'), me, padDoc),\n      st(subject, ns.dc('created'), new Date() as any, padDoc),\n      st(subject, PAD('next'), subject, padDoc)\n    ]\n\n    if (!updater) {\n      throw new Error('no updater')\n    }\n    updater.update([], insertables, function (uri: string | null | undefined, ok: boolean, errorBody?: string) {\n      if (!ok) {\n        complain(errorBody || '')\n      } else {\n        log('Initial pad created')\n        newChunk() // Add a first chunck\n        // getResults();\n      }\n    })\n  }\n  return table\n}\n\n/**\n * Get the chunks of the notepad\n * They are stored in a RDF linked list\n */\n\n// @ignore exporting this only for the unit test\nexport function getChunks (subject: NamedNode, kb: IndexedFormula) {\n  const chunks: any[] = []\n  for (\n    let chunk: any = kb.the(subject, PAD('next'));\n    !chunk.sameTerm(subject);\n    chunk = kb.the(chunk, PAD('next'))\n  ) {\n    chunks.push(chunk)\n  }\n  return chunks\n}\n\n/**\n *  Encode content to be put in XML or HTML elements\n */\n// @ignore exporting this only for the unit test\nexport function xmlEncode (str) {\n  return str.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n}\n\n/**\n * Convert a notepad to HTML\n *   @param { } pad - the notepad\n *   @param {store} pad - the data store\n */\nexport function notepadToHTML (pad: any, kb: IndexedFormula) {\n  const chunks = getChunks(pad, kb)\n  let html = '<html>\\n  <head>\\n'\n  const title = kb.anyValue(pad, ns.dct('title'))\n  if (title) {\n    html += `    <title>${xmlEncode(title)}</title>\\n`\n  }\n  html += '  </head>\\n  <body>\\n'\n  let level = 0\n\n  function increaseLevel (indent) {\n    for (; level < indent; level++) {\n      html += '<ul>\\n'\n    }\n  }\n\n  function decreaseLevel (indent) {\n    for (; level > indent; level--) {\n      html += '</ul>\\n'\n    }\n  }\n  chunks.forEach(chunk => {\n    const indent = kb.anyJS(chunk, PAD('indent'))\n    const rawContent = kb.anyJS(chunk, ns.sioc('content'))\n    if (!rawContent) return // seed chunk is dummy\n    const content = xmlEncode(rawContent)\n    if (indent < 0) { // negative indent levels represent heading levels\n      decreaseLevel(0)\n      const h = indent >= -3 ? 4 + indent : 1 // -1 -> h4, -2 -> h3\n      html += `\\n<h${h}>${content}</h${h}>\\n`\n    } else { // >= 0\n      if (indent > 0) { // Lists\n        decreaseLevel(indent)\n        increaseLevel(indent)\n        html += `<li>${content}</li>\\n`\n      } else { // indent 0\n        decreaseLevel(indent)\n        html += `<p>${content}</p>\\n`\n      }\n    }\n  }) // foreach chunk\n  // At the end decreaseLevel any open ULs\n  decreaseLevel(0)\n  html += '  </body>\\n</html>\\n'\n  return html\n}\n"],"mappings":"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"}