{"version":3,"sources":["../src/pad.ts"],"names":["PAD","NotepadElement","HTMLElement","NotepadPart","lightColorHash","author","hash","x","split","reduce","a","b","charCodeAt","uri","toString","notepad","dom","padDoc","subject","me","options","exists","table","createElement","kb","store","Error","updater","setAttribute","upstreamStatus","downstreamStatus","statusArea","t","appendChild","tr","complain","message","upstream","clearStatus","_upsteam","innerHTML","setPartStyle","part","colors","pending","chunk","baseStyle","headingCore","headingStyle","any","ns","dc","bgcolor","indent","value","style","removePart","prev","undefined","next","sameTerm","del","statementsMatching","concat","ins","NamedNode","label","slice","update","ok","errorMessage","response","row","parentNode","before","previousSibling","removeChild","firstChild","focus","status","state","setTimeout","reloadAndSync","res","changeIndent","delta","current","length","Number","object","newIndent","errorBody","requestDownstreamAction","addListeners","addEventListener","event","queueProperty","queue","keyCode","shiftKey","newChunk","preventDefault","nextSibling","updateStore","old","sioc","newOne","lastSent","xhr","inputChangeListener","_event","newPartAfter","tr1","text","insertBefore","ele","here","tagName","toLowerCase","push","_xhr","newPart","newLinesBefore","consistencyCheck","found","failed","complain2","msg","the","k","each","sts","map","st","sync","textContent","manif","i","children","refreshTree","root","refresh","reloading","checkAndSync","retryTimeout","tryReload","reload","holds","insertables","rdf","Date","getChunks","chunks","xmlEncode","str","replace","notepadToHTML","pad","html","title","anyValue","dct","level","increaseLevel","decreaseLevel","forEach","anyJS","rawContent","content","h"],"mappings":"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","sourcesContent":["/** **************\n *   Notepad Widget\n */\n\n/** @module pad\n */\nimport store from './store'\nimport ns from './ns'\nimport { Namespace, NamedNode, st } from 'rdflib'\nimport { newThing, errorMessageBlock } from './widgets'\nimport { beep } from './utils'\nimport { log } from './debug'\nexport { renderPartipants, participationObject, manageParticipation, recordParticipation } from './participation'\n\nconst PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\ntype notepadOptions = {\n  statusArea?: HTMLDivElement\n  exists?: boolean\n}\n/**\n * @ignore\n */\nclass NotepadElement extends HTMLElement {\n  subject?: NamedNode\n}\n/**\n * @ignore\n */\nclass NotepadPart extends HTMLElement {\n  subject?: NamedNode | string\n  value?: string\n  state?: Number\n  lastSent?: String\n}\n/** Figure out a random color from my webid\n *\n * @param {NamedNode} author - The author of text being displayed\n * @returns {String} The CSS color generated, constrained to be light for a background color\n */\nexport function lightColorHash (author?: NamedNode): string {\n  const hash = function (x) {\n    return x.split('').reduce(function (a, b) {\n      a = (a << 5) - a + b.charCodeAt(0)\n      return a & a\n    }, 0)\n  }\n  return author && author.uri\n    ? '#' + ((hash(author.uri) & 0xffffff) | 0xc0c0c0).toString(16)\n    : '#ffffff' // c0c0c0  forces pale\n} // no id -> white\n\n/**  notepad\n *\n * @param {HTMLDocument} dom - the web page of the browser\n * @param {NamedNode} padDoc - the document into which the particpation should be shown\n * @param {NamedNode} subject - the thing in which participation is happening\n * @param {NamedNode} me - person who is logged into the pod\n * @param {notepadOptions} options - the options that can be passed in consist of statusArea, exists\n */\nexport function notepad (dom: HTMLDocument, padDoc: NamedNode, subject: NamedNode, me: NamedNode, options?: notepadOptions) {\n  options = options || {}\n  const exists = options.exists\n  const table: any = dom.createElement('table')\n  const kb = store\n\n  if (me && !me.uri) throw new Error('UI.pad.notepad:  Invalid userid')\n\n  const updater = store.updater\n\n  const PAD = Namespace('http://www.w3.org/ns/pim/pad#')\n\n  table.setAttribute(\n    'style',\n    'padding: 1em; overflow: auto; resize: horizontal; min-width: 40em;'\n  )\n\n  let upstreamStatus: HTMLElement | null = null\n  let downstreamStatus: HTMLElement | null = null\n\n  if (options.statusArea) {\n    const t = options.statusArea.appendChild(dom.createElement('table'))\n    const tr = t.appendChild(dom.createElement('tr'))\n    upstreamStatus = tr.appendChild(dom.createElement('td'))\n    downstreamStatus = tr.appendChild(dom.createElement('td'))\n\n    if (upstreamStatus) {\n      upstreamStatus.setAttribute('style', 'width:50%')\n    }\n    if (downstreamStatus) {\n      downstreamStatus.setAttribute('style', 'width:50%')\n    }\n  }\n  /* @@ TODO want to look into this, it seems upstream should be a boolean and default to false ?\n  *\n  */\n  const complain = function (message: string, upstream: boolean = false) {\n    log(message)\n    if ((options as notepadOptions).statusArea) {\n      ; (upstream ? upstreamStatus as HTMLElement : downstreamStatus as HTMLElement).appendChild(errorMessageBlock(dom, message, 'pink'))\n    }\n  }\n  // @@ TODO need to refactor so that we don't have to type cast\n  const clearStatus = function (_upsteam?: any) {\n    if ((options as notepadOptions).statusArea) {\n      ((options as notepadOptions).statusArea as HTMLElement).innerHTML = ''\n    }\n  }\n\n  const setPartStyle = function (part: NotepadPart, colors?: string, pending?: any) {\n    const chunk = part.subject\n    colors = colors || ''\n    const baseStyle =\n      'font-size: 100%; font-family: monospace; width: 100%; border: none; white-space: pre-wrap;'\n    const headingCore =\n      'font-family: sans-serif; font-weight: bold;  border: none;'\n    const headingStyle = [\n      'font-size: 110%;  padding-top: 0.5em; padding-bottom: 0.5em; width: 100%;',\n      'font-size: 120%; padding-top: 1em; padding-bottom: 1em; width: 100%;',\n      'font-size: 150%; padding-top: 1em; padding-bottom: 1em; width: 100%;'\n    ]\n\n    const author = kb.any(chunk, ns.dc('author'))\n    if (!colors && author) {\n      // Hash the user webid for now -- later allow user selection!\n      const bgcolor = lightColorHash(author)\n      colors =\n        'color: ' +\n        (pending ? '#888' : 'black') +\n        '; background-color: ' +\n        bgcolor +\n        ';'\n    }\n\n    // @@ TODO Need to research when this can be an object with the indent stored in value\n    // and when the indent is stored as a Number itself, not in an object.\n    let indent = kb.any(chunk, PAD('indent'))\n\n    indent = indent ? indent.value : 0\n    const style =\n      indent >= 0\n        ? baseStyle + 'text-indent: ' + indent * 3 + 'em;'\n        : headingCore + headingStyle[-1 - indent]\n    // ? baseStyle + 'padding-left: ' + (indent * 3) + 'em;'\n    part.setAttribute('style', style + colors)\n  }\n\n  const removePart = function (part: NotepadPart) {\n    const chunk = part.subject\n    if (!chunk) throw new Error('No chunk for line to be deleted!') // just in case\n    const prev = kb.any(undefined, PAD('next'), chunk)\n    const next = kb.any(chunk, PAD('next'))\n    if (prev.sameTerm(subject) && next.sameTerm(subject)) {\n      // Last one\n      log(\"You can't delete the only line.\")\n      return\n    }\n\n    const del = kb\n      .statementsMatching(chunk, undefined, undefined, padDoc)\n      .concat(kb.statementsMatching(undefined, undefined, chunk, padDoc))\n    const ins = [st(prev, PAD('next'), next, padDoc)]\n\n    // @@ TODO what should we do if chunk is not a NamedNode should we\n    // assume then it is a string?\n    if (chunk instanceof NamedNode) {\n      const label = chunk.uri.slice(-4)\n\n      log('Deleting line ' + label)\n    }\n\n    // @@ TODO below you can see that before is redefined and not a boolean\n    updater.update(del, ins, function (uri, ok, errorMessage, response) {\n      if (ok) {\n        const row = part.parentNode\n        if (row) {\n          const before: any = row.previousSibling\n          if (row.parentNode) {\n            row.parentNode.removeChild(row)\n          }\n          // console.log('    deleted line ' + label + ' ok ' + part.value)\n          if (before && before.firstChild) {\n            // @@ TODO IMPORTANT FOCUS ISN'T A PROPERTY ON A CHILDNODE\n            before.firstChild.focus()\n          }\n        }\n      } else if (response && response.status === 409) {\n        // Conflict\n        setPartStyle(part, 'color: black;  background-color: #ffd;') // yellow\n        part.state = 0 // Needs downstream refresh\n        beep(0.5, 512) // Ooops clash with other person\n        setTimeout(function () {\n          // Ideally, beep! @@\n          reloadAndSync() // Throw away our changes and\n          // updater.requestDownstreamAction(padDoc, reloadAndSync)\n        }, 1000)\n      } else {\n        log('    removePart FAILED ' + chunk + ': ' + errorMessage)\n        log(\"    removePart was deleteing :'\" + del)\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        const res = response ? response.status : ' [no response field] '\n        complain('Error ' + res + ' saving changes: ' + errorMessage.true) // upstream,\n        // updater.requestDownstreamAction(padDoc, reloadAndSync);\n      }\n    })\n  } // removePart\n\n  const changeIndent = function (part: NotepadPart, chunk: string, delta) {\n    const del = kb.statementsMatching(chunk, PAD('indent'))\n    const current = del.length ? Number(del[0].object.value) : 0\n    if (current + delta < -3) return //  limit negative indent\n    const newIndent = current + delta\n    const ins = st(chunk as any, PAD('indent'), newIndent, padDoc)\n    updater.update(del, ins, function (uri, ok, errorBody) {\n      if (!ok) {\n        log(\n          \"Indent change FAILED '\" +\n          newIndent +\n          \"' for \" +\n          padDoc +\n          ': ' +\n          errorBody\n        )\n        setPartStyle(part, 'color: black;  background-color: #fdd;') // failed\n        updater.requestDownstreamAction(padDoc, reloadAndSync)\n      } else {\n        setPartStyle(part) // Implement the indent\n      }\n    })\n  }\n\n  // Use this sort of code to split the line when return pressed in the middle @@\n  /*\n  function doGetCaretPosition doGetCaretPosition (oField) {\n    var iCaretPos = 0\n        // IE Support\n    if (document.selection) {\n            // Set focus on the element to avoid IE bug\n      oField.focus()\n            // To get cursor position, get empty selection range\n      var oSel = document.selection.createRange()\n            // Move selection start to 0 position\n      oSel.moveStart('character', -oField.value.length)\n            // The caret position is selection length\n      iCaretPos = oSel.text.length\n        // Firefox suppor\n    } else if (oField.selectionStart || oField.selectionStart === '0') {\n      iCaretPos = oField.selectionStart\n    }\n        // Return results\n    return (iCaretPos)\n  }\n  */\n  const addListeners = function (part: any, chunk: any) {\n    part.addEventListener('keydown', function (event) {\n      let queueProperty, queue\n      //  up 38; down 40; left 37; right 39     tab 9; shift 16; escape 27\n      switch (event.keyCode) {\n        case 13: // Return\n        {\n          const before: NotepadElement = event.shiftKey\n          log('enter') // Shift-return inserts before -- only way to add to top of pad.\n          if (before) {\n            queue = kb.any(undefined, PAD('next'), chunk)\n            queueProperty = 'newlinesAfter'\n          } else {\n            queue = kb.any(chunk, PAD('next'))\n            queueProperty = 'newlinesBefore'\n          }\n          queue[queueProperty] = queue[queueProperty] || 0\n          queue[queueProperty] += 1\n          if (queue[queueProperty] > 1) {\n            log('    queueing newline queue = ' + queue[queueProperty])\n            return\n          }\n          log('    go ahead line before ' + queue[queueProperty])\n          newChunk(part, before) // was document.activeElement\n          break\n        }\n        case 8: // Delete\n          if (part.value.length === 0) {\n            log(\n              'Delete key line ' + chunk.uri.slice(-4) + ' state ' + part.state\n            )\n\n            switch (part.state) {\n              case 1: // contents being sent\n              case 2: // contents need to be sent again\n                part.state = 4 // delete me\n                return\n              case 3: // being deleted already\n              case 4: // already deleme state\n                return\n              case undefined:\n              case 0:\n                part.state = 3 // being deleted\n                removePart(part)\n                event.preventDefault()\n                break // continue\n              default:\n                throw new Error('pad: Unexpected state ' + part)\n            }\n          }\n          break\n        case 9: // Tab\n        {\n          const delta = event.shiftKey ? -1 : 1\n          changeIndent(part, chunk, delta)\n          event.preventDefault() // default is to highlight next field\n          break\n        }\n        case 27: // ESC\n          log('escape')\n          updater.requestDownstreamAction(padDoc, reloadAndSync)\n          event.preventDefault()\n          break\n\n        case 38: // Up\n          if (part.parentNode.previousSibling) {\n            part.parentNode.previousSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        case 40: // Down\n          if (part.parentNode.nextSibling) {\n            part.parentNode.nextSibling.firstChild.focus()\n            event.preventDefault()\n          }\n          break\n\n        default:\n      }\n    })\n\n    const updateStore = function (part: NotepadPart) {\n      const chunk: any = part.subject\n\n      setPartStyle(part, undefined, true)\n      const old = kb.any(chunk, ns.sioc('content')).value\n      const del = [st(chunk, ns.sioc('content'), old, padDoc)]\n      let ins\n      if (part.value) {\n        ins = [st(chunk, ns.sioc('content'), part.value as any, padDoc)]\n      }\n      const newOne = part.value\n\n      // DEBUGGING ONLY\n      if (part.lastSent) {\n        if (old !== part.lastSent) {\n          throw new Error(\n            \"Out of order, last sent expected '\" +\n            old +\n            \"' but found '\" +\n            part.lastSent +\n            \"'\"\n          )\n        }\n      }\n      part.lastSent = newOne\n\n      /* console.log(\n        ' Patch proposed to ' +\n        chunk.uri.slice(-4) +\n        \" '\" +\n        old +\n        \"' -> '\" +\n        newOne +\n        \"' \"\n      ) */\n\n      updater.update(del, ins, function (uri, ok, errorBody, xhr) {\n        if (!ok) {\n          // alert(\"clash \" + errorBody);\n          log(\n            '    patch FAILED ' +\n            xhr.status +\n            \" for '\" +\n            old +\n            \"' -> '\" +\n            newOne +\n            \"': \" +\n            errorBody\n          )\n          if (xhr.status === 409) {\n            // Conflict -  @@ we assume someone else\n            setPartStyle(part, 'color: black;  background-color: #fdd;')\n            part.state = 0 // Needs downstream refresh\n            beep(0.5, 512) // Ooops clash with other person\n            setTimeout(function () {\n              updater.requestDownstreamAction(padDoc, reloadAndSync)\n            }, 1000)\n          } else {\n            setPartStyle(part, 'color: black;  background-color: #fdd;') // failed pink\n            part.state = 0\n            complain(\n              '    Error ' + xhr.status + ' sending data: ' + errorBody,\n              true\n            )\n            beep(1.0, 128) // Other\n            // @@@   Do soemthing more serious with other errors eg auth, etc\n          }\n        } else {\n          clearStatus(true) // upstream\n          setPartStyle(part) // synced\n          log(\"    Patch ok '\" + old + \"' -> '\" + newOne + \"' \")\n\n          if (part.state === 4) {\n            //  delete me\n            part.state = 3\n            removePart(part)\n          } else if (part.state === 3) {\n            // being deleted\n            // pass\n          } else if (part.state === 2) {\n            part.state = 1 // pending: lock\n            updateStore(part)\n          } else {\n            part.state = 0 // clear lock\n          }\n        }\n      })\n    }\n\n    part.addEventListener('input', function inputChangeListener (_event) {\n      // debug.log(\"input changed \"+part.value);\n      setPartStyle(part, undefined, true) // grey out - not synced\n      log(\n        'Input event state ' + part.state + \" value '\" + part.value + \"'\"\n      )\n      switch (part.state) {\n        case 3: // being deleted\n          return\n        case 4: // needs to be deleted\n          return\n        case 2: // needs content updating, we know\n          return\n        case 1:\n          part.state = 2 // lag we need another patch\n          return\n        case 0:\n        case undefined:\n          part.state = 1 // being upadted\n          updateStore(part)\n      }\n    }) // listener\n  } // addlisteners\n\n  // @@ TODO Need to research before as it appears to be used as an Element and a boolean\n  const newPartAfter = function (tr1: HTMLTableElement, chunk: String, before?: NotepadElement | boolean) {\n    // @@ take chunk and add listeners\n    let text = kb.any(chunk, ns.sioc('content'))\n    text = text ? text.value : ''\n    const tr = dom.createElement('tr')\n    if (before) {\n      table.insertBefore(tr, tr1)\n    } else {\n      // after\n      if (tr1 && tr1.nextSibling) {\n        table.insertBefore(tr, tr1.nextSibling)\n      } else {\n        table.appendChild(tr)\n      }\n    }\n    const part: any = tr.appendChild(dom.createElement('input'))\n    part.subject = chunk\n    part.setAttribute('type', 'text')\n    part.value = text\n    if (me) {\n      setPartStyle(part, '')\n      addListeners(part, chunk)\n    } else {\n      setPartStyle(part, 'color: #222; background-color: #fff')\n      log(\"Note can't add listeners - not logged in\")\n    }\n    return part\n  }\n\n  /* @@ TODO we need to look at indent, it can be a Number or an Object this doesn't seem correct.\n  */\n  const newChunk = function (ele?: NotepadElement, before?: NotepadElement) {\n    // element of chunk being split\n    const kb = store\n    let indent: any = 0\n    let queueProperty: string | null = null\n    let here, prev, next, queue, tr1: any\n\n    if (ele) {\n      if (ele.tagName.toLowerCase() !== 'input') {\n        log('return pressed when current document is: ' + ele.tagName)\n      }\n      here = ele.subject\n      indent = kb.any(here, PAD('indent'))\n      indent = indent ? Number(indent.value) : 0\n      if (before) {\n        prev = kb.any(undefined, PAD('next'), here)\n        next = here\n        queue = prev\n        queueProperty = 'newlinesAfter'\n      } else {\n        prev = here\n        next = kb.any(here, PAD('next'))\n        queue = next\n        queueProperty = 'newlinesBefore'\n      }\n      tr1 = ele.parentNode\n    } else {\n      prev = subject\n      next = subject\n      tr1 = undefined\n    }\n\n    const chunk = newThing(padDoc)\n    const label = chunk.uri.slice(-4)\n\n    const del = [st(prev, PAD('next'), next, padDoc)]\n    const ins = [\n      st(prev, PAD('next'), chunk, padDoc),\n      st(chunk, PAD('next'), next, padDoc),\n      st(chunk, ns.dc('author'), me, padDoc),\n      st(chunk, ns.sioc('content'), '' as any, padDoc)\n    ]\n    if (indent > 0) {\n      // Do not inherit\n      ins.push(st(chunk, PAD('indent'), indent, padDoc))\n    }\n\n    log('    Fresh chunk ' + label + ' proposed')\n    updater.update(del, ins, function (uri, ok, errorBody, _xhr) {\n      if (!ok) {\n        // alert(\"Error writing new line \" + label + \": \" + errorBody);\n        log('    ERROR writing new line ' + label + ': ' + errorBody)\n      } else {\n        const newPart = newPartAfter(tr1, chunk, before)\n        setPartStyle(newPart)\n        newPart.focus() // Note this is delayed\n        if (queueProperty) {\n          log(\n            '    Fresh chunk ' +\n            label +\n            ' updated, queue = ' +\n            queue[queueProperty]\n          )\n          queue[queueProperty] -= 1\n          if (queue[queueProperty] > 0) {\n            log(\n              '    Implementing queued newlines = ' + next.newLinesBefore\n            )\n            newChunk(newPart, before)\n          }\n        }\n      }\n    })\n  }\n\n  const consistencyCheck = function () {\n    const found: { [uri: string]: boolean } = {}\n    let failed = 0\n    function complain2 (msg) {\n      complain(msg)\n      failed++\n    }\n\n    if (!kb.the(subject, PAD('next'))) {\n      complain2('No initial next pointer')\n      return false // can't do linked list\n    }\n    // var chunk = kb.the(subject, PAD('next'))\n    let prev = subject\n    let chunk\n    for (; ;) {\n      chunk = kb.the(prev, PAD('next'))\n      if (!chunk) {\n        complain2('No next pointer from ' + prev)\n      }\n      if (chunk.sameTerm(subject)) {\n        break\n      }\n      prev = chunk\n      const label = chunk.uri.split('#')[1]\n      if (found[chunk.uri]) {\n        complain2('Loop!')\n        return false\n      }\n\n      found[chunk.uri] = true\n      let k = kb.each(chunk, PAD('next')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' next pointer for ' + label)\n      }\n\n      k = kb.each(chunk, PAD('indent')).length\n      if (k > 1) {\n        complain2('Should be 0 or 1 not ' + k + ' indent for ' + label)\n      }\n\n      k = kb.each(chunk, ns.sioc('content')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' contents for ' + label)\n      }\n\n      k = kb.each(chunk, ns.dc('author')).length\n      if (k !== 1) {\n        complain2('Should be 1 not ' + k + ' author for ' + label)\n      }\n\n      const sts = kb.statementsMatching(undefined, ns.sioc('contents'))\n      sts.map(function (st) {\n        if (!found[st.subject.uri]) {\n          complain2('Loose chunk! ' + st.subject.uri)\n        }\n      })\n    }\n    return !failed\n  }\n\n  // Ensure that the display matches the current state of the\n  // @@ TODO really need to refactor this so that we don't need to cast types\n  const sync = function () {\n    // var first = kb.the(subject, PAD('next'))\n    if (kb.each(subject, PAD('next')).length !== 1) {\n      const msg =\n        'Pad: Inconsistent data - NEXT pointers: ' +\n        kb.each(subject, PAD('next')).length\n      log(msg)\n      if ((options as notepadOptions).statusArea) {\n        ((options as notepadOptions).statusArea as HTMLElement).textContent += msg\n      }\n      return\n    }\n    // var last = kb.the(undefined, PAD('previous'), subject)\n    // var chunk = first //  = kb.the(subject, PAD('next'));\n    let row\n\n    // First see which of the logical chunks have existing physical manifestations\n    const manif: any = []\n    // Find which lines correspond to existing chunks\n\n    for (\n      let chunk = kb.the(subject, PAD('next'));\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      for (let i = 0; i < table.children.length; i++) {\n        const tr: any = table.children[i]\n        if (tr.firstChild) {\n          if (tr.firstChild.subject.sameTerm(chunk)) {\n            manif[chunk.uri] = tr.firstChild\n          }\n        }\n      }\n    }\n\n    // Remove any deleted lines\n    for (let i = table.children.length - 1; i >= 0; i--) {\n      row = table.children[i]\n      if (!manif[row.firstChild.subject.uri]) {\n        table.removeChild(row)\n      }\n    }\n    // Insert any new lines and update old ones\n    row = table.firstChild // might be null\n    for (\n      let chunk = kb.the(subject, PAD('next'));\n      !chunk.sameTerm(subject);\n      chunk = kb.the(chunk, PAD('next'))\n    ) {\n      const text = kb.any(chunk, ns.sioc('content')).value\n      // superstitious -- don't mess with unchanged input fields\n      // which may be selected by the user\n      if (row && manif[chunk.uri]) {\n        const part = row.firstChild\n        if (text !== part.value) {\n          part.value = text\n        }\n        setPartStyle(part)\n        part.state = 0 // Clear the state machine\n        delete part.lastSent // DEBUG ONLY\n        row = row.nextSibling\n      } else {\n        newPartAfter(row, chunk, true) // actually before\n      }\n    }\n  }\n\n  // Refresh the DOM tree\n\n  const refreshTree = function (root) {\n    if (root.refresh) {\n      root.refresh()\n      return\n    }\n    for (let i = 0; i < root.children.length; i++) {\n      refreshTree(root.children[i])\n    }\n  }\n\n  let reloading = false\n\n  const checkAndSync = function () {\n    log('    reloaded OK')\n    clearStatus()\n    if (!consistencyCheck()) {\n      complain('CONSITENCY CHECK FAILED')\n    } else {\n      refreshTree(table)\n    }\n  }\n\n  const reloadAndSync = function () {\n    if (reloading) {\n      log('   Already reloading - stop')\n      return // once only needed\n    }\n    reloading = true\n    let retryTimeout = 1000 // ms\n    const tryReload = function () {\n      log('try reload - timeout = ' + retryTimeout)\n      updater.reload(updater.store, padDoc, function (ok, message, xhr) {\n        reloading = false\n        if (ok) {\n          checkAndSync()\n        } else {\n          if (xhr.status === 0) {\n            complain(\n              'Network error refreshing the pad. Retrying in ' +\n              retryTimeout / 1000\n            )\n            reloading = true\n            retryTimeout = retryTimeout * 2\n            setTimeout(tryReload, retryTimeout)\n          } else {\n            complain(\n              'Error ' +\n              xhr.status +\n              'refreshing the pad:' +\n              message +\n              '. Stopped. ' +\n              padDoc\n            )\n          }\n        }\n      })\n    }\n    tryReload()\n  }\n\n  table.refresh = sync // Catch downward propagating refresh events\n  table.reloadAndSync = reloadAndSync\n\n  if (!me) log('Warning: must be logged in for pad to be edited')\n\n  if (exists) {\n    log('Existing pad.')\n    if (consistencyCheck()) {\n      sync()\n      if (kb.holds(subject, PAD('next'), subject)) {\n        // Empty list untenable\n        newChunk() // require at least one line\n      }\n    } else {\n      log((table.textContent = 'Inconsistent data. Abort'))\n    }\n  } else {\n    // Make new pad\n    log('No pad exists - making new one.')\n    const insertables = [\n      st(subject, ns.rdf('type'), PAD('Notepad'), padDoc),\n      st(subject, ns.dc('author'), me, padDoc),\n      st(subject, ns.dc('created'), new Date() as any, padDoc),\n      st(subject, PAD('next'), subject, padDoc)\n    ]\n\n    updater.update([], insertables, function (uri: string, ok: boolean, errorBody: string) {\n      if (!ok) {\n        complain(errorBody)\n      } else {\n        log('Initial pad created')\n        newChunk() // Add a first chunck\n        // getResults();\n      }\n    })\n  }\n  return table\n}\n\n/**\n * Get the chunks of the notepad\n * They are stored in a RDF linked list\n */\n\n// @ignore exporting this only for the unit test\nexport function getChunks (subject: NamedNode, kb: store) {\n  const chunks: any[] = []\n  for (\n    let chunk = kb.the(subject, PAD('next'));\n    !chunk.sameTerm(subject);\n    chunk = kb.the(chunk, PAD('next'))\n  ) {\n    chunks.push(chunk)\n  }\n  return chunks\n}\n\n/**\n *  Encode content to be put in XML or HTML elements\n */\n// @ignore exporting this only for the unit test\nexport function xmlEncode (str) {\n  return str.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n}\n\n/**\n * Convert a notepad to HTML\n *   @param { } pad - the notepad\n *   @param {store} pad - the data store\n */\nexport function notepadToHTML (pad: any, kb: store) {\n  const chunks = getChunks(pad, kb)\n  let html = '<html>\\n  <head>\\n'\n  const title = kb.anyValue(pad, ns.dct('title'))\n  if (title) {\n    html += `    <title>${xmlEncode(title)}</title>\\n`\n  }\n  html += '  </head>\\n  <body>\\n'\n  let level = 0\n\n  function increaseLevel (indent) {\n    for (; level < indent; level++) {\n      html += '<ul>\\n'\n    }\n  }\n\n  function decreaseLevel (indent) {\n    for (; level > indent; level--) {\n      html += '</ul>\\n'\n    }\n  }\n  chunks.forEach(chunk => {\n    const indent = kb.anyJS(chunk, PAD('indent'))\n    const rawContent = kb.anyJS(chunk, ns.sioc('content'))\n    if (!rawContent) return // seed chunk is dummy\n    const content = xmlEncode(rawContent)\n    if (indent < 0) { // negative indent levels represent heading levels\n      decreaseLevel(0)\n      const h = indent >= -3 ? 4 + indent : 1 // -1 -> h4, -2 -> h3\n      html += `\\n<h${h}>${content}</h${h}>\\n`\n    } else { // >= 0\n      if (indent > 0) { // Lists\n        decreaseLevel(indent)\n        increaseLevel(indent)\n        html += `<li>${content}</li>\\n`\n      } else { // indent 0\n        decreaseLevel(indent)\n        html += `<p>${content}</p>\\n`\n      }\n    }\n  }) // foreach chunk\n  // At the end decreaseLevel any open ULs\n  decreaseLevel(0)\n  html += '  </body>\\n</html>\\n'\n  return html\n}\n"],"file":"pad.js"}