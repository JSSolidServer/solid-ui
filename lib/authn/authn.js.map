{"version":3,"sources":["../../src/authn/authn.ts"],"names":["findOriginOwner","doc","uri","i","indexOf","j","origin","slice","saveUser","webId","context","webIdUri","me","defaultTestUser","offlineId","offlineTestID","currentUser","str","localStorage","da","JSON","parse","session","logIn","Promise","resolve","checkUser","then","debug","log","div","dom","box","loginStatusBox","appendChild","logInLoadProfile","publicProfile","fetcher","kb","profileDocument","reject","webID","Error","load","withCredentials","cache","_response","err","message","widgets","errorMessageBlock","logInLoadPreferences","preferencesFile","statusArea","progressDisplay","any","ns","space","complain","differentOrigin","window","location","site","parentNode","removeChild","status","m2","preferencesFileError","warn","confirm","loadTypeIndexes","loadPublicTypeIndex","loadPrivateTypeIndex","loadIndex","solid","loadOneTypeIndex","isPublic","predicate","index","ixs","each","undefined","length","ensureTypeIndexes","ensureOneTypeIndex","makeIndexIfNecessary","putIndex","newIndex","webOperation","data","Date","contentType","msg","relevant","visibility","dir","addMe","updatePromise","updater","push","findAppInstances","theClass","unique","arr","Array","from","Set","thisIndex","registrations","map","ix","flat","instances","reg","containers","concat","e","utils","label","cont","ldp","del","ins","update","ok","errorBody","registerInTypeIndex","instance","indexes","registration","newThing","rdf","registrationControl","createElement","innerHTML","setAttribute","tbody","children","form","bnode","registrationStatements","filter","r","holds","statements","buildCheckboxForm","noun","textContent","registrationList","options","_indexes","table","firstChild","sts","vs","forEach","statementsMatching","statement","type","subject","why","inst","object","personTR","deleteFunction","_x","setACLUserPublic","docURI","aclDoc","sym","fetchACLRel","aclText","genACLText","result","error","aclURI","optPublic","g","auth","a","acl","add","defaultForNew","foaf","p","$SolidTestEnvironment","username","document","getElementById","id","getAttribute","getDefaultSignInButtonStyle","signInOrSignUpBox","setUserCallback","signInButtonStyle","buttonStyle","magicClassName","style","signInPopUpButton","addEventListener","offline","solidAuthClient","popupLogin","webIdURI","divs","getElementsByClassName","parent","signupButton","_event","signupMgr","Signup","signup","webIdFromSession","currentSession","listener","setIt","newidURI","refresh","logoutButtonHandler","logout","alert","logoutButton","logoutLabel","nick","value","signOutButton","clearElement","trackSession","selectWorkspace","appDetails","callbackWS","appPathSegment","say","s","figureOutBase","ws","newBase","split","now","getTime","displayOptions","makeNewWorkspace","row","cell","padding","encodeURI","askName","newWs","newData","w","storages","file","includes","toLowerCase","commentStyle","baseField","textInputStyle","size","autocomplete","button","replace","x","col1","col2","col3","tr","comment","cellStyle","deselectedStyle","anyValue","ui","hash","reduce","b","charCodeAt","bgcolor","toString","target","rdfs","disabled","trLast","newAppInstance","callback","gotWS","base","getUserRoles","filterAvailablePanes","panes","userRoles","pane","isMatchingAudience","audience","isMatch","audienceRole","find","role","equals"],"mappings":"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","sourcesContent":["/**\n * Signing in, signing up, profile and preferences reloading\n * Type index management\n *\n * Many functions in this module take a context object which\n * holds various RDF symbols, add to it, and return a promise of it.\n *\n * * `me`                RDF symbol for the user's WebID\n * * `publicProfile`     The user's public profile, iff loaded\n * * `preferencesFile`   The user's personal preference file, iff loaded\n * * `index.public`      The user's public type index file\n * * `index.private`     The user's private type index file\n *\n * Not RDF symbols:\n * * `noun`            A string in english for the type of thing -- like \"address book\"\n * * `instance`        An array of nodes which are existing instances\n * * `containers`      An array of nodes of containers of instances\n * * `div`             A DOM element where UI can be displayed\n * * `statusArea`      A DOM element (opt) progress stuff can be displayed, or error messages\n * @packageDocumentation\n */\nimport Signup from './signup'\nimport widgets from '../widgets'\nimport solidAuthClient from 'solid-auth-client'\nimport ns from '../ns.js'\nimport kb from '../store.js'\nimport utils from '../utils.js'\nimport { alert } from '../log'\nimport { AppDetails, AuthenticationContext } from './types'\nimport { PaneDefinition } from 'pane-registry'\nimport * as debug from '../debug'\nimport { graph, namedNode, NamedNode, Namespace, serialize, st, Statement, sym, UpdateManager } from 'rdflib'\nimport { textInputStyle, buttonStyle, commentStyle } from '../style'\n// eslint-disable-next-line camelcase\nimport { Quad_Object } from 'rdflib/lib/tf-types'\n\nexport { solidAuthClient }\n\n// const userCheckSite = 'https://databox.me/'\n\n/**\n * Look for and load the User who has control over it\n */\nexport function findOriginOwner (doc: NamedNode | string): string | boolean {\n  const uri = (typeof doc === 'string') ? doc : doc.uri\n  const i = uri.indexOf('://')\n  if (i < 0) return false\n  const j = uri.indexOf('/', i + 3)\n  if (j < 0) return false\n  const origin = uri.slice(0, j + 1) // @@ TBC\n  return origin\n}\n\n/**\n * Saves `webId` in `context.me`\n * @param webId\n * @param context\n *\n * @returns Returns the WebID, after setting it\n */\nexport function saveUser (\n  webId: NamedNode | string | null,\n  context?: AuthenticationContext\n): NamedNode | null {\n  // @@ TODO Remove the need for having context as output argument\n  let webIdUri: string\n  if (webId) {\n    webIdUri = (typeof webId === 'string') ? webId : webId.uri\n    const me = namedNode(webIdUri)\n    if (context) {\n      context.me = me\n    }\n    return me\n  }\n  return null\n}\n\n/**\n * Wrapper around [[offlineTestID]]\n * @returns {NamedNode|null}\n */\nexport function defaultTestUser (): NamedNode | null {\n  // Check for offline override\n  const offlineId = offlineTestID()\n\n  if (offlineId) {\n    return offlineId\n  }\n\n  return null\n}\n\n/**\n * Checks synchronously whether user is logged in\n *\n * @returns Named Node or null\n */\nexport function currentUser (): NamedNode | null {\n  const str = localStorage['solid-auth-client']\n  if (str) {\n    const da = JSON.parse(str)\n    if (da.session && da.session.webId) {\n      // @@ TODO check has not expired\n      return sym(da.session.webId)\n    }\n  }\n  return offlineTestID() // null unless testing\n  // JSON.parse(localStorage['solid-auth-client']).session.webId\n}\n\n/**\n * Resolves with the logged in user's WebID\n *\n * @param context\n */\nexport function logIn (context: AuthenticationContext): Promise<AuthenticationContext> {\n  const me = defaultTestUser() // me is a NamedNode or null\n\n  if (me) {\n    context.me = me\n    return Promise.resolve(context)\n  }\n\n  return new Promise(resolve => {\n    checkUser().then(webId => {\n      // Already logged in?\n      if (webId) {\n        context.me = sym(webId as string)\n        debug.log(`logIn: Already logged in as ${context.me}`)\n        return resolve(context)\n      }\n      if (!context.div || !context.dom) {\n        return resolve(context)\n      }\n      const box = loginStatusBox(context.dom, webIdUri => {\n        saveUser(webIdUri, context)\n        resolve(context) // always pass growing context\n      })\n      context.div.appendChild(box)\n    })\n  })\n}\n\n/**\n * Logs the user in and loads their WebID profile document into the store\n *\n * @param context\n *\n * @returns Resolves with the context after login / fetch\n */\nexport function logInLoadProfile (context: AuthenticationContext): Promise<AuthenticationContext> {\n  if (context.publicProfile) {\n    return Promise.resolve(context)\n  } // already done\n  const fetcher = kb.fetcher\n  let profileDocument\n  return new Promise(function (resolve, reject) {\n    return logIn(context)\n      .then(context => {\n        const webID = context.me\n        if (!webID) {\n          return reject(new Error('Could not log in'))\n        }\n        profileDocument = webID.doc()\n        // Load the profile into the knowledge base (fetcher.store)\n        //   withCredentials: Web arch should let us just load by turning off creds helps CORS\n        //   reload: Gets around a specific old Chrome bug caching/origin/cors\n        fetcher\n          .load(profileDocument, { withCredentials: false, cache: 'reload' })\n          .then(_response => {\n            context.publicProfile = profileDocument\n            resolve(context)\n          })\n          .catch(err => {\n            const message = `Logged in but cannot load profile ${profileDocument} : ${err}`\n            if (context.div && context.dom) {\n              context.div.appendChild(\n                widgets.errorMessageBlock(context.dom, message)\n              )\n            }\n            reject(message)\n          })\n      })\n      .catch(err => {\n        reject(new Error(`Can't log in: ${err}`))\n      })\n  })\n}\n\n/**\n * Loads preference file\n * Do this after having done log in and load profile\n *\n * @private\n *\n * @param context\n */\nexport function logInLoadPreferences (context: AuthenticationContext): Promise<AuthenticationContext> {\n  if (context.preferencesFile) return Promise.resolve(context) // already done\n\n  const statusArea = context.statusArea || context.div || null\n  let progressDisplay\n  return new Promise(function (resolve, reject) {\n    return logInLoadProfile(context)\n      .then(context => {\n        const preferencesFile = kb.any(context.me, ns.space('preferencesFile'))\n\n        function complain (message) {\n          message = `logInLoadPreferences: ${message}`\n          if (statusArea) {\n            // statusArea.innerHTML = ''\n            statusArea.appendChild(\n              widgets.errorMessageBlock(context.dom, message)\n            )\n          }\n          debug.log(message)\n          reject(new Error(message))\n        }\n\n        /**\n         * Are we working cross-origin?\n         * Returns True if we are in a webapp at an origin, and the file origin is different\n         */\n        function differentOrigin (): boolean {\n          return `${window.location.origin}/` !== preferencesFile.site().uri\n        }\n\n        if (!preferencesFile) {\n          return reject(new Error(`Can't find a preference file pointer in profile ${context.publicProfile}`))\n        }\n\n        // //// Load preference file\n        return kb.fetcher\n          .load(preferencesFile, { withCredentials: true })\n          .then(function () {\n            if (progressDisplay) {\n              progressDisplay.parentNode.removeChild(progressDisplay)\n            }\n            context.preferencesFile = preferencesFile\n            return resolve(context)\n          })\n          .catch(function (err) {\n            // Really important to look at why\n            const status = err.status\n            const message = err.message\n            debug.log(\n              `HTTP status ${status} for preference file ${preferencesFile}`\n            )\n            let m2\n            if (status === 401) {\n              m2 = 'Strange - you are not authenticated (properly logged in) to read preference file.'\n              alert(m2)\n            } else if (status === 403) {\n              if (differentOrigin()) {\n                m2 = `Unauthorized: Assuming preference file blocked for origin ${window.location.origin}`\n                context.preferencesFileError = m2\n                return resolve(context)\n              }\n              m2 = 'You are not authorized to read your preference file. This may be because you are using an untrusted web app.'\n              debug.warn(m2)\n            } else if (status === 404) {\n              if (\n                confirm(`You do not currently have a preference file. OK for me to create an empty one? ${preferencesFile}`)\n              ) {\n                // @@@ code me  ... weird to have a name of the file but no file\n                alert(`Sorry; I am not prepared to do this. Please create an empty file at ${preferencesFile}`)\n                return complain(\n                  new Error('Sorry; no code yet to create a preference file at ')\n                )\n              } else {\n                reject(\n                  new Error(`User declined to create a preference file at ${preferencesFile}`)\n                )\n              }\n            } else {\n              m2 = `Strange: Error ${status} trying to read your preference file.${message}`\n              alert(m2)\n            }\n          }) // load preference file then\n      })\n      .catch(err => {\n        // Fail initial login load preferences\n        reject(new Error(`(via loadPrefs) ${err}`))\n      })\n  })\n}\n\n/**\n * Resolves with the same context, outputting\n * output: index.public, index.private\n *\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nexport async function loadTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\n  await loadPublicTypeIndex(context)\n  await loadPrivateTypeIndex(context)\n  return context\n}\n\nasync function loadPublicTypeIndex (context: AuthenticationContext): Promise<AuthenticationContext> {\n  return loadIndex(context, ns.solid('publicTypeIndex'), true)\n}\n\nasync function loadPrivateTypeIndex (context: AuthenticationContext): Promise<AuthenticationContext> {\n  return loadIndex(context, ns.solid('privateTypeIndex'), false)\n}\n\nasync function loadOneTypeIndex (context: AuthenticationContext, isPublic: boolean): Promise<AuthenticationContext> {\n  const predicate = isPublic\n    ? ns.solid('publicTypeIndex')\n    : ns.solid('privateTypeIndex')\n  return loadIndex(context, predicate, isPublic)\n}\n\nasync function loadIndex (\n  context: AuthenticationContext,\n  predicate: NamedNode,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  // Loading preferences is more than loading profile\n  try {\n    ;(await isPublic)\n      ? logInLoadProfile(context)\n      : logInLoadPreferences(context)\n  } catch (err) {\n    widgets.complain(context, `loadPublicIndex: login and load problem ${err}`)\n  }\n  const me = context.me\n  let ixs\n  context.index = context.index || {}\n\n  if (isPublic) {\n    ixs = kb.each(me, predicate, undefined, context.publicProfile)\n    context.index.public = ixs\n  } else {\n    if (!context.preferencesFileError) {\n      ixs = kb.each(\n        me,\n        ns.solid('privateTypeIndex'),\n        undefined,\n        context.preferencesFile\n      )\n      context.index.private = ixs\n      if (ixs.length === 0) {\n        widgets.complain(`Your preference file ${context.preferencesFile} does not point to a private type index.`)\n        return context\n      }\n    } else {\n      debug.log(\n        'We know your preference file is not available, so we are not bothering with private type indexes.'\n      )\n    }\n  }\n\n  try {\n    await kb.fetcher.load(ixs)\n  } catch (err) {\n    widgets.complain(context, `loadPublicIndex: loading public type index ${err}`)\n  }\n  return context\n}\n\n/**\n * Resolves with the same context, outputting\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nasync function ensureTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\n  await ensureOneTypeIndex(context, true)\n  await ensureOneTypeIndex(context, false)\n  return context\n}\n\n/**\n * Load or create ONE type index\n * Find one or make one or fail\n * Many reasons for failing including script not having permission etc\n *\n * Adds its output to the context\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nasync function ensureOneTypeIndex (context: AuthenticationContext, isPublic: boolean): Promise<AuthenticationContext | void> {\n  async function makeIndexIfNecessary (context, isPublic) {\n    const relevant = isPublic ? context.publicProfile : context.preferencesFile\n    const visibility = isPublic ? 'public' : 'private'\n\n    async function putIndex (newIndex) {\n      try {\n        await kb.fetcher.webOperation('PUT', newIndex.uri, {\n          data: `# ${new Date()} Blank initial Type index\n`,\n          contentType: 'text/turtle'\n        })\n        return context\n      } catch (e) {\n        const msg = `Error creating new index ${e}`\n        widgets.complain(context, msg)\n      }\n    } // putIndex\n\n    context.index = context.index || {}\n    context.index[visibility] = context.index[visibility] || []\n    let newIndex\n    if (context.index[visibility].length === 0) {\n      newIndex = sym(`${relevant.dir().uri + visibility}TypeIndex.ttl`)\n      debug.log(`Linking to new fresh type index ${newIndex}`)\n      if (!confirm(`OK to create a new empty index file at ${newIndex}, overwriting anything that is now there?`)) {\n        throw new Error('cancelled by user')\n      }\n      debug.log(`Linking to new fresh type index ${newIndex}`)\n      const addMe = [\n        st(context.me, ns.solid(`${visibility}TypeIndex`), newIndex, relevant)\n      ]\n      try {\n        await updatePromise(kb.updater, [], addMe)\n      } catch (err) {\n        const msg = `Error saving type index link saving back ${newIndex}: ${err}`\n        widgets.complain(context, msg)\n        return context\n      }\n\n      debug.log(`Creating new fresh type index file${newIndex}`)\n      await putIndex(newIndex)\n      context.index[visibility].push(newIndex) // @@ wait\n    } else {\n      // officially exists\n      const ixs = context.index[visibility]\n      try {\n        await kb.fetcher.load(ixs)\n      } catch (err) {\n        widgets.complain(context, `ensureOneTypeIndex: loading indexes ${err}`)\n      }\n    }\n  } // makeIndexIfNecessary\n\n  try {\n    await loadOneTypeIndex(context, isPublic)\n    if (context.index) {\n      debug.log(\n        `ensureOneTypeIndex: Type index exists already ${isPublic\n          ? context.index.public[0]\n          : context.index.private[0]\n        }`\n      )\n    }\n    return context\n  } catch (error) {\n    await makeIndexIfNecessary(context, isPublic)\n    // widgets.complain(context, 'calling loadOneTypeIndex:' + error)\n  }\n}\n\n/**\n * Returns promise of context with arrays of symbols\n *\n * 2016-12-11 change to include forClass arc a la\n * https://github.com/solid/solid/blob/master/proposals/data-discovery.md\n */\nexport async function findAppInstances (\n  context: AuthenticationContext,\n  theClass: NamedNode,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  const fetcher = kb.fetcher\n  if (isPublic === undefined) {\n    // Then both public and private\n    await findAppInstances(context, theClass, true)\n    await findAppInstances(context, theClass, false)\n    return context\n  }\n\n  const visibility = isPublic ? 'public' : 'private'\n  try {\n    await loadOneTypeIndex(context, isPublic)\n  } catch (err) {\n  }\n  const index = context.index as { [key: string]: Array<NamedNode> }\n  const thisIndex = index[visibility]\n  const registrations = thisIndex\n    .map(ix => kb.each(undefined, ns.solid('forClass'), theClass, ix))\n    .flat()\n  const instances = registrations\n    .map(reg => kb.each(reg, ns.solid('instance')))\n    .flat()\n  const containers = registrations\n    .map(reg => kb.each(reg, ns.solid('instanceContainer')))\n    .flat()\n\n  function unique (arr: NamedNode[]): NamedNode[] {\n    return Array.from(new Set(arr))\n  }\n  context.instances = context.instances || []\n  context.instances = unique(context.instances.concat(instances))\n\n  context.containers = context.containers || []\n  context.containers = unique(context.containers.concat(containers))\n  if (!containers.length) {\n    return context\n  }\n  // If the index gives containers, then look up all things within them\n  try {\n    await fetcher.load(containers)\n  } catch (err) {\n    const e = new Error(`[FAI] Unable to load containers${err}`)\n    debug.log(e) // complain\n    widgets.complain(context, `Error looking for ${utils.label(theClass)}:  ${err}`)\n    // but then ignore it\n    // throw new Error(e)\n  }\n  for (let i = 0; i < containers.length; i++) {\n    const cont = containers[i]\n    context.instances = context.instances.concat(\n      kb.each(cont, ns.ldp('contains'))\n    )\n  }\n  return context\n}\n\n// @@@@ use the one in rdflib.js when it is available and delete this\nfunction updatePromise (\n  updater: UpdateManager,\n  del: Array<Statement>,\n  ins: Array<Statement> = []\n): Promise<void> {\n  return new Promise(function (resolve, reject) {\n    updater.update(del, ins, function (uri, ok, errorBody) {\n      if (!ok) {\n        reject(new Error(errorBody))\n      } else {\n        resolve()\n      }\n    }) // callback\n  }) // promise\n}\n\n/**\n * Register a new app in a type index\n */\nexport async function registerInTypeIndex (\n  context: AuthenticationContext,\n  instance: NamedNode,\n  theClass: NamedNode,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  await ensureOneTypeIndex(context, isPublic)\n  if (!context.index) {\n    throw new Error('registerInTypeIndex: No type index found')\n  }\n  const indexes = isPublic ? context.index.public : context.index.private\n  if (!indexes.length) {\n    throw new Error('registerInTypeIndex: What no type index?')\n  }\n  const index = indexes[0]\n  const registration = widgets.newThing(index)\n  const ins = [\n    // See https://github.com/solid/solid/blob/master/proposals/data-discovery.md\n    st(registration, ns.rdf('type'), ns.solid('TypeRegistration'), index),\n    st(registration, ns.solid('forClass'), theClass, index),\n    st(registration, ns.solid('instance'), instance, index)\n  ]\n  try {\n    await updatePromise(kb.updater, [], ins)\n  } catch (e) {\n    debug.log(e)\n    alert(e)\n  }\n  return context\n}\n\n/**\n * UI to control registration of instance\n */\nexport function registrationControl (\n  context: AuthenticationContext,\n  instance,\n  theClass\n): Promise<AuthenticationContext | void> {\n  const dom = context.dom\n  if (!dom || !context.div) {\n    return Promise.resolve()\n  }\n  const box = dom.createElement('div')\n  context.div.appendChild(box)\n\n  return ensureTypeIndexes(context)\n    .then(function () {\n      box.innerHTML = '<table><tbody><tr></tr><tr></tr></tbody></table>' // tbody will be inserted anyway\n      box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid gray 0.05em;')\n      const tbody = box.children[0].children[0]\n      const form = kb.bnode() // @@ say for now\n\n      const registrationStatements = function (index) {\n        const registrations = kb\n          .each(undefined, ns.solid('instance'), instance)\n          .filter(function (r) {\n            return kb.holds(r, ns.solid('forClass'), theClass)\n          })\n        const reg = registrations.length\n          ? registrations[0]\n          : widgets.newThing(index)\n        return [\n          st(reg, ns.solid('instance'), instance, index),\n          st(reg, ns.solid('forClass'), theClass, index)\n        ]\n      }\n\n      let index, statements\n\n      if (context.index && context.index.public && context.index.public.length > 0) {\n        index = context.index.public[0]\n        statements = registrationStatements(index)\n        tbody.children[0].appendChild(\n          widgets.buildCheckboxForm(\n            context.dom,\n            kb,\n            `Public link to this ${context.noun}`,\n            null,\n            statements,\n            form,\n            index\n          )\n        )\n      }\n\n      if (context.index && context.index.private && context.index.private.length > 0) {\n        index = context.index.private[0]\n        statements = registrationStatements(index)\n        tbody.children[1].appendChild(\n          widgets.buildCheckboxForm(\n            context.dom,\n            kb,\n            `Personal note of this ${context.noun}`,\n            null,\n            statements,\n            form,\n            index\n          )\n        )\n      }\n      return context\n    },\n    function (e) {\n      let msg\n      if (context.div && context.preferencesFileError) {\n        msg = '(Preferences not available)'\n        context.div.appendChild(dom.createElement('p')).textContent = msg\n      } else if (context.div) {\n        msg = `registrationControl: Type indexes not available: ${e}`\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\n      }\n      debug.log(msg)\n    }\n    )\n    .catch(function (e) {\n      const msg = `registrationControl: Error making panel: ${e}`\n      if (context.div) {\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\n      }\n      debug.log(msg)\n    })\n}\n\n/**\n * UI to List at all registered things\n */\nexport function registrationList (context: AuthenticationContext, options: {\n  private?: boolean\n  public?: boolean\n  type?: NamedNode\n}): Promise<AuthenticationContext> {\n  const dom = context.dom as HTMLDocument\n  const div = context.div as HTMLElement\n\n  const box = dom.createElement('div')\n  div.appendChild(box)\n\n  return ensureTypeIndexes(context).then(_indexes => {\n    box.innerHTML = '<table><tbody></tbody></table>' // tbody will be inserted anyway\n    box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid #eee 0.5em;')\n    const table = box.firstChild as HTMLElement\n\n    let ix: Array<NamedNode> = []\n    let sts = []\n    const vs = ['private', 'public']\n    vs.forEach(function (visibility) {\n      if (context.index && options[visibility]) {\n        ix = ix.concat(context.index[visibility][0])\n        sts = sts.concat(\n          kb.statementsMatching(\n            undefined,\n            ns.solid('instance'),\n            undefined,\n            context.index[visibility][0]\n          )\n        )\n      }\n    })\n\n    for (let i = 0; i < sts.length; i++) {\n      const statement: Statement = sts[i]\n      if (options.type) { // now check  terms:forClass\n        if (!kb.holds(statement.subject, ns.solid('forClass'), options.type, statement.why)) {\n          continue // skip irrelevant ones\n        }\n      }\n      // const cla = statement.subject\n      const inst = statement.object\n      table.appendChild(widgets.personTR(dom, ns.solid('instance'), inst, {\n        deleteFunction: function (_x) {\n          kb.updater.update([statement], [], function (uri, ok, errorBody) {\n            if (ok) {\n              debug.log(`Removed from index: ${statement.subject}`)\n            } else {\n              debug.log(`Error: Cannot delete ${statement}: ${errorBody}`)\n            }\n          })\n        }\n      }))\n    } // registrationList\n\n    /*\n       //const containers = kb.each(theClass, ns.solid('instanceContainer'));\n       if (containers.length) {\n       fetcher.load(containers).then(function(xhrs){\n       for (const i=0; i<containers.length; i++) {\n       const cont = containers[i];\n       instances = instances.concat(kb.each(cont, ns.ldp('contains')));\n       }\n       });\n       }\n       */\n\n    return context\n  })\n}\n\n/**\n * Simple Access Control\n *\n * This function sets up a simple default ACL for a resource, with\n * RWC for the owner, and a specified access (default none) for the public.\n * In all cases owner has read write control.\n * Parameter lists modes allowed to public\n *\n * @param options\n * @param options.public eg ['Read', 'Write']\n *\n * @returns Resolves with aclDoc uri on successful write\n */\nexport function setACLUserPublic (\n  docURI: string,\n  me: NamedNode,\n  options: {\n    defaultForNew?: boolean,\n    public?: []\n  }\n): Promise<NamedNode> {\n  const aclDoc = kb.any(\n    kb.sym(docURI),\n    kb.sym('http://www.iana.org/assignments/link-relations/acl')\n  )\n\n  return Promise.resolve()\n    .then(() => {\n      if (aclDoc) {\n        return aclDoc\n      }\n\n      return fetchACLRel(docURI).catch(err => {\n        throw new Error(`Error fetching rel=ACL header for ${docURI}: ${err}`)\n      })\n    })\n    .then(aclDoc => {\n      const aclText = genACLText(docURI, me, aclDoc.uri, options)\n\n      return kb.fetcher\n        .webOperation('PUT', aclDoc.uri, {\n          data: aclText,\n          contentType: 'text/turtle'\n        })\n        .then(result => {\n          if (!result.ok) {\n            throw new Error('Error writing ACL text: ' + result.error)\n          }\n\n          return aclDoc\n        })\n    })\n}\n\n/**\n * @param docURI\n * @returns\n */\nfunction fetchACLRel (docURI: string): Promise<NamedNode> {\n  const fetcher = kb.fetcher\n\n  return fetcher.load(docURI).then(result => {\n    if (!result.ok) {\n      throw new Error('fetchACLRel: While loading:' + result.error)\n    }\n\n    const aclDoc = kb.any(\n      kb.sym(docURI),\n      kb.sym('http://www.iana.org/assignments/link-relations/acl')\n    )\n\n    if (!aclDoc) {\n      throw new Error('fetchACLRel: No Link rel=ACL header for ' + docURI)\n    }\n\n    return aclDoc\n  })\n}\n\n/**\n * @param docURI\n * @param me\n * @param aclURI\n * @param options\n *\n * @returns Serialized ACL\n */\nfunction genACLText (\n  docURI: string,\n  me: NamedNode,\n  aclURI: string,\n  options: {\n    defaultForNew?: boolean,\n    public?: []\n  } = {}\n): string | undefined {\n  const optPublic = options.public || []\n  const g = graph()\n  const auth = Namespace('http://www.w3.org/ns/auth/acl#')\n  let a = g.sym(`${aclURI}#a1`)\n  const acl = g.sym(aclURI)\n  const doc = g.sym(docURI)\n  g.add(a, ns.rdf('type'), auth('Authorization'), acl)\n  g.add(a, auth('accessTo'), doc, acl)\n  if (options.defaultForNew) {\n    // TODO: Should this be auth('default') instead?\n    g.add(a, auth('defaultForNew'), doc, acl)\n  }\n  g.add(a, auth('agent'), me, acl)\n  g.add(a, auth('mode'), auth('Read'), acl)\n  g.add(a, auth('mode'), auth('Write'), acl)\n  g.add(a, auth('mode'), auth('Control'), acl)\n\n  if (optPublic.length) {\n    a = g.sym(`${aclURI}#a2`)\n    g.add(a, ns.rdf('type'), auth('Authorization'), acl)\n    g.add(a, auth('accessTo'), doc, acl)\n    g.add(a, auth('agentClass'), ns.foaf('Agent'), acl)\n    for (let p = 0; p < optPublic.length; p++) {\n      g.add(a, auth('mode'), auth(optPublic[p]), acl) // Like 'Read' etc\n    }\n  }\n  return serialize(acl, g, aclURI)\n}\n\n/**\n * Returns `sym($SolidTestEnvironment.username)` if\n * `$SolidTestEnvironment.username` is defined as a global\n * @returns {NamedNode|null}\n */\nexport function offlineTestID (): NamedNode | null {\n  const { $SolidTestEnvironment }: any = window\n  if (\n    typeof $SolidTestEnvironment !== 'undefined' &&\n    $SolidTestEnvironment.username\n  ) {\n    // Test setup\n    debug.log('Assuming the user is ' + $SolidTestEnvironment.username)\n    return sym($SolidTestEnvironment.username)\n  }\n\n  if (\n    typeof document !== 'undefined' &&\n    document.location &&\n    ('' + document.location).slice(0, 16) === 'http://localhost'\n  ) {\n    const div = document.getElementById('appTarget')\n    if (!div) return null\n    const id = div.getAttribute('testID')\n    if (!id) return null\n    /* me = kb.any(subject, ns.acl('owner')); // when testing on plane with no WebID\n     */\n    debug.log('Assuming user is ' + id)\n    return sym(id)\n  }\n  return null\n}\n\nfunction getDefaultSignInButtonStyle (): string {\n  return 'padding: 1em; border-radius:0.5em; margin: 2em; font-size: 100%;'\n}\n\n/**\n * Bootstrapping identity\n * (Called by `loginStatusBox()`)\n *\n * @param dom\n * @param setUserCallback\n *\n * @returns\n */\nfunction signInOrSignUpBox (\n  dom: HTMLDocument,\n  setUserCallback: (user: string) => void,\n  options: {\n    buttonStyle?: string\n  } = {}\n): HTMLElement {\n  options = options || {}\n  const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\n\n  // @@ TODO Remove the need to cast HTML element to any\n  const box: any = dom.createElement('div')\n  const magicClassName = 'SolidSignInOrSignUpBox'\n  debug.log('widgets.signInOrSignUpBox')\n  box.setUserCallback = setUserCallback\n  box.setAttribute('class', magicClassName)\n  ;(box as any).style = 'display:flex;' // @@ fix all typecasts like this\n\n  // Sign in button with PopUP\n  const signInPopUpButton = dom.createElement('input') // multi\n  box.appendChild(signInPopUpButton)\n  signInPopUpButton.setAttribute('type', 'button')\n  signInPopUpButton.setAttribute('value', 'Log in')\n  signInPopUpButton.setAttribute('style', `${signInButtonStyle}background-color: #eef;`)\n\n  signInPopUpButton.addEventListener('click', () => {\n    const offline = offlineTestID()\n    if (offline) return setUserCallback(offline.uri)\n    return solidAuthClient.popupLogin().then(session => {\n      const webIdURI = session.webId\n      // setUserCallback(webIdURI)\n      const divs = dom.getElementsByClassName(magicClassName)\n      debug.log(`Logged in, ${divs.length} panels to be serviced`)\n      // At the same time, satisfy all the other login boxes\n      for (let i = 0; i < divs.length; i++) {\n        const div: any = divs[i]\n        // @@ TODO Remove the need to manipulate HTML elements\n        if (div.setUserCallback) {\n          try {\n            div.setUserCallback(webIdURI)\n            const parent = div.parentNode\n            if (parent) {\n              parent.removeChild(div)\n            }\n          } catch (e) {\n            debug.log(`## Error satisfying login box: ${e}`)\n            div.appendChild(widgets.errorMessageBlock(dom, e))\n          }\n        }\n      }\n    })\n  }, false)\n\n  // Sign up button\n  const signupButton = dom.createElement('input')\n  box.appendChild(signupButton)\n  signupButton.setAttribute('type', 'button')\n  signupButton.setAttribute('value', 'Sign Up for Solid')\n  signupButton.setAttribute('style', `${signInButtonStyle}background-color: #efe;`)\n\n  signupButton.addEventListener('click', function (_event) {\n    const signupMgr = new Signup()\n    signupMgr.signup().then(function (uri) {\n      debug.log('signInOrSignUpBox signed up ' + uri)\n      setUserCallback(uri)\n    })\n  }, false)\n  return box\n}\n\n/**\n * @returns {Promise<string|null>} Resolves with WebID URI or null\n */\nfunction webIdFromSession (session?: { webId: string }): string | null {\n  const webId = session ? session.webId : null\n  if (webId) {\n    saveUser(webId)\n  }\n  return webId\n}\n\n/**\n * @returns {Promise<string|null>} Resolves with WebID URI or null\n */\n\n/*\nfunction checkCurrentUser () {\n  return checkUser()\n}\n*/\n\n/**\n * Retrieves currently logged in webId from either\n * defaultTestUser or SolidAuthClient\n * @param [setUserCallback] Optional callback\n *\n * @returns Resolves with webId uri, if no callback provided\n */\nexport function checkUser<T> (\n  setUserCallback?: (me: NamedNode | null) => T\n): Promise<NamedNode | T> {\n  // Check to see if already logged in / have the WebID\n  const me = defaultTestUser()\n  if (me) {\n    return Promise.resolve(setUserCallback ? setUserCallback(me) : me)\n  }\n\n  // doc = kb.any(doc, ns.link('userMirror')) || doc\n\n  return solidAuthClient\n    .currentSession()\n    .then(webIdFromSession)\n    .catch(err => {\n      debug.log('Error fetching currentSession:', err)\n    })\n    .then(webId => {\n      // if (webId.startsWith('dns:')) {  // legacy rww.io pseudo-users\n      //   webId = null\n      // }\n      const me = saveUser(webId)\n\n      if (me) {\n        debug.log(`(Logged in as ${me} by authentication)`)\n      }\n\n      return setUserCallback ? setUserCallback(me) : me\n    })\n}\n\n/**\n * Login status box\n *\n * A big sign-up/sign in box or a logout box depending on the state\n *\n * @param dom\n * @param listener\n *\n * @returns\n */\nexport function loginStatusBox (\n  dom: HTMLDocument,\n  listener: ((uri: string | null) => void) | null = null,\n  options: {\n    buttonStyle?: string\n  } = {}\n): HTMLElement {\n  // 20190630\n  let me = defaultTestUser()\n  // @@ TODO Remove the need to cast HTML element to any\n  const box: any = dom.createElement('div')\n\n  function setIt (newidURI) {\n    if (!newidURI) {\n      return\n    }\n\n    const uri = newidURI.uri || newidURI\n    //    UI.preferences.set('me', uri)\n    me = sym(uri)\n    box.refresh()\n    if (listener) listener(me.uri)\n  }\n\n  function logoutButtonHandler (_event) {\n    // UI.preferences.set('me', '')\n    solidAuthClient.logout().then(\n      function () {\n        const message = `Your WebID was ${me}. It has been forgotten.`\n        me = null\n        try {\n          alert(message)\n        } catch (e) {\n          window.alert(message)\n        }\n        box.refresh()\n        if (listener) listener(null)\n      },\n      err => {\n        alert('Fail to log out:' + err)\n      }\n    )\n  }\n\n  function logoutButton (me, options) {\n    const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\n    let logoutLabel = 'WebID logout'\n    if (me) {\n      const nick =\n        kb.any(me, ns.foaf('nick')) ||\n        kb.any(me, ns.foaf('name'))\n      if (nick) {\n        logoutLabel = 'Logout ' + nick.value\n      }\n    }\n    const signOutButton = dom.createElement('input')\n    // signOutButton.className = 'WebIDCancelButton'\n    signOutButton.setAttribute('type', 'button')\n    signOutButton.setAttribute('value', logoutLabel)\n    signOutButton.setAttribute('style', `${signInButtonStyle}background-color: #eee;`)\n    signOutButton.addEventListener('click', logoutButtonHandler, false)\n    return signOutButton\n  }\n\n  box.refresh = function () {\n    solidAuthClient.currentSession().then(\n      session => {\n        if (session && session.webId) {\n          me = sym(session.webId)\n        } else {\n          me = null\n        }\n        if ((me && box.me !== me.uri) || (!me && box.me)) {\n          widgets.clearElement(box)\n          if (me) {\n            box.appendChild(logoutButton(me, options))\n          } else {\n            box.appendChild(signInOrSignUpBox(dom, setIt, options))\n          }\n        }\n        box.me = me ? me.uri : null\n      },\n      err => {\n        alert(`loginStatusBox: ${err}`)\n      }\n    )\n  }\n\n  if (solidAuthClient.trackSession) {\n    solidAuthClient.trackSession(session => {\n      if (session && session.webId) {\n        me = sym(session.webId)\n      } else {\n        me = null\n      }\n      box.refresh()\n    })\n  }\n\n  box.me = '99999' // Force refresh\n  box.refresh()\n  return box\n}\n\n/**\n * Workspace selection etc\n * See https://github.com/solid/userguide/issues/16\n */\n\n/**\n * Returns a UI object which, if it selects a workspace,\n * will callback(workspace, newBase).\n * See https://github.com/solid/userguide/issues/16 for more info on workspaces.\n *\n * If necessary, will get an account, preference file, etc. In sequence:\n *\n *   - If not logged in, log in.\n *   - Load preference file\n *   - Prompt user for workspaces\n *   - Allows the user to just type in a URI by hand\n *\n * Calls back with the workspace and the base URI\n *\n * @param dom\n * @param appDetails\n * @param callbackWS\n */\nexport function selectWorkspace (\n  dom: HTMLDocument,\n  appDetails: AppDetails,\n  callbackWS: (workspace: string | null, newBase: string) => void\n): HTMLElement {\n  const noun = appDetails.noun\n  const appPathSegment = appDetails.appPathSegment\n\n  const me = defaultTestUser()\n  const box = dom.createElement('div')\n  const context: AuthenticationContext = { me: me, dom: dom, div: box }\n\n  function say (s) {\n    box.appendChild(widgets.errorMessageBlock(dom, s))\n  }\n\n  function figureOutBase (ws) {\n    let newBase = kb.any(ws, ns.space('uriPrefix'))\n    if (!newBase) {\n      newBase = ws.uri.split('#')[0]\n    } else {\n      newBase = newBase.value\n    }\n    if (newBase.slice(-1) !== '/') {\n      debug.log(`${appPathSegment}: No / at end of uriPrefix ${newBase}`) // @@ paramater?\n      newBase = `${newBase}/`\n    }\n    const now = new Date()\n    newBase += `${appPathSegment}/id${now.getTime()}/` // unique id\n    return newBase\n  }\n\n  function displayOptions (context) {\n    async function makeNewWorkspace (_event) {\n      const row = table.appendChild(dom.createElement('tr'))\n      const cell = row.appendChild(dom.createElement('td'))\n      cell.setAttribute('colspan', '3')\n      cell.style.padding = '0.5em'\n      const newBase = encodeURI(await widgets.askName(dom, kb, cell, ns.solid('URL'), ns.space('Workspace'), 'Workspace'))\n      const newWs = widgets.newThing(context.preferencesFile)\n      const newData = [st(context.me, ns.space('workspace'), newWs, context.preferencesFile),\n        // eslint-disable-next-line camelcase\n        st(newWs, ns.space('uriPrefix'), newBase as unknown as Quad_Object, context.preferencesFile)]\n      await kb.updater.update([], newData)\n      // @@ now refresh list of workspaces\n    }\n\n    // const status = ''\n    const id = context.me\n    const preferencesFile = context.preferencesFile\n    let newBase = null\n\n    // A workspace specifically defined in the private preference file:\n    let w = kb.each(id, ns.space('workspace'), undefined, preferencesFile) // Only trust preference file here\n\n    // A workspace in a storage in the public profile:\n    const storages = kb.each(id, ns.space('storage')) // @@ No provenance requirement at the moment\n    if (w.length === 0 && storages) {\n      say(`You don't seem to have any workspaces. You have ${storages.length} storage spaces.`)\n      storages.map(function (s) {\n        w = w.concat(kb.each(s, ns.ldp('contains')))\n      }).filter(file => ['public', 'private'].includes(file.id().toLowerCase()))\n    }\n\n    if (w.length === 1) {\n      say(`Workspace used: ${w[0].uri}`) // @@ allow user to see URI\n      newBase = figureOutBase(w[0])\n      // callbackWS(w[0], newBase)\n    } else if (w.length === 0) {\n    }\n\n    // Prompt for ws selection or creation\n    // say( w.length + \" workspaces for \" + id + \"Choose one.\");\n    const table = dom.createElement('table')\n    table.setAttribute('style', 'border-collapse:separate; border-spacing: 0.5em;')\n\n    // const popup = window.open(undefined, '_blank', { height: 300, width:400 }, false)\n    box.appendChild(table)\n\n    //  Add a field for directly adding the URI yourself\n\n    // const hr = box.appendChild(dom.createElement('hr')) // @@\n    box.appendChild(dom.createElement('hr')) // @@\n\n    const p = box.appendChild(dom.createElement('p'))\n    ;(p as any).style = commentStyle\n    p.textContent = `Where would you like to store the data for the ${noun}?\n    Give the URL of the folder where you would like the data stored.\n    It can be anywhere in solid world - this URI is just an idea.`\n    // @@ TODO Remove the need to cast baseField to any\n    const baseField: any = box.appendChild(dom.createElement('input'))\n    baseField.setAttribute('type', 'text')\n    ;(baseField as any).style = textInputStyle\n    baseField.size = 80 // really a string\n    baseField.label = 'base URL'\n    baseField.autocomplete = 'on'\n    if (newBase) {\n      // set to default\n      baseField.value = newBase\n    }\n\n    context.baseField = baseField\n\n    box.appendChild(dom.createElement('br')) // @@\n\n    const button = box.appendChild(dom.createElement('button'))\n    ;(button as any).style = buttonStyle\n    button.textContent = `Start new ${noun} at this URI`\n    button.addEventListener('click', function (_event) {\n      let newBase = baseField.value.replace(' ', '%20') // do not re-encode in general, as % encodings may exist\n      if (newBase.slice(-1) !== '/') {\n        newBase += '/'\n      }\n      callbackWS(null, newBase)\n    })\n\n    // Now go set up the table of spaces\n\n    // const row = 0\n    w = w.filter(function (x) {\n      return !kb.holds(\n        x,\n        ns.rdf('type'), // Ignore master workspaces\n        ns.space('MasterWorkspace')\n      )\n    })\n    let col1, col2, col3, tr, ws, style, comment\n    const cellStyle = 'height: 3em; margin: 1em; padding: 1em white; border-radius: 0.3em;'\n    const deselectedStyle = `${cellStyle}border: 0px;`\n    // const selectedStyle = cellStyle + 'border: 1px solid black;'\n    for (let i = 0; i < w.length; i++) {\n      ws = w[i]\n      tr = dom.createElement('tr')\n      if (i === 0) {\n        col1 = dom.createElement('td')\n        col1.setAttribute('rowspan', `${w.length}`)\n        col1.textContent = 'Choose a workspace for this:'\n        col1.setAttribute('style', 'vertical-align:middle;')\n        tr.appendChild(col1)\n      }\n      col2 = dom.createElement('td')\n      style = kb.anyValue(ws, ns.ui('style'))\n      if (!style) {\n        // Otherwise make up arbitrary colour\n        const hash = function (x) {\n          return x.split('').reduce(function (a, b) {\n            a = (a << 5) - a + b.charCodeAt(0)\n            return a & a\n          }, 0)\n        }\n        const bgcolor = `#${((hash(ws.uri) & 0xffffff) | 0xc0c0c0).toString(16)}` // c0c0c0  forces pale\n        style = `color: black ; background-color: ${bgcolor};`\n      }\n      col2.setAttribute('style', deselectedStyle + style)\n      tr.target = ws.uri\n      let label = kb.any(ws, ns.rdfs('label'))\n      if (!label) {\n        label = ws.uri.split('/').slice(-1)[0] || ws.uri.split('/').slice(-2)[0]\n      }\n      col2.textContent = label || '???'\n      tr.appendChild(col2)\n      if (i === 0) {\n        col3 = dom.createElement('td')\n        col3.setAttribute('rowspan', `${w.length}1`)\n        // col3.textContent = '@@@@@ remove';\n        col3.setAttribute('style', 'width:50%;')\n        tr.appendChild(col3)\n      }\n      table.appendChild(tr)\n\n      comment = kb.any(ws, ns.rdfs('comment'))\n      comment = comment ? comment.value : 'Use this workspace'\n      col2.addEventListener('click', function (_event) {\n        col3.textContent = comment ? comment.value : ''\n        col3.setAttribute('style', deselectedStyle + style)\n        const button = dom.createElement('button')\n        button.textContent = 'Continue'\n        // button.setAttribute('style', style);\n        const newBase = figureOutBase(ws)\n        baseField.value = newBase // show user proposed URI\n\n        button.addEventListener('click', function (_event) {\n          button.disabled = true\n          callbackWS(ws, newBase)\n          button.textContent = '---->'\n        }, true) // capture vs bubble\n        col3.appendChild(button)\n      }, true) // capture vs bubble\n    }\n\n    // last line with \"Make new workspace\"\n    const trLast = dom.createElement('tr')\n    col2 = dom.createElement('td')\n    col2.setAttribute('style', cellStyle)\n    col2.textContent = '+ Make a new workspace'\n    col2.addEventListener('click', makeNewWorkspace)\n    trLast.appendChild(col2)\n    table.appendChild(trLast)\n  } // displayOptions\n\n  logInLoadPreferences(context) // kick off async operation\n    .then(displayOptions)\n    .catch(err => {\n      box.appendChild(widgets.errorMessageBlock(context.dom, err))\n    })\n\n  return box // return the box element, while login proceeds\n} // selectWorkspace\n\n/**\n * Creates a new instance of an app.\n *\n * An instance of an app could be e.g. an issue tracker for a given project,\n * or a chess game, or calendar, or a health/fitness record for a person.\n *\n * Note that this use of the term 'app' refers more to entries in the user's\n * type index than to actual software applications that use the personal data\n * to which these entries point.\n *\n * @param dom\n * @param appDetails\n * @param callback\n *\n * @returns A div with a button in it for making a new app instance\n */\nexport function newAppInstance (\n  dom: HTMLDocument,\n  appDetails: AppDetails,\n  callback: (workspace: string | null, newBase: string) => void\n): HTMLElement {\n  const gotWS = function (ws, base) {\n    // log.debug(\"newAppInstance: Selected workspace = \" + (ws? ws.uri : 'none'))\n    callback(ws, base)\n  }\n  const div = dom.createElement('div')\n  const b = dom.createElement('button')\n  b.setAttribute('type', 'button')\n  div.appendChild(b)\n  b.innerHTML = `Make new ${appDetails.noun}`\n  b.addEventListener('click', _event => {\n    div.appendChild(selectWorkspace(dom, appDetails, gotWS))\n  }, false)\n  div.appendChild(b)\n  return div\n}\n\n/**\n * Retrieves whether the currently logged in user is a power user\n * and/or a developer\n */\nexport async function getUserRoles (): Promise<Array<NamedNode>> {\n  try {\n    const {\n      me,\n      preferencesFile,\n      preferencesFileError\n    } = await logInLoadPreferences({})\n    if (!preferencesFile || preferencesFileError) {\n      throw new Error(preferencesFileError)\n    }\n    return kb.each(me, ns.rdf('type'), null, preferencesFile.doc())\n  } catch (error) {\n    debug.warn('Unable to fetch your preferences - this was the error: ', error)\n  }\n  return []\n}\n\n/**\n * Filters which panes should be available, based on the result of [[getUserRoles]]\n */\nexport async function filterAvailablePanes (panes: Array<PaneDefinition>): Promise<Array<PaneDefinition>> {\n  const userRoles = await getUserRoles()\n  return panes.filter(pane => isMatchingAudience(pane, userRoles))\n}\n\nfunction isMatchingAudience (pane: PaneDefinition, userRoles: Array<NamedNode>): boolean {\n  const audience = pane.audience || []\n  return audience.reduce(\n    (isMatch, audienceRole) => isMatch && !!userRoles.find(role => role.equals(audienceRole)),\n    true as boolean\n  )\n}\n"],"file":"authn.js"}