{"version":3,"sources":["../../src/authn/authn.ts"],"names":["findOriginOwner","doc","uri","i","indexOf","j","origin","slice","saveUser","webId","context","webIdUri","me","defaultTestUser","offlineId","offlineTestID","currentUser","str","localStorage","da","JSON","parse","session","logIn","Promise","resolve","checkUser","then","debug","log","div","dom","box","loginStatusBox","appendChild","logInLoadProfile","publicProfile","profileDocument","reject","webID","Error","solidLogicSingleton","loadDoc","_response","err","message","widgets","errorMessageBlock","logInLoadPreferences","preferencesFile","statusArea","progressDisplay","complain","loadPreferences","parentNode","removeChild","m2","UnauthorizedError","CrossOriginForbiddenError","window","location","preferencesFileError","SameOriginForbiddenError","warn","NotFoundError","confirm","FetchError","status","loadTypeIndexes","loadIndex","isPublic","index","ixs","getTypeIndex","length","load","ensureTypeIndexes","ensureOneTypeIndex","makeIndexIfNecessary","putIndex","newIndex","createEmptyRdfDoc","msg","relevant","visibility","dir","addMe","ns","solid","updatePromise","push","findAppInstances","theClass","unique","arr","Array","from","Set","undefined","thisIndex","registrations","map","ix","store","each","flat","instances","reg","containers","concat","e","utils","label","cont","getContainerElements","registerInTypeIndex","instance","indexes","registration","newThing","ins","rdf","registrationControl","createElement","innerHTML","setAttribute","tbody","children","form","registrationStatements","getRegistrations","statements","buildChecsolidLogicSingleton","storeoxForm","noun","textContent","registrationList","options","_indexes","table","firstChild","sts","vs","forEach","statementsMatching","statement","type","holds","subject","why","inst","object","personTR","deleteFunction","_x","updater","update","ok","errorBody","setACLUserPublic","docURI","aclDoc","any","sym","ACL_LINK","fetchACLRel","aclText","genACLText","fetcher","webOperation","data","contentType","result","error","aclURI","optPublic","g","auth","a","acl","add","defaultForNew","foaf","p","$SolidTestEnvironment","username","document","getElementById","id","getAttribute","getDefaultSignInButtonStyle","signInOrSignUpBox","setUserCallback","signInButtonStyle","buttonStyle","magicClassName","style","signInPopUpButton","addEventListener","offline","solidAuthClient","popupLogin","webIdURI","divs","getElementsByClassName","parent","signupButton","_event","signupMgr","Signup","signup","webIdFromSession","currentSession","listener","setIt","newidURI","refresh","logoutButtonHandler","logout","alert","logoutButton","logoutLabel","nick","value","signOutButton","clearElement","trackSession","selectWorkspace","appDetails","callbackWS","appPathSegment","say","s","figureOutBase","ws","newBase","space","split","now","Date","getTime","displayOptions","makeNewWorkspace","row","cell","padding","encodeURI","askName","newWs","newData","w","storages","ldp","filter","file","includes","toLowerCase","commentStyle","baseField","textInputStyle","size","autocomplete","button","replace","x","col1","col2","col3","tr","comment","cellStyle","deselectedStyle","anyValue","ui","hash","reduce","b","charCodeAt","bgcolor","toString","target","rdfs","disabled","trLast","newAppInstance","callback","gotWS","base","getUserRoles","filterAvailablePanes","panes","userRoles","pane","isMatchingAudience","audience","isMatch","audienceRole","find","role","equals"],"mappings":"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","sourcesContent":["/**\n * Signing in, signing up, profile and preferences reloading\n * Type index management\n *\n * Many functions in this module take a context object which\n * holds various RDF symbols, add to it, and return a promise of it.\n *\n * * `me`                RDF symbol for the user's WebID\n * * `publicProfile`     The user's public profile, iff loaded\n * * `preferencesFile`   The user's personal preference file, iff loaded\n * * `index.public`      The user's public type index file\n * * `index.private`     The user's private type index file\n *\n * Not RDF symbols:\n * * `noun`            A string in english for the type of thing -- like \"address book\"\n * * `instance`        An array of nodes which are existing instances\n * * `containers`      An array of nodes of containers of instances\n * * `div`             A DOM element where UI can be displayed\n * * `statusArea`      A DOM element (opt) progress stuff can be displayed, or error messages\n * @packageDocumentation\n */\nimport { graph, namedNode, NamedNode, Namespace, serialize, st, Statement, sym, bnode } from 'rdflib'\nimport solidAuthClient from 'solid-auth-client'\nimport { ACL_LINK } from 'solid-logic'\nimport { PaneDefinition } from 'pane-registry'\nimport Signup from './signup'\nimport widgets from '../widgets'\nimport ns from '../ns.js'\nimport utils from '../utils.js'\nimport { alert } from '../log'\nimport { AppDetails, AuthenticationContext } from './types'\nimport * as debug from '../debug'\nimport { textInputStyle, buttonStyle, commentStyle } from '../style'\n// eslint-disable-next-line camelcase\nimport { Quad_Object } from 'rdflib/lib/tf-types'\nimport { solidLogicSingleton } from '../logic'\nimport { CrossOriginForbiddenError, FetchError, NotFoundError, SameOriginForbiddenError, UnauthorizedError } from '../solid-logic-move-me'\n\nexport { solidAuthClient }\n\n// const userCheckSite = 'https://databox.me/'\n\n/**\n * Look for and load the User who has control over it\n */\nexport function findOriginOwner (doc: NamedNode | string): string | boolean {\n  const uri = (typeof doc === 'string') ? doc : doc.uri\n  const i = uri.indexOf('://')\n  if (i < 0) return false\n  const j = uri.indexOf('/', i + 3)\n  if (j < 0) return false\n  const origin = uri.slice(0, j + 1) // @@ TBC\n  return origin\n}\n\n/**\n * Saves `webId` in `context.me`\n * @param webId\n * @param context\n *\n * @returns Returns the WebID, after setting it\n */\nexport function saveUser (\n  webId: NamedNode | string | null,\n  context?: AuthenticationContext\n): NamedNode | null {\n  // @@ TODO Remove the need for having context as output argument\n  let webIdUri: string\n  if (webId) {\n    webIdUri = (typeof webId === 'string') ? webId : webId.uri\n    const me = namedNode(webIdUri)\n    if (context) {\n      context.me = me\n    }\n    return me\n  }\n  return null\n}\n\n/**\n * Wrapper around [[offlineTestID]]\n * @returns {NamedNode|null}\n */\nexport function defaultTestUser (): NamedNode | null {\n  // Check for offline override\n  const offlineId = offlineTestID()\n\n  if (offlineId) {\n    return offlineId\n  }\n\n  return null\n}\n\n/**\n * Checks synchronously whether user is logged in\n *\n * @returns Named Node or null\n */\nexport function currentUser (): NamedNode | null {\n  const str = localStorage['solid-auth-client']\n  if (str) {\n    const da = JSON.parse(str)\n    if (da.session && da.session.webId) {\n      // @@ TODO check has not expired\n      return sym(da.session.webId)\n    }\n  }\n  return offlineTestID() // null unless testing\n  // JSON.parse(localStorage['solid-auth-client']).session.webId\n}\n\n/**\n * Resolves with the logged in user's WebID\n *\n * @param context\n */\nexport function logIn (context: AuthenticationContext): Promise<AuthenticationContext> {\n  const me = defaultTestUser() // me is a NamedNode or null\n\n  if (me) {\n    context.me = me\n    return Promise.resolve(context)\n  }\n\n  return new Promise(resolve => {\n    checkUser().then(webId => {\n      // Already logged in?\n      if (webId) {\n        context.me = sym(webId as string)\n        debug.log(`logIn: Already logged in as ${context.me}`)\n        return resolve(context)\n      }\n      if (!context.div || !context.dom) {\n        return resolve(context)\n      }\n      const box = loginStatusBox(context.dom, webIdUri => {\n        saveUser(webIdUri, context)\n        resolve(context) // always pass growing context\n      })\n      context.div.appendChild(box)\n    })\n  })\n}\n\n/**\n * Logs the user in and loads their WebID profile document into the store\n *\n * @param context\n *\n * @returns Resolves with the context after login / fetch\n */\nexport function logInLoadProfile (context: AuthenticationContext): Promise<AuthenticationContext> {\n  if (context.publicProfile) {\n    return Promise.resolve(context)\n  } // already done\n  let profileDocument\n  return new Promise(function (resolve, reject) {\n    return logIn(context)\n      .then(context => {\n        const webID = context.me\n        if (!webID) {\n          return reject(new Error('Could not log in'))\n        }\n        profileDocument = webID.doc()\n        solidLogicSingleton.loadDoc(profileDocument)\n          .then(_response => {\n            context.publicProfile = profileDocument\n            resolve(context)\n          })\n          .catch(err => {\n            const message = `Logged in but cannot load profile ${profileDocument} : ${err}`\n            if (context.div && context.dom) {\n              context.div.appendChild(\n                widgets.errorMessageBlock(context.dom, message)\n              )\n            }\n            reject(message)\n          })\n      })\n      .catch(err => {\n        reject(new Error(`Can't log in: ${err}`))\n      })\n  })\n}\n\n/**\n * Loads preference file\n * Do this after having done log in and load profile\n *\n * @private\n *\n * @param context\n */\nexport function logInLoadPreferences (context: AuthenticationContext): Promise<AuthenticationContext> {\n  if (context.preferencesFile) return Promise.resolve(context) // already done\n\n  const statusArea = context.statusArea || context.div || null\n  let progressDisplay\n  return new Promise(function (resolve, reject) {\n    function complain (message) {\n      message = `logInLoadPreferences: ${message}`\n      if (statusArea) {\n        // statusArea.innerHTML = ''\n        statusArea.appendChild(\n          widgets.errorMessageBlock(context.dom, message)\n        )\n      }\n      debug.log(message)\n      reject(new Error(message))\n    }\n    return logInLoadProfile(context)\n      .then(context => {\n        return solidLogicSingleton.loadPreferences(context.me).then(function (preferencesFile) {\n          if (progressDisplay) {\n            progressDisplay.parentNode.removeChild(progressDisplay)\n          }\n          context.preferencesFile = preferencesFile\n          return resolve(context)\n        })\n      })\n      .catch(err => {\n        let m2: string\n        if (err instanceof UnauthorizedError) {\n          m2 = 'Strange - you are not authenticated (properly logged in) to read preference file.'\n          alert(m2)\n        } else if (err instanceof CrossOriginForbiddenError) {\n          m2 = `Unauthorized: Assuming preference file blocked for origin ${window.location.origin}`\n          context.preferencesFileError = m2\n          return resolve(context)\n        } else if (err instanceof SameOriginForbiddenError) {\n          m2 = 'You are not authorized to read your preference file. This may be because you are using an untrusted web app.'\n          debug.warn(m2)\n        } else if (err instanceof NotFoundError) {\n          if (\n            confirm(`You do not currently have a preference file. OK for me to create an empty one? ${err.preferencesFile}`)\n          ) {\n            // @@@ code me  ... weird to have a name of the file but no file\n            alert(`Sorry; I am not prepared to do this. Please create an empty file at ${err.preferencesFile}`)\n            return complain(\n              new Error('Sorry; no code yet to create a preference file at ')\n            )\n          } else {\n            reject(\n              new Error(`User declined to create a preference file at ${err.preferencesFile}`)\n            )\n          }\n        } else if (err instanceof FetchError) {\n          m2 = `Strange: Error ${err.status} trying to read your preference file.${err.message}`\n          alert(m2)\n        } else {\n          reject(new Error(`(via loadPrefs) ${err}`))\n        }\n      })\n  })\n}\n\n/**\n * Resolves with the same context, outputting\n * output: index.public, index.private\n *\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nexport async function loadTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\n  await loadIndex(context, true)\n  await loadIndex(context, false)\n  return context\n}\n\nasync function loadIndex (\n  context: AuthenticationContext,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  const me = context.me\n  let ixs\n  context.index = context.index || {}\n\n  if (isPublic) {\n    ixs = solidLogicSingleton.getTypeIndex(me, context.publicProfile, isPublic)\n    context.index.public = ixs\n  } else {\n    if (!context.preferencesFileError) {\n      ixs = solidLogicSingleton.getTypeIndex(me, context.preferencesFile, isPublic)\n      context.index.private = ixs\n      if (ixs.length === 0) {\n        widgets.complain(`Your preference file ${context.preferencesFile} does not point to a private type index.`)\n        return context\n      }\n    } else {\n      debug.log(\n        'We know your preference file is not available, so we are not bothering with private type indexes.'\n      )\n    }\n  }\n\n  try {\n    await solidLogicSingleton.load(ixs)\n  } catch (err) {\n    widgets.complain(context, `loadIndex: loading public type index ${err}`)\n  }\n  return context\n}\n\n/**\n * Resolves with the same context, outputting\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nasync function ensureTypeIndexes (context: AuthenticationContext): Promise<AuthenticationContext> {\n  await ensureOneTypeIndex(context, true)\n  await ensureOneTypeIndex(context, false)\n  return context\n}\n\n/**\n * Load or create ONE type index\n * Find one or make one or fail\n * Many reasons for failing including script not having permission etc\n *\n * Adds its output to the context\n * @see https://github.com/solid/solid/blob/master/proposals/data-discovery.md#discoverability\n */\nasync function ensureOneTypeIndex (context: AuthenticationContext, isPublic: boolean): Promise<AuthenticationContext | void> {\n  async function makeIndexIfNecessary (context, isPublic) {\n    const relevant = isPublic ? context.publicProfile : context.preferencesFile\n    const visibility = isPublic ? 'public' : 'private'\n\n    async function putIndex (newIndex) {\n      try {\n        await solidLogicSingleton.createEmptyRdfDoc(newIndex, 'Blank initial Type index')\n        return context\n      } catch (e) {\n        const msg = `Error creating new index ${e}`\n        widgets.complain(context, msg)\n      }\n    } // putIndex\n\n    context.index = context.index || {}\n    context.index[visibility] = context.index[visibility] || []\n    let newIndex\n    if (context.index[visibility].length === 0) {\n      newIndex = sym(`${relevant.dir().uri + visibility}TypeIndex.ttl`)\n      debug.log(`Linking to new fresh type index ${newIndex}`)\n      if (!confirm(`OK to create a new empty index file at ${newIndex}, overwriting anything that is now there?`)) {\n        throw new Error('cancelled by user')\n      }\n      debug.log(`Linking to new fresh type index ${newIndex}`)\n      const addMe = [\n        st(context.me, ns.solid(`${visibility}TypeIndex`), newIndex, relevant)\n      ]\n      try {\n        await solidLogicSingleton.updatePromise([], addMe)\n      } catch (err) {\n        const msg = `Error saving type index link saving back ${newIndex}: ${err}`\n        widgets.complain(context, msg)\n        return context\n      }\n\n      debug.log(`Creating new fresh type index file${newIndex}`)\n      await putIndex(newIndex)\n      context.index[visibility].push(newIndex) // @@ wait\n    } else {\n      // officially exists\n      const ixs = context.index[visibility]\n      try {\n        await solidLogicSingleton.load(ixs)\n      } catch (err) {\n        widgets.complain(context, `ensureOneTypeIndex: loading indexes ${err}`)\n      }\n    }\n  } // makeIndexIfNecessary\n\n  try {\n    await loadIndex(context, isPublic)\n    if (context.index) {\n      debug.log(\n        `ensureOneTypeIndex: Type index exists already ${isPublic\n          ? context.index.public[0]\n          : context.index.private[0]\n        }`\n      )\n    }\n    return context\n  } catch (error) {\n    await makeIndexIfNecessary(context, isPublic)\n    // widgets.complain(context, 'calling loadIndex:' + error)\n  }\n}\n\n/**\n * Returns promise of context with arrays of symbols\n *\n * 2016-12-11 change to include forClass arc a la\n * https://github.com/solid/solid/blob/master/proposals/data-discovery.md\n */\nexport async function findAppInstances (\n  context: AuthenticationContext,\n  theClass: NamedNode,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  if (isPublic === undefined) {\n    // Then both public and private\n    await findAppInstances(context, theClass, true)\n    await findAppInstances(context, theClass, false)\n    return context\n  }\n\n  // Loading preferences is more than loading profile\n  try {\n    await (isPublic\n      ? logInLoadProfile(context)\n      : logInLoadPreferences(context))\n  } catch (err) {\n    widgets.complain(context, `loadIndex: login and load problem ${err}`)\n  }\n\n  const visibility = isPublic ? 'public' : 'private'\n  try {\n    await loadIndex(context, isPublic)\n  } catch (err) {\n  }\n  const index = context.index as { [key: string]: Array<NamedNode> }\n  const thisIndex = index[visibility]\n  const registrations = thisIndex\n    .map(ix => solidLogicSingleton.store.each(undefined, ns.solid('forClass'), theClass, ix))\n    .flat()\n  const instances = registrations\n    .map(reg => solidLogicSingleton.store.each(reg, ns.solid('instance')))\n    .flat()\n  const containers = registrations\n    .map(reg => solidLogicSingleton.store.each(reg, ns.solid('instanceContainer')))\n    .flat()\n\n  function unique (arr: NamedNode[]): NamedNode[] {\n    return Array.from(new Set(arr))\n  }\n  context.instances = context.instances || []\n  context.instances = unique(context.instances.concat(instances))\n\n  context.containers = context.containers || []\n  context.containers = unique(context.containers.concat(containers))\n  if (!containers.length) {\n    return context\n  }\n  // If the index gives containers, then look up all things within them\n  try {\n    await solidLogicSingleton.load(containers)\n  } catch (err) {\n    const e = new Error(`[FAI] Unable to load containers${err}`)\n    debug.log(e) // complain\n    widgets.complain(context, `Error looking for ${utils.label(theClass)}:  ${err}`)\n    // but then ignore it\n    // throw new Error(e)\n  }\n  for (let i = 0; i < containers.length; i++) {\n    const cont = containers[i]\n    context.instances = context.instances.concat(\n      solidLogicSingleton.getContainerElements(cont)\n    )\n  }\n  return context\n}\n\n/**\n * Register a new app in a type index\n */\nexport async function registerInTypeIndex (\n  context: AuthenticationContext,\n  instance: NamedNode,\n  theClass: NamedNode,\n  isPublic: boolean\n): Promise<AuthenticationContext> {\n  await ensureOneTypeIndex(context, isPublic)\n  if (!context.index) {\n    throw new Error('registerInTypeIndex: No type index found')\n  }\n  const indexes = isPublic ? context.index.public : context.index.private\n  if (!indexes.length) {\n    throw new Error('registerInTypeIndex: What no type index?')\n  }\n  const index = indexes[0]\n  const registration = widgets.newThing(index)\n  const ins = [\n    // See https://github.com/solid/solid/blob/master/proposals/data-discovery.md\n    st(registration, ns.rdf('type'), ns.solid('TypeRegistration'), index),\n    st(registration, ns.solid('forClass'), theClass, index),\n    st(registration, ns.solid('instance'), instance, index)\n  ]\n  try {\n    await solidLogicSingleton.updatePromise([], ins)\n  } catch (e) {\n    debug.log(e)\n    alert(e)\n  }\n  return context\n}\n\n/**\n * UI to control registration of instance\n */\nexport function registrationControl (\n  context: AuthenticationContext,\n  instance,\n  theClass\n): Promise<AuthenticationContext | void> {\n  const dom = context.dom\n  if (!dom || !context.div) {\n    return Promise.resolve()\n  }\n  const box = dom.createElement('div')\n  context.div.appendChild(box)\n\n  return ensureTypeIndexes(context)\n    .then(function () {\n      box.innerHTML = '<table><tbody><tr></tr><tr></tr></tbody></table>' // tbody will be inserted anyway\n      box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid gray 0.05em;')\n      const tbody = box.children[0].children[0]\n      const form = bnode() // @@ say for now\n\n      const registrationStatements = function (index) {\n        const registrations = solidLogicSingleton.getRegistrations(instance, theClass)\n        const reg = registrations.length\n          ? registrations[0]\n          : widgets.newThing(index)\n        return [\n          st(reg, ns.solid('instance'), instance, index),\n          st(reg, ns.solid('forClass'), theClass, index)\n        ]\n      }\n\n      let index, statements\n\n      if (context.index && context.index.public && context.index.public.length > 0) {\n        index = context.index.public[0]\n        statements = registrationStatements(index)\n        tbody.children[0].appendChild(\n          widgets.buildChecsolidLogicSingleton.storeoxForm(\n            context.dom,\n            solidLogicSingleton.store,\n            `Public link to this ${context.noun}`,\n            null,\n            statements,\n            form,\n            index\n          )\n        )\n      }\n\n      if (context.index && context.index.private && context.index.private.length > 0) {\n        index = context.index.private[0]\n        statements = registrationStatements(index)\n        tbody.children[1].appendChild(\n          widgets.buildChecsolidLogicSingleton.storeoxForm(\n            context.dom,\n            solidLogicSingleton.store,\n            `Personal note of this ${context.noun}`,\n            null,\n            statements,\n            form,\n            index\n          )\n        )\n      }\n      return context\n    },\n    function (e) {\n      let msg\n      if (context.div && context.preferencesFileError) {\n        msg = '(Preferences not available)'\n        context.div.appendChild(dom.createElement('p')).textContent = msg\n      } else if (context.div) {\n        msg = `registrationControl: Type indexes not available: ${e}`\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\n      }\n      debug.log(msg)\n    }\n    )\n    .catch(function (e) {\n      const msg = `registrationControl: Error making panel: ${e}`\n      if (context.div) {\n        context.div.appendChild(widgets.errorMessageBlock(context.dom, e))\n      }\n      debug.log(msg)\n    })\n}\n\n/**\n * UI to List at all registered things\n */\nexport function registrationList (context: AuthenticationContext, options: {\n  private?: boolean\n  public?: boolean\n  type?: NamedNode\n}): Promise<AuthenticationContext> {\n  const dom = context.dom as HTMLDocument\n  const div = context.div as HTMLElement\n\n  const box = dom.createElement('div')\n  div.appendChild(box)\n\n  return ensureTypeIndexes(context).then(_indexes => {\n    box.innerHTML = '<table><tbody></tbody></table>' // tbody will be inserted anyway\n    box.setAttribute('style', 'font-size: 120%; text-align: right; padding: 1em; border: solid #eee 0.5em;')\n    const table = box.firstChild as HTMLElement\n\n    let ix: Array<NamedNode> = []\n    let sts = []\n    const vs = ['private', 'public']\n    vs.forEach(function (visibility) {\n      if (context.index && options[visibility]) {\n        ix = ix.concat(context.index[visibility][0])\n        sts = sts.concat(\n          solidLogicSingleton.store.statementsMatching(\n            undefined,\n            ns.solid('instance'),\n            undefined,\n            context.index[visibility][0]\n          )\n        )\n      }\n    })\n\n    for (let i = 0; i < sts.length; i++) {\n      const statement: Statement = sts[i]\n      if (options.type) { // now check  terms:forClass\n        if (!solidLogicSingleton.store.holds(statement.subject, ns.solid('forClass'), options.type, statement.why)) {\n          continue // skip irrelevant ones\n        }\n      }\n      // const cla = statement.subject\n      const inst = statement.object\n      table.appendChild(widgets.personTR(dom, ns.solid('instance'), inst, {\n        deleteFunction: function (_x) {\n          solidLogicSingleton.store.updater.update([statement], [], function (uri, ok, errorBody) {\n            if (ok) {\n              debug.log(`Removed from index: ${statement.subject}`)\n            } else {\n              debug.log(`Error: Cannot delete ${statement}: ${errorBody}`)\n            }\n          })\n        }\n      }))\n    } // registrationList\n\n    /*\n       //const containers = solidLogicSingleton.store.each(theClass, ns.solid('instanceContainer'));\n       if (containers.length) {\n       fetcher.load(containers).then(function(xhrs){\n       for (const i=0; i<containers.length; i++) {\n       const cont = containers[i];\n       instances = instances.concat(solidLogicSingleton.store.each(cont, ns.ldp('contains')));\n       }\n       });\n       }\n       */\n\n    return context\n  })\n}\n\n/**\n * Simple Access Control\n *\n * This function sets up a simple default ACL for a resource, with\n * RWC for the owner, and a specified access (default none) for the public.\n * In all cases owner has read write control.\n * Parameter lists modes allowed to public\n *\n * @param options\n * @param options.public eg ['Read', 'Write']\n *\n * @returns Resolves with aclDoc uri on successful write\n */\nexport function setACLUserPublic (\n  docURI: string,\n  me: NamedNode,\n  options: {\n    defaultForNew?: boolean,\n    public?: []\n  }\n): Promise<NamedNode> {\n  const aclDoc = solidLogicSingleton.store.any(\n    solidLogicSingleton.store.sym(docURI),\n    solidLogicSingleton.store.sym(ACL_LINK)\n  )\n\n  return Promise.resolve()\n    .then(() => {\n      if (aclDoc) {\n        return aclDoc\n      }\n\n      return fetchACLRel(docURI).catch(err => {\n        throw new Error(`Error fetching rel=ACL header for ${docURI}: ${err}`)\n      })\n    })\n    .then(aclDoc => {\n      const aclText = genACLText(docURI, me, aclDoc.uri, options)\n\n      return solidLogicSingleton.store.fetcher\n        .webOperation('PUT', aclDoc.uri, {\n          data: aclText,\n          contentType: 'text/turtle'\n        })\n        .then(result => {\n          if (!result.ok) {\n            throw new Error('Error writing ACL text: ' + result.error)\n          }\n\n          return aclDoc\n        })\n    })\n}\n\n/**\n * @param docURI\n * @returns\n */\nfunction fetchACLRel (docURI: string): Promise<NamedNode> {\n  const fetcher = solidLogicSingleton.store.fetcher\n\n  return fetcher.load(docURI).then(result => {\n    if (!result.ok) {\n      throw new Error('fetchACLRel: While loading:' + result.error)\n    }\n\n    const aclDoc = solidLogicSingleton.store.any(\n      solidLogicSingleton.store.sym(docURI),\n      solidLogicSingleton.store.sym(ACL_LINK)\n    )\n\n    if (!aclDoc) {\n      throw new Error('fetchACLRel: No Link rel=ACL header for ' + docURI)\n    }\n\n    return aclDoc\n  })\n}\n\n/**\n * @param docURI\n * @param me\n * @param aclURI\n * @param options\n *\n * @returns Serialized ACL\n */\nfunction genACLText (\n  docURI: string,\n  me: NamedNode,\n  aclURI: string,\n  options: {\n    defaultForNew?: boolean,\n    public?: []\n  } = {}\n): string | undefined {\n  const optPublic = options.public || []\n  const g = graph()\n  const auth = Namespace('http://www.w3.org/ns/auth/acl#')\n  let a = g.sym(`${aclURI}#a1`)\n  const acl = g.sym(aclURI)\n  const doc = g.sym(docURI)\n  g.add(a, ns.rdf('type'), auth('Authorization'), acl)\n  g.add(a, auth('accessTo'), doc, acl)\n  if (options.defaultForNew) {\n    // TODO: Should this be auth('default') instead?\n    g.add(a, auth('defaultForNew'), doc, acl)\n  }\n  g.add(a, auth('agent'), me, acl)\n  g.add(a, auth('mode'), auth('Read'), acl)\n  g.add(a, auth('mode'), auth('Write'), acl)\n  g.add(a, auth('mode'), auth('Control'), acl)\n\n  if (optPublic.length) {\n    a = g.sym(`${aclURI}#a2`)\n    g.add(a, ns.rdf('type'), auth('Authorization'), acl)\n    g.add(a, auth('accessTo'), doc, acl)\n    g.add(a, auth('agentClass'), ns.foaf('Agent'), acl)\n    for (let p = 0; p < optPublic.length; p++) {\n      g.add(a, auth('mode'), auth(optPublic[p]), acl) // Like 'Read' etc\n    }\n  }\n  return serialize(acl, g, aclURI)\n}\n\n/**\n * Returns `sym($SolidTestEnvironment.username)` if\n * `$SolidTestEnvironment.username` is defined as a global\n * @returns {NamedNode|null}\n */\nexport function offlineTestID (): NamedNode | null {\n  const { $SolidTestEnvironment }: any = window\n  if (\n    typeof $SolidTestEnvironment !== 'undefined' &&\n    $SolidTestEnvironment.username\n  ) {\n    // Test setup\n    debug.log('Assuming the user is ' + $SolidTestEnvironment.username)\n    return sym($SolidTestEnvironment.username)\n  }\n\n  if (\n    typeof document !== 'undefined' &&\n    document.location &&\n    ('' + document.location).slice(0, 16) === 'http://localhost'\n  ) {\n    const div = document.getElementById('appTarget')\n    if (!div) return null\n    const id = div.getAttribute('testID')\n    if (!id) return null\n    /* me = solidLogicSingleton.store.any(subject, ns.acl('owner')); // when testing on plane with no WebID\n     */\n    debug.log('Assuming user is ' + id)\n    return sym(id)\n  }\n  return null\n}\n\nfunction getDefaultSignInButtonStyle (): string {\n  return 'padding: 1em; border-radius:0.5em; margin: 2em; font-size: 100%;'\n}\n\n/**\n * Bootstrapping identity\n * (Called by `loginStatusBox()`)\n *\n * @param dom\n * @param setUserCallback\n *\n * @returns\n */\nfunction signInOrSignUpBox (\n  dom: HTMLDocument,\n  setUserCallback: (user: string) => void,\n  options: {\n    buttonStyle?: string\n  } = {}\n): HTMLElement {\n  options = options || {}\n  const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\n\n  // @@ TODO Remove the need to cast HTML element to any\n  const box: any = dom.createElement('div')\n  const magicClassName = 'SolidSignInOrSignUpBox'\n  debug.log('widgets.signInOrSignUpBox')\n  box.setUserCallback = setUserCallback\n  box.setAttribute('class', magicClassName)\n  ;(box as any).style = 'display:flex;' // @@ fix all typecasts like this\n\n  // Sign in button with PopUP\n  const signInPopUpButton = dom.createElement('input') // multi\n  box.appendChild(signInPopUpButton)\n  signInPopUpButton.setAttribute('type', 'button')\n  signInPopUpButton.setAttribute('value', 'Log in')\n  signInPopUpButton.setAttribute('style', `${signInButtonStyle}background-color: #eef;`)\n\n  signInPopUpButton.addEventListener('click', () => {\n    const offline = offlineTestID()\n    if (offline) return setUserCallback(offline.uri)\n    return solidAuthClient.popupLogin().then(session => {\n      const webIdURI = session.webId\n      // setUserCallback(webIdURI)\n      const divs = dom.getElementsByClassName(magicClassName)\n      debug.log(`Logged in, ${divs.length} panels to be serviced`)\n      // At the same time, satisfy all the other login boxes\n      for (let i = 0; i < divs.length; i++) {\n        const div: any = divs[i]\n        // @@ TODO Remove the need to manipulate HTML elements\n        if (div.setUserCallback) {\n          try {\n            div.setUserCallback(webIdURI)\n            const parent = div.parentNode\n            if (parent) {\n              parent.removeChild(div)\n            }\n          } catch (e) {\n            debug.log(`## Error satisfying login box: ${e}`)\n            div.appendChild(widgets.errorMessageBlock(dom, e))\n          }\n        }\n      }\n    })\n  }, false)\n\n  // Sign up button\n  const signupButton = dom.createElement('input')\n  box.appendChild(signupButton)\n  signupButton.setAttribute('type', 'button')\n  signupButton.setAttribute('value', 'Sign Up for Solid')\n  signupButton.setAttribute('style', `${signInButtonStyle}background-color: #efe;`)\n\n  signupButton.addEventListener('click', function (_event) {\n    const signupMgr = new Signup()\n    signupMgr.signup().then(function (uri) {\n      debug.log('signInOrSignUpBox signed up ' + uri)\n      setUserCallback(uri)\n    })\n  }, false)\n  return box\n}\n\n/**\n * @returns {Promise<string|null>} Resolves with WebID URI or null\n */\nfunction webIdFromSession (session?: { webId: string }): string | null {\n  const webId = session ? session.webId : null\n  if (webId) {\n    saveUser(webId)\n  }\n  return webId\n}\n\n/**\n * @returns {Promise<string|null>} Resolves with WebID URI or null\n */\n\n/*\nfunction checkCurrentUser () {\n  return checkUser()\n}\n*/\n\n/**\n * Retrieves currently logged in webId from either\n * defaultTestUser or SolidAuthClient\n * @param [setUserCallback] Optional callback\n *\n * @returns Resolves with webId uri, if no callback provided\n */\nexport function checkUser<T> (\n  setUserCallback?: (me: NamedNode | null) => T\n): Promise<NamedNode | T> {\n  // Check to see if already logged in / have the WebID\n  const me = defaultTestUser()\n  if (me) {\n    return Promise.resolve(setUserCallback ? setUserCallback(me) : me)\n  }\n\n  // doc = solidLogicSingleton.store.any(doc, ns.link('userMirror')) || doc\n\n  return solidAuthClient\n    .currentSession()\n    .then(webIdFromSession)\n    .catch(err => {\n      debug.log('Error fetching currentSession:', err)\n    })\n    .then(webId => {\n      // if (webId.startsWith('dns:')) {  // legacy rww.io pseudo-users\n      //   webId = null\n      // }\n      const me = saveUser(webId)\n\n      if (me) {\n        debug.log(`(Logged in as ${me} by authentication)`)\n      }\n\n      return setUserCallback ? setUserCallback(me) : me\n    })\n}\n\n/**\n * Login status box\n *\n * A big sign-up/sign in box or a logout box depending on the state\n *\n * @param dom\n * @param listener\n *\n * @returns\n */\nexport function loginStatusBox (\n  dom: HTMLDocument,\n  listener: ((uri: string | null) => void) | null = null,\n  options: {\n    buttonStyle?: string\n  } = {}\n): HTMLElement {\n  // 20190630\n  let me = defaultTestUser()\n  // @@ TODO Remove the need to cast HTML element to any\n  const box: any = dom.createElement('div')\n\n  function setIt (newidURI) {\n    if (!newidURI) {\n      return\n    }\n\n    const uri = newidURI.uri || newidURI\n    //    UI.preferences.set('me', uri)\n    me = sym(uri)\n    box.refresh()\n    if (listener) listener(me.uri)\n  }\n\n  function logoutButtonHandler (_event) {\n    // UI.preferences.set('me', '')\n    solidAuthClient.logout().then(\n      function () {\n        const message = `Your WebID was ${me}. It has been forgotten.`\n        me = null\n        try {\n          alert(message)\n        } catch (e) {\n          window.alert(message)\n        }\n        box.refresh()\n        if (listener) listener(null)\n      },\n      err => {\n        alert('Fail to log out:' + err)\n      }\n    )\n  }\n\n  function logoutButton (me, options) {\n    const signInButtonStyle = options.buttonStyle || getDefaultSignInButtonStyle()\n    let logoutLabel = 'WebID logout'\n    if (me) {\n      const nick =\n        solidLogicSingleton.store.any(me, ns.foaf('nick')) ||\n        solidLogicSingleton.store.any(me, ns.foaf('name'))\n      if (nick) {\n        logoutLabel = 'Logout ' + nick.value\n      }\n    }\n    const signOutButton = dom.createElement('input')\n    // signOutButton.className = 'WebIDCancelButton'\n    signOutButton.setAttribute('type', 'button')\n    signOutButton.setAttribute('value', logoutLabel)\n    signOutButton.setAttribute('style', `${signInButtonStyle}background-color: #eee;`)\n    signOutButton.addEventListener('click', logoutButtonHandler, false)\n    return signOutButton\n  }\n\n  box.refresh = function () {\n    solidAuthClient.currentSession().then(\n      session => {\n        if (session && session.webId) {\n          me = sym(session.webId)\n        } else {\n          me = null\n        }\n        if ((me && box.me !== me.uri) || (!me && box.me)) {\n          widgets.clearElement(box)\n          if (me) {\n            box.appendChild(logoutButton(me, options))\n          } else {\n            box.appendChild(signInOrSignUpBox(dom, setIt, options))\n          }\n        }\n        box.me = me ? me.uri : null\n      },\n      err => {\n        alert(`loginStatusBox: ${err}`)\n      }\n    )\n  }\n\n  if (solidAuthClient.trackSession) {\n    solidAuthClient.trackSession(session => {\n      if (session && session.webId) {\n        me = sym(session.webId)\n      } else {\n        me = null\n      }\n      box.refresh()\n    })\n  }\n\n  box.me = '99999' // Force refresh\n  box.refresh()\n  return box\n}\n\n/**\n * Workspace selection etc\n * See https://github.com/solid/userguide/issues/16\n */\n\n/**\n * Returns a UI object which, if it selects a workspace,\n * will callback(workspace, newBase).\n * See https://github.com/solid/userguide/issues/16 for more info on workspaces.\n *\n * If necessary, will get an account, preference file, etc. In sequence:\n *\n *   - If not logged in, log in.\n *   - Load preference file\n *   - Prompt user for workspaces\n *   - Allows the user to just type in a URI by hand\n *\n * Calls back with the workspace and the base URI\n *\n * @param dom\n * @param appDetails\n * @param callbackWS\n */\nexport function selectWorkspace (\n  dom: HTMLDocument,\n  appDetails: AppDetails,\n  callbackWS: (workspace: string | null, newBase: string) => void\n): HTMLElement {\n  const noun = appDetails.noun\n  const appPathSegment = appDetails.appPathSegment\n\n  const me = defaultTestUser()\n  const box = dom.createElement('div')\n  const context: AuthenticationContext = { me: me, dom: dom, div: box }\n\n  function say (s) {\n    box.appendChild(widgets.errorMessageBlock(dom, s))\n  }\n\n  function figureOutBase (ws) {\n    let newBase = solidLogicSingleton.store.any(ws, ns.space('uriPrefix'))\n    if (!newBase) {\n      newBase = ws.uri.split('#')[0]\n    } else {\n      newBase = newBase.value\n    }\n    if (newBase.slice(-1) !== '/') {\n      debug.log(`${appPathSegment}: No / at end of uriPrefix ${newBase}`) // @@ paramater?\n      newBase = `${newBase}/`\n    }\n    const now = new Date()\n    newBase += `${appPathSegment}/id${now.getTime()}/` // unique id\n    return newBase\n  }\n\n  function displayOptions (context) {\n    async function makeNewWorkspace (_event) {\n      const row = table.appendChild(dom.createElement('tr'))\n      const cell = row.appendChild(dom.createElement('td'))\n      cell.setAttribute('colspan', '3')\n      cell.style.padding = '0.5em'\n      const newBase = encodeURI(await widgets.askName(dom, solidLogicSingleton.store, cell, ns.solid('URL'), ns.space('Workspace'), 'Workspace'))\n      const newWs = widgets.newThing(context.preferencesFile)\n      const newData = [st(context.me, ns.space('workspace'), newWs, context.preferencesFile),\n        // eslint-disable-next-line camelcase\n        st(newWs, ns.space('uriPrefix'), newBase as unknown as Quad_Object, context.preferencesFile)]\n      await solidLogicSingleton.store.updater.update([], newData)\n      // @@ now refresh list of workspaces\n    }\n\n    // const status = ''\n    const id = context.me\n    const preferencesFile = context.preferencesFile\n    let newBase = null\n\n    // A workspace specifically defined in the private preference file:\n    let w = solidLogicSingleton.store.each(id, ns.space('workspace'), undefined, preferencesFile) // Only trust preference file here\n\n    // A workspace in a storage in the public profile:\n    const storages = solidLogicSingleton.store.each(id, ns.space('storage')) // @@ No provenance requirement at the moment\n    if (w.length === 0 && storages) {\n      say(`You don't seem to have any workspaces. You have ${storages.length} storage spaces.`)\n      storages.map(function (s) {\n        w = w.concat(solidLogicSingleton.store.each(s, ns.ldp('contains')))\n      }).filter(file => ['public', 'private'].includes(file.id().toLowerCase()))\n    }\n\n    if (w.length === 1) {\n      say(`Workspace used: ${w[0].uri}`) // @@ allow user to see URI\n      newBase = figureOutBase(w[0])\n      // callbackWS(w[0], newBase)\n    } else if (w.length === 0) {\n    }\n\n    // Prompt for ws selection or creation\n    // say( w.length + \" workspaces for \" + id + \"Choose one.\");\n    const table = dom.createElement('table')\n    table.setAttribute('style', 'border-collapse:separate; border-spacing: 0.5em;')\n\n    // const popup = window.open(undefined, '_blank', { height: 300, width:400 }, false)\n    box.appendChild(table)\n\n    //  Add a field for directly adding the URI yourself\n\n    // const hr = box.appendChild(dom.createElement('hr')) // @@\n    box.appendChild(dom.createElement('hr')) // @@\n\n    const p = box.appendChild(dom.createElement('p'))\n    ;(p as any).style = commentStyle\n    p.textContent = `Where would you like to store the data for the ${noun}?\n    Give the URL of the folder where you would like the data stored.\n    It can be anywhere in solid world - this URI is just an idea.`\n    // @@ TODO Remove the need to cast baseField to any\n    const baseField: any = box.appendChild(dom.createElement('input'))\n    baseField.setAttribute('type', 'text')\n    ;(baseField as any).style = textInputStyle\n    baseField.size = 80 // really a string\n    baseField.label = 'base URL'\n    baseField.autocomplete = 'on'\n    if (newBase) {\n      // set to default\n      baseField.value = newBase\n    }\n\n    context.baseField = baseField\n\n    box.appendChild(dom.createElement('br')) // @@\n\n    const button = box.appendChild(dom.createElement('button'))\n    ;(button as any).style = buttonStyle\n    button.textContent = `Start new ${noun} at this URI`\n    button.addEventListener('click', function (_event) {\n      let newBase = baseField.value.replace(' ', '%20') // do not re-encode in general, as % encodings may exist\n      if (newBase.slice(-1) !== '/') {\n        newBase += '/'\n      }\n      callbackWS(null, newBase)\n    })\n\n    // Now go set up the table of spaces\n\n    // const row = 0\n    w = w.filter(function (x) {\n      return !solidLogicSingleton.store.holds(\n        x,\n        ns.rdf('type'), // Ignore master workspaces\n        ns.space('MasterWorkspace')\n      )\n    })\n    let col1, col2, col3, tr, ws, style, comment\n    const cellStyle = 'height: 3em; margin: 1em; padding: 1em white; border-radius: 0.3em;'\n    const deselectedStyle = `${cellStyle}border: 0px;`\n    // const selectedStyle = cellStyle + 'border: 1px solid black;'\n    for (let i = 0; i < w.length; i++) {\n      ws = w[i]\n      tr = dom.createElement('tr')\n      if (i === 0) {\n        col1 = dom.createElement('td')\n        col1.setAttribute('rowspan', `${w.length}`)\n        col1.textContent = 'Choose a workspace for this:'\n        col1.setAttribute('style', 'vertical-align:middle;')\n        tr.appendChild(col1)\n      }\n      col2 = dom.createElement('td')\n      style = solidLogicSingleton.store.anyValue(ws, ns.ui('style'))\n      if (!style) {\n        // Otherwise make up arbitrary colour\n        const hash = function (x) {\n          return x.split('').reduce(function (a, b) {\n            a = (a << 5) - a + b.charCodeAt(0)\n            return a & a\n          }, 0)\n        }\n        const bgcolor = `#${((hash(ws.uri) & 0xffffff) | 0xc0c0c0).toString(16)}` // c0c0c0  forces pale\n        style = `color: black ; background-color: ${bgcolor};`\n      }\n      col2.setAttribute('style', deselectedStyle + style)\n      tr.target = ws.uri\n      let label = solidLogicSingleton.store.any(ws, ns.rdfs('label'))\n      if (!label) {\n        label = ws.uri.split('/').slice(-1)[0] || ws.uri.split('/').slice(-2)[0]\n      }\n      col2.textContent = label || '???'\n      tr.appendChild(col2)\n      if (i === 0) {\n        col3 = dom.createElement('td')\n        col3.setAttribute('rowspan', `${w.length}1`)\n        // col3.textContent = '@@@@@ remove';\n        col3.setAttribute('style', 'width:50%;')\n        tr.appendChild(col3)\n      }\n      table.appendChild(tr)\n\n      comment = solidLogicSingleton.store.any(ws, ns.rdfs('comment'))\n      comment = comment ? comment.value : 'Use this workspace'\n      col2.addEventListener('click', function (_event) {\n        col3.textContent = comment ? comment.value : ''\n        col3.setAttribute('style', deselectedStyle + style)\n        const button = dom.createElement('button')\n        button.textContent = 'Continue'\n        // button.setAttribute('style', style);\n        const newBase = figureOutBase(ws)\n        baseField.value = newBase // show user proposed URI\n\n        button.addEventListener('click', function (_event) {\n          button.disabled = true\n          callbackWS(ws, newBase)\n          button.textContent = '---->'\n        }, true) // capture vs bubble\n        col3.appendChild(button)\n      }, true) // capture vs bubble\n    }\n\n    // last line with \"Make new workspace\"\n    const trLast = dom.createElement('tr')\n    col2 = dom.createElement('td')\n    col2.setAttribute('style', cellStyle)\n    col2.textContent = '+ Make a new workspace'\n    col2.addEventListener('click', makeNewWorkspace)\n    trLast.appendChild(col2)\n    table.appendChild(trLast)\n  } // displayOptions\n\n  logInLoadPreferences(context) // kick off async operation\n    .then(displayOptions)\n    .catch(err => {\n      box.appendChild(widgets.errorMessageBlock(context.dom, err))\n    })\n\n  return box // return the box element, while login proceeds\n} // selectWorkspace\n\n/**\n * Creates a new instance of an app.\n *\n * An instance of an app could be e.g. an issue tracker for a given project,\n * or a chess game, or calendar, or a health/fitness record for a person.\n *\n * Note that this use of the term 'app' refers more to entries in the user's\n * type index than to actual software applications that use the personal data\n * to which these entries point.\n *\n * @param dom\n * @param appDetails\n * @param callback\n *\n * @returns A div with a button in it for making a new app instance\n */\nexport function newAppInstance (\n  dom: HTMLDocument,\n  appDetails: AppDetails,\n  callback: (workspace: string | null, newBase: string) => void\n): HTMLElement {\n  const gotWS = function (ws, base) {\n    // log.debug(\"newAppInstance: Selected workspace = \" + (ws? ws.uri : 'none'))\n    callback(ws, base)\n  }\n  const div = dom.createElement('div')\n  const b = dom.createElement('button')\n  b.setAttribute('type', 'button')\n  div.appendChild(b)\n  b.innerHTML = `Make new ${appDetails.noun}`\n  b.addEventListener('click', _event => {\n    div.appendChild(selectWorkspace(dom, appDetails, gotWS))\n  }, false)\n  div.appendChild(b)\n  return div\n}\n\n/**\n * Retrieves whether the currently logged in user is a power user\n * and/or a developer\n */\nexport async function getUserRoles (): Promise<Array<NamedNode>> {\n  try {\n    const {\n      me,\n      preferencesFile,\n      preferencesFileError\n    } = await logInLoadPreferences({})\n    if (!preferencesFile || preferencesFileError) {\n      throw new Error(preferencesFileError)\n    }\n    return solidLogicSingleton.store.each(me, ns.rdf('type'), null, preferencesFile.doc())\n  } catch (error) {\n    debug.warn('Unable to fetch your preferences - this was the error: ', error)\n  }\n  return []\n}\n\n/**\n * Filters which panes should be available, based on the result of [[getUserRoles]]\n */\nexport async function filterAvailablePanes (panes: Array<PaneDefinition>): Promise<Array<PaneDefinition>> {\n  const userRoles = await getUserRoles()\n  return panes.filter(pane => isMatchingAudience(pane, userRoles))\n}\n\nfunction isMatchingAudience (pane: PaneDefinition, userRoles: Array<NamedNode>): boolean {\n  const audience = pane.audience || []\n  return audience.reduce(\n    (isMatch, audienceRole) => isMatch && !!userRoles.find(role => role.equals(audienceRole)),\n    true as boolean\n  )\n}\n"],"file":"authn.js"}