{"version":3,"sources":["../../src/acl/access-controller.ts"],"names":["AccessController","subject","noun","context","statusElement","classes","targetIsProtected","targetDoc","targetACLDoc","defaultHolder","defaultACLDoc","prospectiveDefaultHolder","store","dom","rootElement","createElement","classList","add","aclGroupContent","isContainer","uri","slice","isUsingDefaults","aclDefaultStore","mainCombo","AccessGroups","defaults","defaultsCombo","defaultsDiffer","aclMap","innerHTML","renderStatus","defaultHolderLink","appendChild","href","innerText","render","renderRemoveDefaultsController","isEditable","renderAddDefaultsController","renderAddAclsController","renderRemoveAclsController","useDefaultButton","utils","label","bigButton","addEventListener","removeAcls","then","error","addAclButton","addAcls","containerElement","defaultsController","noticeElement","defaultsControllerNotice","button","addDefaults","removeDefaults","message","aclControlBoxStatusRevealed","temporaryStatusInit","setTimeout","temporaryStatusEnd","toggle","debug","Promise","reject","aclGraph","statements","forEach","st","predicate","object","fetcher","putBack","resolve","warn","fallbackCombo","save","newAClGraph","byCombo","updater","UpdateManager","hasWrite","any","undefined","ns","acl","hasControl","user","webId","alert","Error","confirm","put","statementsMatching","ok","unload","requested","log"],"mappings":"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","sourcesContent":["/**\n * Contains the [[AccessController]] class\n * @packageDocumentation\n */\n\nimport { adoptACLDefault, getProspectiveHolder, makeACLGraphbyCombo, sameACL } from './acl'\nimport { graph, NamedNode, UpdateManager } from 'rdflib'\nimport { AccessGroups } from './access-groups'\nimport { DataBrowserContext } from 'pane-registry'\nimport { shortNameForFolder } from './acl-control'\nimport { currentUser } from '../authn/authn'\nimport * as utils from '../utils'\nimport * as debug from '../debug'\nimport ns from '../ns'\n\n/**\n * Rendered HTML component used in the databrowser's Sharing pane.\n */\nexport class AccessController {\n  public mainCombo: AccessGroups\n  public defaultsCombo: AccessGroups | null\n  private readonly isContainer: boolean\n  private defaultsDiffer: boolean\n  private readonly rootElement: HTMLElement\n  private isUsingDefaults: boolean\n\n  constructor (\n    public subject: NamedNode,\n    public noun: string,\n    public context: DataBrowserContext,\n    private statusElement: HTMLElement,\n    public classes: Record<string, string>,\n    public targetIsProtected: boolean,\n    private targetDoc: NamedNode,\n    private targetACLDoc: NamedNode,\n    private defaultHolder: NamedNode | null,\n    private defaultACLDoc: NamedNode | null,\n    private prospectiveDefaultHolder: NamedNode | undefined,\n    public store,\n    public dom\n  ) {\n    this.rootElement = dom.createElement('div')\n    this.rootElement.classList.add(classes.aclGroupContent)\n    this.isContainer = targetDoc.uri.slice(-1) === '/' // Give default for all directories\n    if (defaultHolder && defaultACLDoc) {\n      this.isUsingDefaults = true\n      const aclDefaultStore = adoptACLDefault(this.targetDoc, targetACLDoc, defaultHolder, defaultACLDoc)\n      this.mainCombo = new AccessGroups(targetDoc, targetACLDoc, this, aclDefaultStore, { defaults: this.isContainer })\n      this.defaultsCombo = null\n      this.defaultsDiffer = false\n    } else {\n      this.isUsingDefaults = false\n      this.mainCombo = new AccessGroups(targetDoc, targetACLDoc, this, store)\n      this.defaultsCombo = new AccessGroups(targetDoc, targetACLDoc, this, store, { defaults: this.isContainer })\n      this.defaultsDiffer = !sameACL(this.mainCombo.aclMap, this.defaultsCombo.aclMap)\n    }\n  }\n\n  public get isEditable (): boolean {\n    return !this.isUsingDefaults\n  }\n\n  public render (): HTMLElement {\n    this.rootElement.innerHTML = ''\n    if (this.isUsingDefaults) {\n      this.renderStatus(`The sharing for this ${this.noun} is the default for folder `)\n      if (this.defaultHolder) {\n        const defaultHolderLink = this.statusElement.appendChild(this.dom.createElement('a'))\n        defaultHolderLink.href = this.defaultHolder.uri\n        defaultHolderLink.innerText = shortNameForFolder(this.defaultHolder)\n      }\n    } else if (!this.defaultsDiffer) {\n      this.renderStatus('This is also the default for things in this folder.')\n    } else {\n      this.renderStatus('')\n    }\n    this.rootElement.appendChild(this.mainCombo.render())\n    if (this.defaultsCombo && this.defaultsDiffer) {\n      this.rootElement.appendChild(this.renderRemoveDefaultsController())\n      this.rootElement.appendChild(this.defaultsCombo.render())\n    } else if (this.isEditable && this.isContainer) {\n      this.rootElement.appendChild(this.renderAddDefaultsController())\n    }\n    if (!this.targetIsProtected && this.isUsingDefaults) {\n      this.rootElement.appendChild(this.renderAddAclsController())\n    } else if (!this.targetIsProtected) {\n      this.rootElement.appendChild(this.renderRemoveAclsController())\n    }\n    return this.rootElement\n  }\n\n  private renderRemoveAclsController (): HTMLElement {\n    const useDefaultButton = this.dom.createElement('button')\n    useDefaultButton.innerText = `Remove custom sharing settings for this ${this.noun} -- just use default${this.prospectiveDefaultHolder ? ` for ${utils.label(this.prospectiveDefaultHolder)}` : ''}`\n    useDefaultButton.classList.add(this.classes.bigButton)\n    useDefaultButton.addEventListener('click', () => this.removeAcls()\n      .then(() => this.render())\n      .catch(error => this.renderStatus(error)))\n    return useDefaultButton\n  }\n\n  private renderAddAclsController (): HTMLElement {\n    const addAclButton = this.dom.createElement('button')\n    addAclButton.innerText = `Set specific sharing for this ${this.noun}`\n    addAclButton.classList.add(this.classes.bigButton)\n    addAclButton.addEventListener('click', () => this.addAcls()\n      .then(() => this.render())\n      .catch(error => this.renderStatus(error)))\n    return addAclButton\n  }\n\n  private renderAddDefaultsController (): HTMLElement {\n    const containerElement = this.dom.createElement('div')\n    containerElement.classList.add(this.classes.defaultsController)\n\n    const noticeElement = containerElement.appendChild(this.dom.createElement('div'))\n    noticeElement.innerText = 'Sharing for things within the folder currently tracks sharing for the folder.'\n    noticeElement.classList.add(this.classes.defaultsControllerNotice)\n\n    const button = containerElement.appendChild(this.dom.createElement('button'))\n    button.innerText = 'Set the sharing of folder contents separately from the sharing for the folder'\n    button.classList.add(this.classes.bigButton)\n    button.addEventListener('click', () => this.addDefaults()\n      .then(() => this.render()))\n    return containerElement\n  }\n\n  private renderRemoveDefaultsController (): HTMLElement {\n    const containerElement = this.dom.createElement('div')\n    containerElement.classList.add(this.classes.defaultsController)\n\n    const noticeElement = containerElement.appendChild(this.dom.createElement('div'))\n    noticeElement.innerText = 'Access to things within this folder:'\n    noticeElement.classList.add(this.classes.defaultsControllerNotice)\n\n    const button = containerElement.appendChild(this.dom.createElement('button'))\n    button.innerText = 'Set default for folder contents to just track the sharing for the folder'\n    button.classList.add(this.classes.bigButton)\n    button.addEventListener('click', () => this.removeDefaults()\n      .then(() => this.render())\n      .catch(error => this.renderStatus(error)))\n    return containerElement\n  }\n\n  public renderTemporaryStatus (message: string): void {\n    // @@ TODO Introduce better system for error notification to user https://github.com/solid/mashlib/issues/87\n    this.statusElement.classList.add(this.classes.aclControlBoxStatusRevealed)\n    this.statusElement.innerText = message\n    this.statusElement.classList.add(this.classes.temporaryStatusInit)\n    setTimeout(() => {\n      this.statusElement.classList.add(this.classes.temporaryStatusEnd)\n    })\n    setTimeout(() => {\n      this.statusElement.innerText = ''\n    }, 5000)\n  }\n\n  public renderStatus (message: string): void {\n    // @@ TODO Introduce better system for error notification to user https://github.com/solid/mashlib/issues/87\n    this.statusElement.classList.toggle(this.classes.aclControlBoxStatusRevealed, !!message)\n    this.statusElement.innerText = message\n  }\n\n  private async addAcls (): Promise<void> {\n    if (!this.defaultHolder || !this.defaultACLDoc) {\n      const message = 'Unable to find defaults to copy'\n      debug.error(message)\n      return Promise.reject(message)\n    }\n    const aclGraph = adoptACLDefault(this.targetDoc, this.targetACLDoc, this.defaultHolder, this.defaultACLDoc)\n    aclGraph.statements.forEach(st => this.store.add(st.subject, st.predicate, st.object, this.targetACLDoc))\n    try {\n      await this.store.fetcher.putBack(this.targetACLDoc)\n      this.isUsingDefaults = false\n      return Promise.resolve()\n    } catch (error) {\n      const message = ` Error writing back access control file! ${error}`\n      debug.error(message)\n      return Promise.reject(message)\n    }\n  }\n\n  private async addDefaults (): Promise<void> {\n    this.defaultsCombo = new AccessGroups(this.targetDoc, this.targetACLDoc, this, this.store, { defaults: true })\n    this.defaultsDiffer = true\n  }\n\n  private async removeAcls (): Promise<void> {\n    try {\n      await this.store.fetcher.delete(this.targetACLDoc.uri, {})\n      this.isUsingDefaults = true\n      try {\n        this.prospectiveDefaultHolder = await getProspectiveHolder(this.targetDoc.uri)\n      } catch (error) {\n        // No need to show this error in status, but good to warn about it in console\n        debug.warn(error)\n      }\n    } catch (error) {\n      const message = `Error deleting access control file: ${this.targetACLDoc}: ${error}`\n      debug.error(message)\n      return Promise.reject(message)\n    }\n  }\n\n  private async removeDefaults (): Promise<void> {\n    const fallbackCombo = this.defaultsCombo\n    try {\n      this.defaultsCombo = null\n      this.defaultsDiffer = false\n      await this.save()\n    } catch (error) {\n      this.defaultsCombo = fallbackCombo\n      this.defaultsDiffer = true\n      debug.error(error)\n      return Promise.reject(error)\n    }\n  }\n\n  public save (): Promise<void> {\n    // build graph\n    const newAClGraph = graph()\n    if (!this.isContainer) {\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true)\n    } else if (this.defaultsCombo && this.defaultsDiffer) {\n      // Pair of controls\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true)\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.defaultsCombo.byCombo, this.targetACLDoc, false, true)\n    } else {\n      // Linked controls\n      makeACLGraphbyCombo(newAClGraph, this.targetDoc, this.mainCombo.byCombo, this.targetACLDoc, true, true)\n    }\n\n    const updater = newAClGraph.updater || new UpdateManager(newAClGraph)\n\n    // save ACL resource\n\n    return new Promise((resolve, reject) => {\n      // check acl for acl:Write alert and acl:Control confirm\n      const hasWrite = newAClGraph.any(undefined, ns.acl('mode'), ns.acl('Write'), this.targetACLDoc)\n      const hasControl = newAClGraph.any(undefined, ns.acl('mode'), ns.acl('Control'), this.targetACLDoc)\n      const user = currentUser()\n      const webId = user ? user.uri : 'user'\n      if (!hasWrite) {\n        alert('There is no \"Write access\" this is not allowed')\n        return reject(new Error('ACL file save rejected : no acl:Write'))\n      } else if (!(hasControl || confirm('There is no \"owner access\" -- this is a dangerous situation !!!,' +\n         `\\n${webId},\\nyou may lose access to the resources covered by this ACL !!!` +\n         '\\n\\nDo you confirm ?'))) {\n        return reject(new Error('ACL file save canceled by user'))\n      } else {\n        // save acl\n        updater.put(\n          this.targetACLDoc,\n          newAClGraph.statementsMatching(undefined, undefined, undefined, this.targetACLDoc),\n          'text/turtle',\n          (uri, ok, message) => {\n            if (!ok) {\n              return reject(new Error(`ACL file save failed: ${message}`))\n            }\n            this.store.fetcher.unload(this.targetACLDoc)\n            this.store.add(newAClGraph.statements)\n            this.store.fetcher.requested[this.targetACLDoc.uri] = 'done' // missing: save headers\n            this.mainCombo.store = this.store\n            if (this.defaultsCombo) {\n              this.defaultsCombo.store = this.store\n            }\n            this.defaultsDiffer = !!this.defaultsCombo && !sameACL(this.mainCombo.aclMap, this.defaultsCombo.aclMap)\n            debug.log('ACL modification: success!')\n            resolve()\n          }\n        )\n      }\n    })\n  }\n}\n"],"file":"access-controller.js"}