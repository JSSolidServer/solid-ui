{"version":3,"file":"acl.js","names":["ns","_interopRequireWildcard","require","_solidLogic","utils","debug","_rdflib","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","kb","solidLogicSingleton","store","adoptACLDefault","doc","aclDoc","defaultResource","defaultACLDoc","ACL","acl","isContainer","uri","slice","defaults","each","undefined","concat","proposed","reduce","accumulatedStatements","da","statementsMatching","rdf","st","kb2","graph","forEach","add","move","subject","predicate","object","sym","symbol","y","length","readACL","arguments","getDefaults","auths","getDefaultsFallback","ac","agent","agentClass","agentGroup","origin","originClass","keys","pred","a","mode","sameACL","b","contains","ACLunion","list","ag","_loop","k","loadUnionACL","subjectList","callbackFunction","aclList","doList","shift","getACLorDefault","ok","p2","targetDoc","targetACLDoc","defaultHolder","defa","push","ACLbyCombination","byCombo","combo","sort","combo2","join","makeACLGraph","x","makeACLGraphbyCombo","main","pairs","modeURIs","split","short","map","u","i","ACLToString","comboToString","str","initials","sameTerm","foaf","label","makeACLString","serialize","putACLObject","putACLbyCombo","_kb$updater","updater","put","message","_kb$fetcher","fetcher","unload","requested","fixIndividualCardACL","person","log","groups","vcard","fixIndividualACL","item","subjects","exists","union","setACL","docURI","aclText","any","ACL_LINK","Error","webOperation","value","data","contentType","then","res","error","nowOrWhenFetched","body","getACL","status","tryParent","right","lastIndexOf","left","indexOf","doc2","nonexistent","response","getProspectiveHolder","_x","_getProspectiveHolder","apply","_asyncToGenerator2","_regenerator","mark","_callee","targetDirectory","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","reject","isDirectACL","stop"],"sources":["../../src/acl/acl.ts"],"sourcesContent":["/**\n * Non-UI functions for access control.\n * See https://github.com/solidos/web-access-control-spec\n * for the spec that defines how ACL documents work.\n * @packageDocumentation\n */\n\nimport * as ns from '../ns'\nimport { solidLogicSingleton, ACL_LINK } from 'solid-logic'\nimport * as utils from '../utils'\nimport { AgentMapMap, AgentMapUnion, ComboList } from './types'\nimport * as debug from '../debug'\nimport { graph, Store, NamedNode, serialize, st, Statement, sym, LiveStore } from 'rdflib'\n\nconst kb = solidLogicSingleton.store\n\n/**\n * Take the \"default\" ACL and convert it into the equivalent ACL\n * which the resource would have had. Return it as a new separate store.\n * The \"defaultForNew\" predicate is also accepted, as a deprecated\n * synonym for \"default\".\n */\nexport function adoptACLDefault (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  defaultResource: NamedNode,\n  defaultACLDoc: NamedNode\n): Store {\n  const ACL = ns.acl\n  const isContainer = doc.uri.slice(-1) === '/' // Give default for all directories\n\n  const defaults = kb\n    .each(undefined, ACL('default'), defaultResource, defaultACLDoc)\n    .concat(kb.each(undefined, ACL('defaultForNew'), defaultResource, defaultACLDoc))\n\n  const proposed = defaults.reduce((accumulatedStatements, da) => accumulatedStatements\n    .concat(kb.statementsMatching(da as NamedNode, ns.rdf('type'), ACL('Authorization'), defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agent'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentGroup'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('origin'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('originClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('mode'), undefined, defaultACLDoc))\n    .concat(st(da as NamedNode, ACL('accessTo'), doc, defaultACLDoc))\n    .concat(isContainer ? st(da as NamedNode, ACL('default'), doc, defaultACLDoc) : []), [] as Statement[])\n\n  const kb2 = graph() // Potential - derived is kept apart\n  proposed.forEach(st => kb2.add(move(st.subject), move(st.predicate), move(st.object), sym(aclDoc.uri)))\n  return kb2 as LiveStore\n\n  function move (symbol) {\n    const y = defaultACLDoc.uri.length // The default ACL file\n    return sym(\n      symbol.uri.slice(0, y) === defaultACLDoc.uri\n        ? aclDoc.uri + symbol.uri.slice(y)\n        : symbol.uri\n    )\n  }\n}\n\n/**\n * Read and canonicalize the ACL for x in aclDoc\n *\n * Accumulate the access rights which each agent or class has\n */\nexport function readACL (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  kb2: Store = kb,\n  getDefaults: boolean = false\n): AgentMapMap {\n  const auths: Array<NamedNode> = getDefaults\n    ? getDefaultsFallback(kb2, ns)\n    : kb2.each(undefined, ns.acl('accessTo'), doc)\n\n  const ACL = ns.acl\n  const ac = {\n    agent: {},\n    agentClass: {},\n    agentGroup: {},\n    origin: {},\n    originClass: {}\n  }\n  Object.keys(ac).forEach(pred => {\n    auths.forEach(function (a) {\n      (kb2.each(a, ACL('mode')) as Array<NamedNode>).forEach(function (mode) {\n        (kb2.each(a, ACL(pred)) as Array<NamedNode>).forEach(function (agent) {\n          ac[pred][agent.uri] = ac[pred][agent.uri] || {}\n          ac[pred][agent.uri][mode.uri] = a // could be \"true\" but leave pointer just in case\n        })\n      })\n    })\n  })\n  return ac\n\n  function getDefaultsFallback (kb, ns) {\n    return kb\n      .each(undefined, ns.acl('default'), doc)\n      .concat(kb.each(undefined, ns.acl('defaultForNew'), doc))\n  }\n}\n\n/**\n * Compare two ACLs\n */\nexport function sameACL (a: AgentMapMap | AgentMapUnion, b: AgentMapMap | AgentMapUnion): boolean {\n  const contains = function (a, b) {\n    for (const pred in {\n      agent: true,\n      agentClass: true,\n      agentGroup: true,\n      origin: true,\n      originClass: true\n    }) {\n      if (a[pred]) {\n        for (const agent in a[pred]) {\n          for (const mode in a[pred][agent]) {\n            if (!b[pred][agent] || !b[pred][agent][mode]) {\n              return false\n            }\n          }\n        }\n      }\n    }\n    return true\n  }\n  return contains(a, b) && contains(b, a)\n}\n\n/**\n * Union N ACLs\n */\nexport function ACLunion (list: Array<AgentMapMap | AgentMapUnion>): AgentMapUnion {\n  const b = list[0]\n  let a, ag\n  for (let k = 1; k < list.length; k++) {\n    ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(\n      function (pred) {\n        a = list[k]\n        if (a[pred]) {\n          for (ag in a[pred]) {\n            for (const mode in a[pred][ag]) {\n              if (!b[pred][ag]) b[pred][ag] = []\n              b[pred][ag][mode] = true\n            }\n          }\n        }\n      }\n    )\n  }\n  return b as AgentMapUnion\n}\n\ntype loadUnionACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Merge ACLs lists from things to form union\n */\nexport function loadUnionACL (subjectList: Array<NamedNode>, callbackFunction: loadUnionACLCallback): void {\n  const aclList: Array<AgentMapMap> = []\n  const doList = function (list) {\n    if (list.length) {\n      const doc = list.shift().doc()\n      getACLorDefault(doc, function (\n        ok,\n        p2,\n        targetDoc,\n        targetACLDoc,\n        defaultHolder,\n        defaultACLDoc\n      ) {\n        const defa = !p2\n        if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(ok, targetACLDoc)\n        const acl = defa\n          ? readACL(defaultHolder, defaultACLDoc)\n          : readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n        aclList.push(acl)\n        doList(list.slice(1))\n      })\n    } else {\n      // all gone\n      callbackFunction(true, ACLunion(aclList))\n    }\n  }\n  doList(subjectList)\n}\n\n/**\n * Represents these as an RDF graph by combination of modes\n *\n * Each agent can only be in one place in this model, one combination of modes.\n * Combos are like full control, read append, read only etc.\n */\nexport function ACLbyCombination (ac: AgentMapMap | AgentMapUnion): ComboList {\n  const byCombo = {}\n  ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(function (pred) {\n    for (const agent in ac[pred]) {\n      const combo: string[] = []\n      for (const mode in ac[pred][agent]) {\n        combo.push(mode)\n      }\n      combo.sort()\n      const combo2 = combo.join('\\n')\n      if (!byCombo[combo2]) byCombo[combo2] = []\n      byCombo[combo2].push([pred, agent])\n    }\n  })\n  return byCombo\n}\n\n/**\n * Write ACL graph to store from AC\n */\nexport function makeACLGraph (kb: Store, x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): void {\n  const byCombo = ACLbyCombination(ac)\n  return makeACLGraphbyCombo(kb, x, byCombo, aclDoc)\n}\n\n/**\n * Write ACL graph to store from combo\n */\nexport function makeACLGraphbyCombo (\n  kb: Store,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  main?: boolean,\n  defa?: boolean\n): void {\n  const ACL = ns.acl\n  for (const combo in byCombo) {\n    const pairs = byCombo[combo]\n    if (!pairs.length) continue // do not add to store when no agent\n    const modeURIs = combo.split('\\n')\n    let short = modeURIs\n      .map(function (u) {\n        return u.split('#')[1]\n      })\n      .join('')\n    if (defa && !main) short += 'Default' // don't muddle authorizations\n    const a = kb.sym(aclDoc.uri + '#' + short)\n    kb.add(a, ns.rdf('type'), ACL('Authorization'), aclDoc)\n    if (main) {\n      kb.add(a, ACL('accessTo'), x, aclDoc)\n    }\n    if (defa) {\n      kb.add(a, ACL('default'), x, aclDoc)\n    }\n    for (let i = 0; i < modeURIs.length; i++) {\n      kb.add(a, ACL('mode'), kb.sym(modeURIs[i]), aclDoc)\n    }\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = pairs[i][1]\n      kb.add(a, ACL(pred), kb.sym(ag), aclDoc)\n    }\n  }\n}\n\n/**\n * Debugging short strings for dumping ACL\n * and possibly in the UI\n */\nexport function ACLToString (ac: AgentMapMap): string {\n  return comboToString(ACLbyCombination(ac))\n}\n\n/**\n * Convert a [[ComboList]] to a string\n */\nexport function comboToString (byCombo: ComboList): string {\n  let str = ''\n  for (const combo in byCombo) {\n    const modeURIs = combo.split('\\n')\n    const initials = modeURIs\n      .map(function (u) {\n        return u.split('#')[1][0]\n      })\n      .join('')\n    str += initials + ':'\n    const pairs = byCombo[combo]\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = sym(pairs[i][1])\n      str += pred === 'agent' ? '@' : ''\n      str += ag.sameTerm(ns.foaf('Agent')) ? '*' : utils.label(ag)\n      if (i < pairs.length - 1) str += ','\n    }\n    str += ';'\n  }\n  return '{' + str.slice(0, -1) + '}' // drop extra semicolon\n}\n\n/**\n * Write ACL graph as Turtle\n */\nexport function makeACLString (x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): string {\n  const kb2 = graph()\n  makeACLGraph(kb2, x, ac, aclDoc)\n  return serialize(aclDoc, kb2, aclDoc.uri, 'text/turtle') || ''\n}\n\n/**\n * Write ACL graph to web\n */\nexport function putACLObject (\n  kb: LiveStore,\n  x: NamedNode,\n  ac: AgentMapMap | AgentMapUnion,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const byCombo = ACLbyCombination(ac)\n  return putACLbyCombo(kb, x, byCombo, aclDoc, callbackFunction)\n}\n\n/**\n * Write ACL graph to web from a [[ComboList]]\n */\nexport function putACLbyCombo (\n  kb: LiveStore,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const kb2 = graph()\n  makeACLGraphbyCombo(kb2, x, byCombo, aclDoc, true)\n\n  // const str = makeACLString = function(x, ac, aclDoc)\n  kb.updater?.put(\n    aclDoc,\n    kb2.statementsMatching(undefined, undefined, undefined, aclDoc),\n    'text/turtle',\n    function (uri, ok, message) {\n      if (!ok) {\n        callbackFunction(ok, message)\n      } else {\n        kb.fetcher?.unload(aclDoc)\n        makeACLGraphbyCombo(kb, x, byCombo, aclDoc, true)\n        kb.fetcher!.requested[aclDoc.uri] = 'done' // missing: save headers\n        callbackFunction(ok)\n      }\n    }\n  )\n}\n\ntype fixIndividualCardACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\ntype fixIndividualACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Fix the ACl for an individual card as a function of the groups it is in\n *\n * All group files must be loaded first\n */\nexport function fixIndividualCardACL (person: NamedNode, log: Function, callbackFunction: fixIndividualCardACLCallback): void {\n  const groups = kb.each(undefined, ns.vcard('hasMember'), person) as NamedNode[]\n  // const doc = person.doc()\n  if (groups) {\n    fixIndividualACL(person, groups, log, callbackFunction)\n  } else {\n    log('This card is in no groups')\n    callbackFunction(true) // fine, no requirements to access. default should be ok\n  }\n  // @@ if no groups, then use default for People container or the book top container.?\n}\n\n/**\n * This function is used by [[fixIndividualCardACL]]\n */\nexport function fixIndividualACL (item: NamedNode, subjects: Array<NamedNode>, log: Function, callbackFunction: fixIndividualACLCallback): void {\n  log = log || debug.log\n  const doc = item.doc()\n  getACLorDefault(doc, function (\n    ok,\n    exists,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder,\n    defaultACLDoc\n  ) {\n    if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(false, targetACLDoc) // ie message\n    const ac = exists\n      ? readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n      : readACL(defaultHolder, defaultACLDoc)\n    loadUnionACL(subjects, function (ok, union) {\n      if (!ok) return callbackFunction(false, union)\n      if (sameACL(union as AgentMapMap | AgentMapUnion, ac)) {\n        log('Nice - same ACL. no change ' + utils.label(item) + ' ' + doc)\n      } else {\n        log('Group ACLs differ for ' + utils.label(item) + ' ' + doc)\n\n        // log(\"Group ACLs: \" + makeACLString(targetDoc, union, targetACLDoc))\n        // log((exists ? \"Previous set\" : \"Default\") + \" ACLs: \" +\n        // makeACLString(targetDoc, ac, targetACLDoc))\n\n        putACLObject(\n          kb as unknown as LiveStore,\n          targetDoc as NamedNode,\n          union as AgentMapMap | AgentMapUnion,\n          targetACLDoc as NamedNode,\n          callbackFunction\n        )\n      }\n    })\n  })\n}\n\n/**\n * Set an ACL\n */\nexport function setACL (\n  docURI: NamedNode,\n  aclText: string,\n  callbackFunction: (ok: boolean, message: string) => void\n): void {\n  const aclDoc = kb.any(\n    docURI,\n    ACL_LINK\n  ) // @@ check that this get set by web.js\n  if (!kb.fetcher) {\n    throw new Error('Store has no fetcher')\n  }\n  if (aclDoc) {\n    // Great we already know where it is\n    kb.fetcher\n      .webOperation('PUT', aclDoc.value, {\n        data: aclText,\n        contentType: 'text/turtle'\n      })\n      .then((res) => {\n        callbackFunction(res.ok, res.error || '')\n      }) // @@@ check params\n  } else {\n    kb.fetcher.nowOrWhenFetched(docURI, undefined, function (ok, body) {\n      if (!ok) return callbackFunction(ok, 'Gettting headers for ACL: ' + body)\n      const aclDoc = kb.any(\n        docURI,\n        ACL_LINK\n      ) // @@ check that this get set by web.js\n      if (!aclDoc) {\n        // complainIfBad(false, \"No Link rel=ACL header for \" + docURI)\n        callbackFunction(false, 'No Link rel=ACL header for ' + docURI)\n      } else {\n        if (!kb.fetcher) {\n          throw new Error('Store has no fetcher')\n        }\n        kb.fetcher\n          .webOperation('PUT', aclDoc.value, {\n            data: aclText,\n            contentType: 'text/turtle'\n          })\n          .then((res) => {\n            callbackFunction(res.ok, res.error || '')\n          })\n      }\n    })\n  }\n}\n\n/**\n * Get ACL file or default if necessary\n *\n * @param callbackFunction  Will be called in the following ways, in the following cases:\n * * `callbackFunction(true, true, doc, aclDoc)` if the ACL did exist\n * * `callbackFunction(true, false, doc, aclDoc, defaultHolder, defaultACLDoc)` if the ACL file did not exist but a default did\n * * `callbackFunction(false, false, status, message)` when there was an error getting the original\n * * `callbackFunction(false, true, status, message)` when there was an error getting the default\n */\nexport function getACLorDefault (\n  doc: NamedNode,\n  callbackFunction: (\n    a: boolean,\n    b: boolean,\n    statusOrMessage: number | NamedNode,\n    message: string | NamedNode,\n    c?: NamedNode,\n    d?: NamedNode\n  ) => void\n): void {\n  getACL(doc, function (ok, status, aclDoc, message): string | void {\n    const ACL = ns.acl\n    if (!ok) return callbackFunction(false, false, status as number, message as string)\n\n    // Recursively search for the ACL file which gives default access\n    const tryParent = function (uri) {\n      if (uri.slice(-1) === '/') {\n        uri = uri.slice(0, -1)\n      }\n      const right = uri.lastIndexOf('/')\n      const left = uri.indexOf('/', uri.indexOf('//') + 2)\n      if (left > right) {\n        return callbackFunction(false, true, 404, 'Found no ACL resource')\n      }\n      uri = uri.slice(0, right + 1)\n      const doc2 = sym(uri)\n      getACL(doc2, function (ok, status, defaultACLDoc: any): NamedNode | void {\n        if (!ok) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `( No ACL pointer ${uri} ${status})${defaultACLDoc}`\n          ) as void\n        } else if (status === 403) {\n          return callbackFunction(\n            false,\n            true,\n            status,\n            `( default ACL file FORBIDDEN. Stop.${uri})`\n          )\n        } else if (status === 404) {\n          return tryParent(uri)\n        } else if (status !== 200) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `Error status '${status}' searching for default for ${doc2}`\n          )\n        }\n        // 200\n        // statusBlock.textContent += (\" ACCESS set at \" + uri + \". End search.\")\n        const defaults = kb\n          .each(undefined, ACL('default'), kb.sym(uri), defaultACLDoc)\n          .concat(\n            kb.each(undefined, ACL('defaultForNew'), kb.sym(uri), defaultACLDoc)\n          )\n        if (!defaults.length) {\n          return tryParent(uri) // Keep searching\n        }\n        const defaultHolder = kb.sym(uri)\n        return callbackFunction(\n          true,\n          false,\n          doc,\n          aclDoc as NamedNode,\n          defaultHolder,\n          defaultACLDoc as NamedNode\n        )\n      })\n    } // tryParent\n\n    if (!ok) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error accessing Access Control information for ${doc}) ${message}`\n      )\n    } else if (status === 404) {\n      tryParent(doc.uri) //  @@ construct default one - the server should do that\n    } else if (status === 403) {\n      return callbackFunction(\n        false,\n        false,\n        status,\n        `(Sharing not available to you)${message}`\n      )\n    } else if (status !== 200) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error ${status} accessing Access Control information for ${doc}: ${message}`\n      )\n    } else {\n      // 200\n      return callbackFunction(true, true, doc, aclDoc as NamedNode)\n    }\n  }) // Call to getACL\n}\n\n/**\n * Calls back `(ok, status, acldoc, message)` as follows\n *\n * * `(false, 900, errormessage)` if no link header\n * * `(true, 403, documentSymbol, fileaccesserror)` if not authorized\n * * `(true, 404, documentSymbol, fileaccesserror)` if does not exist\n * * `(true, 200, documentSymbol)` if file exists and read OK\n */\nexport function getACL (\n  doc: NamedNode,\n  callbackFunction: (\n    ok: boolean,\n    messageOrStatus: number | string,\n    messageOrDoc?: NamedNode | string,\n    message?: string\n  ) => void\n): void {\n  if (!kb.fetcher) {\n    throw new Error('kb has no fetcher')\n  }\n  kb.fetcher.nowOrWhenFetched(doc, undefined, function (ok, body) {\n    if (!ok) {\n      return callbackFunction(ok, `Can't get headers to find ACL for ${doc}: ${body}`)\n    }\n    const aclDoc = kb.any(\n      doc,\n      ACL_LINK\n    ) // @@ check that this get set by web.js\n    if (!aclDoc) {\n      callbackFunction(false, 900, `No Link rel=ACL header for ${doc}`)\n    } else {\n      if (!kb.fetcher) {\n        throw new Error('kb has no fetcher')\n      }\n      if (kb.fetcher.nonexistent[aclDoc.value]) {\n        return callbackFunction(\n          true,\n          404,\n          aclDoc as NamedNode,\n          `ACL file ${aclDoc} does not exist.`\n        )\n      }\n      kb.fetcher.nowOrWhenFetched(aclDoc as NamedNode, undefined, function (\n        ok,\n        message,\n        response\n      ) {\n        if (!ok) {\n          callbackFunction(\n            true,\n            response.status,\n            aclDoc as NamedNode,\n            `Can't read Access Control File ${aclDoc}: ${message}`\n          )\n        } else {\n          callbackFunction(true, 200, aclDoc as NamedNode)\n        }\n      })\n    }\n  })\n}\n\n/**\n * Calls [[getACLorDefault]] and then (?)\n */\nexport async function getProspectiveHolder (targetDirectory: string): Promise<NamedNode | undefined> {\n  return new Promise((resolve, reject) => getACLorDefault(sym(targetDirectory), (\n    ok,\n    isDirectACL,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder\n  ) => {\n    if (ok) {\n      return resolve((isDirectACL ? targetDoc : defaultHolder) as NamedNode)\n    }\n    return reject(new Error(`Error loading ${targetDirectory}`))\n  }))\n}\n"],"mappings":"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"}