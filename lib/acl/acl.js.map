{"version":3,"file":"acl.js","names":["kb","solidLogicSingleton","store","adoptACLDefault","doc","aclDoc","defaultResource","defaultACLDoc","ACL","ns","acl","isContainer","uri","slice","defaults","each","undefined","concat","proposed","reduce","accumulatedStatements","da","statementsMatching","rdf","st","kb2","graph","forEach","add","move","subject","predicate","object","sym","symbol","y","length","readACL","getDefaults","auths","getDefaultsFallback","ac","agent","agentClass","agentGroup","origin","originClass","Object","keys","pred","a","mode","sameACL","b","contains","ACLunion","list","ag","k","loadUnionACL","subjectList","callbackFunction","aclList","doList","shift","getACLorDefault","ok","p2","targetDoc","targetACLDoc","defaultHolder","defa","push","ACLbyCombination","byCombo","combo","sort","combo2","join","makeACLGraph","x","makeACLGraphbyCombo","main","pairs","modeURIs","split","short","map","u","i","ACLToString","comboToString","str","initials","sameTerm","foaf","utils","label","makeACLString","serialize","putACLObject","putACLbyCombo","updater","put","message","fetcher","unload","requested","fixIndividualCardACL","person","log","groups","vcard","fixIndividualACL","item","subjects","debug","exists","union","setACL","docURI","aclText","any","ACL_LINK","Error","webOperation","value","data","contentType","then","res","error","nowOrWhenFetched","body","getACL","status","tryParent","right","lastIndexOf","left","indexOf","doc2","nonexistent","response","getProspectiveHolder","targetDirectory","Promise","resolve","reject","isDirectACL"],"sources":["../../src/acl/acl.ts"],"sourcesContent":["/**\n * Non-UI functions for access control.\n * See https://github.com/solidos/web-access-control-spec\n * for the spec that defines how ACL documents work.\n * @packageDocumentation\n */\n\nimport * as ns from '../ns'\nimport { solidLogicSingleton, ACL_LINK } from 'solid-logic'\nimport * as utils from '../utils'\nimport { AgentMapMap, AgentMapUnion, ComboList } from './types'\nimport * as debug from '../debug'\nimport { graph, Store, NamedNode, serialize, st, Statement, sym, LiveStore } from 'rdflib'\n\nconst kb = solidLogicSingleton.store\n\n/**\n * Take the \"default\" ACL and convert it into the equivlent ACL\n * which the resource would have had. Return it as a new separate store.\n * The \"defaultForNew\" predicate is also accepted, as a deprecated\n * synonym for \"default\".\n */\nexport function adoptACLDefault (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  defaultResource: NamedNode,\n  defaultACLDoc: NamedNode\n): Store {\n  const ACL = ns.acl\n  const isContainer = doc.uri.slice(-1) === '/' // Give default for all directories\n\n  const defaults = kb\n    .each(undefined, ACL('default'), defaultResource, defaultACLDoc)\n    .concat(kb.each(undefined, ACL('defaultForNew'), defaultResource, defaultACLDoc))\n\n  const proposed = defaults.reduce((accumulatedStatements, da) => accumulatedStatements\n    .concat(kb.statementsMatching(da as NamedNode, ns.rdf('type'), ACL('Authorization'), defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agent'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentGroup'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('origin'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('originClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('mode'), undefined, defaultACLDoc))\n    .concat(st(da as NamedNode, ACL('accessTo'), doc, defaultACLDoc))\n    .concat(isContainer ? st(da as NamedNode, ACL('default'), doc, defaultACLDoc) : []), [] as Statement[])\n\n  const kb2 = graph() // Potential - derived is kept apart\n  proposed.forEach(st => kb2.add(move(st.subject), move(st.predicate), move(st.object), sym(aclDoc.uri)))\n  return kb2 as LiveStore\n\n  function move (symbol) {\n    const y = defaultACLDoc.uri.length // The default ACL file\n    return sym(\n      symbol.uri.slice(0, y) === defaultACLDoc.uri\n        ? aclDoc.uri + symbol.uri.slice(y)\n        : symbol.uri\n    )\n  }\n}\n\n/**\n * Read and canonicalize the ACL for x in aclDoc\n *\n * Accumulate the access rights which each agent or class has\n */\nexport function readACL (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  kb2: Store = kb,\n  getDefaults: boolean = false\n): AgentMapMap {\n  const auths: Array<NamedNode> = getDefaults\n    ? getDefaultsFallback(kb2, ns)\n    : kb2.each(undefined, ns.acl('accessTo'), doc)\n\n  const ACL = ns.acl\n  const ac = {\n    agent: {},\n    agentClass: {},\n    agentGroup: {},\n    origin: {},\n    originClass: {}\n  }\n  Object.keys(ac).forEach(pred => {\n    auths.forEach(function (a) {\n      (kb2.each(a, ACL('mode')) as Array<NamedNode>).forEach(function (mode) {\n        (kb2.each(a, ACL(pred)) as Array<NamedNode>).forEach(function (agent) {\n          ac[pred][agent.uri] = ac[pred][agent.uri] || {}\n          ac[pred][agent.uri][mode.uri] = a // could be \"true\" but leave pointer just in case\n        })\n      })\n    })\n  })\n  return ac\n\n  function getDefaultsFallback (kb, ns) {\n    return kb\n      .each(undefined, ns.acl('default'), doc)\n      .concat(kb.each(undefined, ns.acl('defaultForNew'), doc))\n  }\n}\n\n/**\n * Compare two ACLs\n */\nexport function sameACL (a: AgentMapMap | AgentMapUnion, b: AgentMapMap | AgentMapUnion): boolean {\n  const contains = function (a, b) {\n    for (const pred in {\n      agent: true,\n      agentClass: true,\n      agentGroup: true,\n      origin: true,\n      originClass: true\n    }) {\n      if (a[pred]) {\n        for (const agent in a[pred]) {\n          for (const mode in a[pred][agent]) {\n            if (!b[pred][agent] || !b[pred][agent][mode]) {\n              return false\n            }\n          }\n        }\n      }\n    }\n    return true\n  }\n  return contains(a, b) && contains(b, a)\n}\n\n/**\n * Union N ACLs\n */\nexport function ACLunion (list: Array<AgentMapMap | AgentMapUnion>): AgentMapUnion {\n  const b = list[0]\n  let a, ag\n  for (let k = 1; k < list.length; k++) {\n    ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(\n      function (pred) {\n        a = list[k]\n        if (a[pred]) {\n          for (ag in a[pred]) {\n            for (const mode in a[pred][ag]) {\n              if (!b[pred][ag]) b[pred][ag] = []\n              b[pred][ag][mode] = true\n            }\n          }\n        }\n      }\n    )\n  }\n  return b as AgentMapUnion\n}\n\ntype loadUnionACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Merge ACLs lists from things to form union\n */\nexport function loadUnionACL (subjectList: Array<NamedNode>, callbackFunction: loadUnionACLCallback): void {\n  const aclList: Array<AgentMapMap> = []\n  const doList = function (list) {\n    if (list.length) {\n      const doc = list.shift().doc()\n      getACLorDefault(doc, function (\n        ok,\n        p2,\n        targetDoc,\n        targetACLDoc,\n        defaultHolder,\n        defaultACLDoc\n      ) {\n        const defa = !p2\n        if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(ok, targetACLDoc)\n        const acl = defa\n          ? readACL(defaultHolder, defaultACLDoc)\n          : readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n        aclList.push(acl)\n        doList(list.slice(1))\n      })\n    } else {\n      // all gone\n      callbackFunction(true, ACLunion(aclList))\n    }\n  }\n  doList(subjectList)\n}\n\n/**\n * Represents these as an RDF graph by combination of modes\n *\n * Each agent can only be in one place in this model, one combination of modes.\n * Combos are like full control, read append, read only etc.\n */\nexport function ACLbyCombination (ac: AgentMapMap | AgentMapUnion): ComboList {\n  const byCombo = {}\n  ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(function (pred) {\n    for (const agent in ac[pred]) {\n      const combo: string[] = []\n      for (const mode in ac[pred][agent]) {\n        combo.push(mode)\n      }\n      combo.sort()\n      const combo2 = combo.join('\\n')\n      if (!byCombo[combo2]) byCombo[combo2] = []\n      byCombo[combo2].push([pred, agent])\n    }\n  })\n  return byCombo\n}\n\n/**\n * Write ACL graph to store from AC\n */\nexport function makeACLGraph (kb: Store, x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): void {\n  const byCombo = ACLbyCombination(ac)\n  return makeACLGraphbyCombo(kb, x, byCombo, aclDoc)\n}\n\n/**\n * Write ACL graph to store from combo\n */\nexport function makeACLGraphbyCombo (\n  kb: Store,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  main?: boolean,\n  defa?: boolean\n): void {\n  const ACL = ns.acl\n  for (const combo in byCombo) {\n    const pairs = byCombo[combo]\n    if (!pairs.length) continue // do not add to store when no agent\n    const modeURIs = combo.split('\\n')\n    let short = modeURIs\n      .map(function (u) {\n        return u.split('#')[1]\n      })\n      .join('')\n    if (defa && !main) short += 'Default' // don't muddle authorizations\n    const a = kb.sym(aclDoc.uri + '#' + short)\n    kb.add(a, ns.rdf('type'), ACL('Authorization'), aclDoc)\n    if (main) {\n      kb.add(a, ACL('accessTo'), x, aclDoc)\n    }\n    if (defa) {\n      kb.add(a, ACL('default'), x, aclDoc)\n    }\n    for (let i = 0; i < modeURIs.length; i++) {\n      kb.add(a, ACL('mode'), kb.sym(modeURIs[i]), aclDoc)\n    }\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = pairs[i][1]\n      kb.add(a, ACL(pred), kb.sym(ag), aclDoc)\n    }\n  }\n}\n\n/**\n * Debugging short strings for dumping ACL\n * and possibly in the UI\n */\nexport function ACLToString (ac: AgentMapMap): string {\n  return comboToString(ACLbyCombination(ac))\n}\n\n/**\n * Convert a [[ComboList]] to a string\n */\nexport function comboToString (byCombo: ComboList): string {\n  let str = ''\n  for (const combo in byCombo) {\n    const modeURIs = combo.split('\\n')\n    const initials = modeURIs\n      .map(function (u) {\n        return u.split('#')[1][0]\n      })\n      .join('')\n    str += initials + ':'\n    const pairs = byCombo[combo]\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = sym(pairs[i][1])\n      str += pred === 'agent' ? '@' : ''\n      str += ag.sameTerm(ns.foaf('Agent')) ? '*' : utils.label(ag)\n      if (i < pairs.length - 1) str += ','\n    }\n    str += ';'\n  }\n  return '{' + str.slice(0, -1) + '}' // drop extra semicolon\n}\n\n/**\n * Write ACL graph as Turtle\n */\nexport function makeACLString (x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): string {\n  const kb2 = graph()\n  makeACLGraph(kb2, x, ac, aclDoc)\n  return serialize(aclDoc, kb2, aclDoc.uri, 'text/turtle') || ''\n}\n\n/**\n * Write ACL graph to web\n */\nexport function putACLObject (\n  kb: LiveStore,\n  x: NamedNode,\n  ac: AgentMapMap | AgentMapUnion,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const byCombo = ACLbyCombination(ac)\n  return putACLbyCombo(kb, x, byCombo, aclDoc, callbackFunction)\n}\n\n/**\n * Write ACL graph to web from a [[ComboList]]\n */\nexport function putACLbyCombo (\n  kb: LiveStore,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const kb2 = graph()\n  makeACLGraphbyCombo(kb2, x, byCombo, aclDoc, true)\n\n  // const str = makeACLString = function(x, ac, aclDoc)\n  kb.updater?.put(\n    aclDoc,\n    kb2.statementsMatching(undefined, undefined, undefined, aclDoc),\n    'text/turtle',\n    function (uri, ok, message) {\n      if (!ok) {\n        callbackFunction(ok, message)\n      } else {\n        kb.fetcher?.unload(aclDoc)\n        makeACLGraphbyCombo(kb, x, byCombo, aclDoc, true)\n        kb.fetcher!.requested[aclDoc.uri] = 'done' // missing: save headers\n        callbackFunction(ok)\n      }\n    }\n  )\n}\n\ntype fixIndividualCardACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\ntype fixIndividualACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Fix the ACl for an individual card as a function of the groups it is in\n *\n * All group files must be loaded first\n */\nexport function fixIndividualCardACL (person: NamedNode, log: Function, callbackFunction: fixIndividualCardACLCallback): void {\n  const groups = kb.each(undefined, ns.vcard('hasMember'), person) as NamedNode[]\n  // const doc = person.doc()\n  if (groups) {\n    fixIndividualACL(person, groups, log, callbackFunction)\n  } else {\n    log('This card is in no groups')\n    callbackFunction(true) // fine, no requirements to access. default should be ok\n  }\n  // @@ if no groups, then use default for People container or the book top container.?\n}\n\n/**\n * This function is used by [[fixIndividualCardACL]]\n */\nexport function fixIndividualACL (item: NamedNode, subjects: Array<NamedNode>, log: Function, callbackFunction: fixIndividualACLCallback): void {\n  log = log || debug.log\n  const doc = item.doc()\n  getACLorDefault(doc, function (\n    ok,\n    exists,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder,\n    defaultACLDoc\n  ) {\n    if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(false, targetACLDoc) // ie message\n    const ac = exists\n      ? readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n      : readACL(defaultHolder, defaultACLDoc)\n    loadUnionACL(subjects, function (ok, union) {\n      if (!ok) return callbackFunction(false, union)\n      if (sameACL(union as AgentMapMap | AgentMapUnion, ac)) {\n        log('Nice - same ACL. no change ' + utils.label(item) + ' ' + doc)\n      } else {\n        log('Group ACLs differ for ' + utils.label(item) + ' ' + doc)\n\n        // log(\"Group ACLs: \" + makeACLString(targetDoc, union, targetACLDoc))\n        // log((exists ? \"Previous set\" : \"Default\") + \" ACLs: \" +\n        // makeACLString(targetDoc, ac, targetACLDoc))\n\n        putACLObject(\n          kb as unknown as LiveStore,\n          targetDoc as NamedNode,\n          union as AgentMapMap | AgentMapUnion,\n          targetACLDoc as NamedNode,\n          callbackFunction\n        )\n      }\n    })\n  })\n}\n\n/**\n * Set an ACL\n */\nexport function setACL (\n  docURI: NamedNode,\n  aclText: string,\n  callbackFunction: (ok: boolean, message: string) => void\n): void {\n  const aclDoc = kb.any(\n    docURI,\n    ACL_LINK\n  ) // @@ check that this get set by web.js\n  if (!kb.fetcher) {\n    throw new Error('Store has no fetcher')\n  }\n  if (aclDoc) {\n    // Great we already know where it is\n    kb.fetcher\n      .webOperation('PUT', aclDoc.value, {\n        data: aclText,\n        contentType: 'text/turtle'\n      })\n      .then((res) => {\n        callbackFunction(res.ok, res.error || '')\n      }) // @@@ check params\n  } else {\n    kb.fetcher.nowOrWhenFetched(docURI, undefined, function (ok, body) {\n      if (!ok) return callbackFunction(ok, 'Gettting headers for ACL: ' + body)\n      const aclDoc = kb.any(\n        docURI,\n        ACL_LINK\n      ) // @@ check that this get set by web.js\n      if (!aclDoc) {\n        // complainIfBad(false, \"No Link rel=ACL header for \" + docURI)\n        callbackFunction(false, 'No Link rel=ACL header for ' + docURI)\n      } else {\n        if (!kb.fetcher) {\n          throw new Error('Store has no fetcher')\n        }\n        kb.fetcher\n          .webOperation('PUT', aclDoc.value, {\n            data: aclText,\n            contentType: 'text/turtle'\n          })\n          .then((res) => {\n            callbackFunction(res.ok, res.error || '')\n          })\n      }\n    })\n  }\n}\n\n/**\n * Get ACL file or default if necessary\n *\n * @param callbackFunction  Will be called in the following ways, in the following cases:\n * * `callbackFunction(true, true, doc, aclDoc)` if the ACL did exist\n * * `callbackFunction(true, false, doc, aclDoc, defaultHolder, defaultACLDoc)` if the ACL file did not exist but a default did\n * * `callbackFunction(false, false, status, message)` when there was an error getting the original\n * * `callbackFunction(false, true, status, message)` when there was an error getting the default\n */\nexport function getACLorDefault (\n  doc: NamedNode,\n  callbackFunction: (\n    a: boolean,\n    b: boolean,\n    statusOrMessage: number | NamedNode,\n    message: string | NamedNode,\n    c?: NamedNode,\n    d?: NamedNode\n  ) => void\n): void {\n  getACL(doc, function (ok, status, aclDoc, message): string | void {\n    const ACL = ns.acl\n    if (!ok) return callbackFunction(false, false, status as number, message as string)\n\n    // Recursively search for the ACL file which gives default access\n    const tryParent = function (uri) {\n      if (uri.slice(-1) === '/') {\n        uri = uri.slice(0, -1)\n      }\n      const right = uri.lastIndexOf('/')\n      const left = uri.indexOf('/', uri.indexOf('//') + 2)\n      if (left > right) {\n        return callbackFunction(false, true, 404, 'Found no ACL resource')\n      }\n      uri = uri.slice(0, right + 1)\n      const doc2 = sym(uri)\n      getACL(doc2, function (ok, status, defaultACLDoc: any): NamedNode | void {\n        if (!ok) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `( No ACL pointer ${uri} ${status})${defaultACLDoc}`\n          ) as void\n        } else if (status === 403) {\n          return callbackFunction(\n            false,\n            true,\n            status,\n            `( default ACL file FORBIDDEN. Stop.${uri})`\n          )\n        } else if (status === 404) {\n          return tryParent(uri)\n        } else if (status !== 200) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `Error status '${status}' searching for default for ${doc2}`\n          )\n        }\n        // 200\n        // statusBlock.textContent += (\" ACCESS set at \" + uri + \". End search.\")\n        const defaults = kb\n          .each(undefined, ACL('default'), kb.sym(uri), defaultACLDoc)\n          .concat(\n            kb.each(undefined, ACL('defaultForNew'), kb.sym(uri), defaultACLDoc)\n          )\n        if (!defaults.length) {\n          return tryParent(uri) // Keep searching\n        }\n        const defaultHolder = kb.sym(uri)\n        return callbackFunction(\n          true,\n          false,\n          doc,\n          aclDoc as NamedNode,\n          defaultHolder,\n          defaultACLDoc as NamedNode\n        )\n      })\n    } // tryParent\n\n    if (!ok) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error accessing Access Control information for ${doc}) ${message}`\n      )\n    } else if (status === 404) {\n      tryParent(doc.uri) //  @@ construct default one - the server should do that\n    } else if (status === 403) {\n      return callbackFunction(\n        false,\n        false,\n        status,\n        `(Sharing not available to you)${message}`\n      )\n    } else if (status !== 200) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error ${status} accessing Access Control information for ${doc}: ${message}`\n      )\n    } else {\n      // 200\n      return callbackFunction(true, true, doc, aclDoc as NamedNode)\n    }\n  }) // Call to getACL\n}\n\n/**\n * Calls back `(ok, status, acldoc, message)` as follows\n *\n * * `(false, 900, errormessage)` if no link header\n * * `(true, 403, documentSymbol, fileaccesserror)` if not authorized\n * * `(true, 404, documentSymbol, fileaccesserror)` if does not exist\n * * `(true, 200, documentSymbol)` if file exists and read OK\n */\nexport function getACL (\n  doc: NamedNode,\n  callbackFunction: (\n    ok: boolean,\n    messageOrStatus: number | string,\n    messageOrDoc?: NamedNode | string,\n    message?: string\n  ) => void\n): void {\n  if (!kb.fetcher) {\n    throw new Error('kb has no fetcher')\n  }\n  kb.fetcher.nowOrWhenFetched(doc, undefined, function (ok, body) {\n    if (!ok) {\n      return callbackFunction(ok, `Can't get headers to find ACL for ${doc}: ${body}`)\n    }\n    const aclDoc = kb.any(\n      doc,\n      ACL_LINK\n    ) // @@ check that this get set by web.js\n    if (!aclDoc) {\n      callbackFunction(false, 900, `No Link rel=ACL header for ${doc}`)\n    } else {\n      if (!kb.fetcher) {\n        throw new Error('kb has no fetcher')\n      }\n      if (kb.fetcher.nonexistent[aclDoc.value]) {\n        return callbackFunction(\n          true,\n          404,\n          aclDoc as NamedNode,\n          `ACL file ${aclDoc} does not exist.`\n        )\n      }\n      kb.fetcher.nowOrWhenFetched(aclDoc as NamedNode, undefined, function (\n        ok,\n        message,\n        response\n      ) {\n        if (!ok) {\n          callbackFunction(\n            true,\n            response.status,\n            aclDoc as NamedNode,\n            `Can't read Access Control File ${aclDoc}: ${message}`\n          )\n        } else {\n          callbackFunction(true, 200, aclDoc as NamedNode)\n        }\n      })\n    }\n  })\n}\n\n/**\n * Calls [[getACLorDefault]] and then (?)\n */\nexport async function getProspectiveHolder (targetDirectory: string): Promise<NamedNode | undefined> {\n  return new Promise((resolve, reject) => getACLorDefault(sym(targetDirectory), (\n    ok,\n    isDirectACL,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder\n  ) => {\n    if (ok) {\n      return resolve((isDirectACL ? targetDoc : defaultHolder) as NamedNode)\n    }\n    return reject(new Error(`Error loading ${targetDirectory}`))\n  }))\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAZA;AACA;AACA;AACA;AACA;AACA;AASA,IAAMA,EAAE,GAAGC,+BAAA,CAAoBC,KAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,eAAT,CACLC,GADK,EAELC,MAFK,EAGLC,eAHK,EAILC,aAJK,EAKE;EACP,IAAMC,GAAG,GAAGC,EAAE,CAACC,GAAf;EACA,IAAMC,WAAW,GAAGP,GAAG,CAACQ,GAAJ,CAAQC,KAAR,CAAc,CAAC,CAAf,MAAsB,GAA1C,CAFO,CAEuC;;EAE9C,IAAMC,QAAQ,GAAGd,EAAE,CAChBe,IADc,CACTC,SADS,EACER,GAAG,CAAC,SAAD,CADL,EACkBF,eADlB,EACmCC,aADnC,EAEdU,MAFc,CAEPjB,EAAE,CAACe,IAAH,CAAQC,SAAR,EAAmBR,GAAG,CAAC,eAAD,CAAtB,EAAyCF,eAAzC,EAA0DC,aAA1D,CAFO,CAAjB;EAIA,IAAMW,QAAQ,GAAGJ,QAAQ,CAACK,MAAT,CAAgB,UAACC,qBAAD,EAAwBC,EAAxB;IAAA,OAA+BD,qBAAqB,CAClFH,MAD6D,CACtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCZ,EAAE,CAACc,GAAH,CAAO,MAAP,CAAvC,EAAuDf,GAAG,CAAC,eAAD,CAA1D,EAA6ED,aAA7E,CADsD,EAE7DU,MAF6D,CAEtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,OAAD,CAA1C,EAAqDQ,SAArD,EAAgET,aAAhE,CAFsD,EAG7DU,MAH6D,CAGtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,YAAD,CAA1C,EAA0DQ,SAA1D,EAAqET,aAArE,CAHsD,EAI7DU,MAJ6D,CAItDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,YAAD,CAA1C,EAA0DQ,SAA1D,EAAqET,aAArE,CAJsD,EAK7DU,MAL6D,CAKtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,QAAD,CAA1C,EAAsDQ,SAAtD,EAAiET,aAAjE,CALsD,EAM7DU,MAN6D,CAMtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,aAAD,CAA1C,EAA2DQ,SAA3D,EAAsET,aAAtE,CANsD,EAO7DU,MAP6D,CAOtDjB,EAAE,CAACsB,kBAAH,CAAsBD,EAAtB,EAAuCb,GAAG,CAAC,MAAD,CAA1C,EAAoDQ,SAApD,EAA+DT,aAA/D,CAPsD,EAQ7DU,MAR6D,CAQtD,IAAAO,UAAA,EAAGH,EAAH,EAAoBb,GAAG,CAAC,UAAD,CAAvB,EAAqCJ,GAArC,EAA0CG,aAA1C,CARsD,EAS7DU,MAT6D,CAStDN,WAAW,GAAG,IAAAa,UAAA,EAAGH,EAAH,EAAoBb,GAAG,CAAC,SAAD,CAAvB,EAAoCJ,GAApC,EAAyCG,aAAzC,CAAH,GAA6D,EATlB,CAA/B;EAAA,CAAhB,EASsE,EATtE,CAAjB;EAWA,IAAMkB,GAAG,GAAG,IAAAC,aAAA,GAAZ,CAnBO,CAmBa;;EACpBR,QAAQ,CAACS,OAAT,CAAiB,UAAAH,EAAE;IAAA,OAAIC,GAAG,CAACG,GAAJ,CAAQC,IAAI,CAACL,EAAE,CAACM,OAAJ,CAAZ,EAA0BD,IAAI,CAACL,EAAE,CAACO,SAAJ,CAA9B,EAA8CF,IAAI,CAACL,EAAE,CAACQ,MAAJ,CAAlD,EAA+D,IAAAC,WAAA,EAAI5B,MAAM,CAACO,GAAX,CAA/D,CAAJ;EAAA,CAAnB;EACA,OAAOa,GAAP;;EAEA,SAASI,IAAT,CAAeK,MAAf,EAAuB;IACrB,IAAMC,CAAC,GAAG5B,aAAa,CAACK,GAAd,CAAkBwB,MAA5B,CADqB,CACc;;IACnC,OAAO,IAAAH,WAAA,EACLC,MAAM,CAACtB,GAAP,CAAWC,KAAX,CAAiB,CAAjB,EAAoBsB,CAApB,MAA2B5B,aAAa,CAACK,GAAzC,GACIP,MAAM,CAACO,GAAP,GAAasB,MAAM,CAACtB,GAAP,CAAWC,KAAX,CAAiBsB,CAAjB,CADjB,GAEID,MAAM,CAACtB,GAHN,CAAP;EAKD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASyB,OAAT,CACLjC,GADK,EAELC,MAFK,EAKQ;EAAA,IAFboB,GAEa,uEAFAzB,EAEA;EAAA,IADbsC,WACa,uEADU,KACV;EACb,IAAMC,KAAuB,GAAGD,WAAW,GACvCE,mBAAmB,CAACf,GAAD,EAAMhB,EAAN,CADoB,GAEvCgB,GAAG,CAACV,IAAJ,CAASC,SAAT,EAAoBP,EAAE,CAACC,GAAH,CAAO,UAAP,CAApB,EAAwCN,GAAxC,CAFJ;EAIA,IAAMI,GAAG,GAAGC,EAAE,CAACC,GAAf;EACA,IAAM+B,EAAE,GAAG;IACTC,KAAK,EAAE,EADE;IAETC,UAAU,EAAE,EAFH;IAGTC,UAAU,EAAE,EAHH;IAITC,MAAM,EAAE,EAJC;IAKTC,WAAW,EAAE;EALJ,CAAX;EAOAC,MAAM,CAACC,IAAP,CAAYP,EAAZ,EAAgBd,OAAhB,CAAwB,UAAAsB,IAAI,EAAI;IAC9BV,KAAK,CAACZ,OAAN,CAAc,UAAUuB,CAAV,EAAa;MACxBzB,GAAG,CAACV,IAAJ,CAASmC,CAAT,EAAY1C,GAAG,CAAC,MAAD,CAAf,CAAD,CAA+CmB,OAA/C,CAAuD,UAAUwB,IAAV,EAAgB;QACpE1B,GAAG,CAACV,IAAJ,CAASmC,CAAT,EAAY1C,GAAG,CAACyC,IAAD,CAAf,CAAD,CAA6CtB,OAA7C,CAAqD,UAAUe,KAAV,EAAiB;UACpED,EAAE,CAACQ,IAAD,CAAF,CAASP,KAAK,CAAC9B,GAAf,IAAsB6B,EAAE,CAACQ,IAAD,CAAF,CAASP,KAAK,CAAC9B,GAAf,KAAuB,EAA7C;UACA6B,EAAE,CAACQ,IAAD,CAAF,CAASP,KAAK,CAAC9B,GAAf,EAAoBuC,IAAI,CAACvC,GAAzB,IAAgCsC,CAAhC,CAFoE,CAElC;QACnC,CAHD;MAID,CALD;IAMD,CAPD;EAQD,CATD;EAUA,OAAOT,EAAP;;EAEA,SAASD,mBAAT,CAA8BxC,EAA9B,EAAkCS,EAAlC,EAAsC;IACpC,OAAOT,EAAE,CACNe,IADI,CACCC,SADD,EACYP,EAAE,CAACC,GAAH,CAAO,SAAP,CADZ,EAC+BN,GAD/B,EAEJa,MAFI,CAEGjB,EAAE,CAACe,IAAH,CAAQC,SAAR,EAAmBP,EAAE,CAACC,GAAH,CAAO,eAAP,CAAnB,EAA4CN,GAA5C,CAFH,CAAP;EAGD;AACF;AAED;AACA;AACA;;;AACO,SAASgD,OAAT,CAAkBF,CAAlB,EAAkDG,CAAlD,EAA2F;EAChG,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUJ,CAAV,EAAaG,CAAb,EAAgB;IAC/B,KAAK,IAAMJ,IAAX,IAAmB;MACjBP,KAAK,EAAE,IADU;MAEjBC,UAAU,EAAE,IAFK;MAGjBC,UAAU,EAAE,IAHK;MAIjBC,MAAM,EAAE,IAJS;MAKjBC,WAAW,EAAE;IALI,CAAnB,EAMG;MACD,IAAII,CAAC,CAACD,IAAD,CAAL,EAAa;QACX,KAAK,IAAMP,KAAX,IAAoBQ,CAAC,CAACD,IAAD,CAArB,EAA6B;UAC3B,KAAK,IAAME,IAAX,IAAmBD,CAAC,CAACD,IAAD,CAAD,CAAQP,KAAR,CAAnB,EAAmC;YACjC,IAAI,CAACW,CAAC,CAACJ,IAAD,CAAD,CAAQP,KAAR,CAAD,IAAmB,CAACW,CAAC,CAACJ,IAAD,CAAD,CAAQP,KAAR,EAAeS,IAAf,CAAxB,EAA8C;cAC5C,OAAO,KAAP;YACD;UACF;QACF;MACF;IACF;;IACD,OAAO,IAAP;EACD,CAnBD;;EAoBA,OAAOG,QAAQ,CAACJ,CAAD,EAAIG,CAAJ,CAAR,IAAkBC,QAAQ,CAACD,CAAD,EAAIH,CAAJ,CAAjC;AACD;AAED;AACA;AACA;;;AACO,SAASK,QAAT,CAAmBC,IAAnB,EAA4E;EACjF,IAAMH,CAAC,GAAGG,IAAI,CAAC,CAAD,CAAd;EACA,IAAIN,CAAJ,EAAOO,EAAP;;EAFiF,2BAGxEC,CAHwE;IAI/E;IAAC,CAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,EAAsC,QAAtC,EAAgD,aAAhD,EAA+D/B,OAA/D,CACC,UAAUsB,IAAV,EAAgB;MACdC,CAAC,GAAGM,IAAI,CAACE,CAAD,CAAR;;MACA,IAAIR,CAAC,CAACD,IAAD,CAAL,EAAa;QACX,KAAKQ,EAAL,IAAWP,CAAC,CAACD,IAAD,CAAZ,EAAoB;UAClB,KAAK,IAAME,IAAX,IAAmBD,CAAC,CAACD,IAAD,CAAD,CAAQQ,EAAR,CAAnB,EAAgC;YAC9B,IAAI,CAACJ,CAAC,CAACJ,IAAD,CAAD,CAAQQ,EAAR,CAAL,EAAkBJ,CAAC,CAACJ,IAAD,CAAD,CAAQQ,EAAR,IAAc,EAAd;YAClBJ,CAAC,CAACJ,IAAD,CAAD,CAAQQ,EAAR,EAAYN,IAAZ,IAAoB,IAApB;UACD;QACF;MACF;IACF,CAXF;EAJ8E;;EAGjF,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACpB,MAAzB,EAAiCsB,CAAC,EAAlC,EAAsC;IAAA,MAA7BA,CAA6B;EAcrC;;EACD,OAAOL,CAAP;AACD;;AAID;AACA;AACA;AACO,SAASM,YAAT,CAAuBC,WAAvB,EAAsDC,gBAAtD,EAAoG;EACzG,IAAMC,OAA2B,GAAG,EAApC;;EACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAUP,IAAV,EAAgB;IAC7B,IAAIA,IAAI,CAACpB,MAAT,EAAiB;MACf,IAAMhC,GAAG,GAAGoD,IAAI,CAACQ,KAAL,GAAa5D,GAAb,EAAZ;MACA6D,eAAe,CAAC7D,GAAD,EAAM,UACnB8D,EADmB,EAEnBC,EAFmB,EAGnBC,SAHmB,EAInBC,YAJmB,EAKnBC,aALmB,EAMnB/D,aANmB,EAOnB;QACA,IAAMgE,IAAI,GAAG,CAACJ,EAAd;QACA,IAAI,CAACD,EAAD,IAAO,CAACI,aAAR,IAAyB,CAAC/D,aAA9B,EAA6C,OAAOsD,gBAAgB,CAACK,EAAD,EAAKG,YAAL,CAAvB;QAC7C,IAAM3D,GAAG,GAAG6D,IAAI,GACZlC,OAAO,CAACiC,aAAD,EAAgB/D,aAAhB,CADK,GAEZ8B,OAAO,CAAC+B,SAAD,EAAyBC,YAAzB,CAFX;QAGAP,OAAO,CAACU,IAAR,CAAa9D,GAAb;QACAqD,MAAM,CAACP,IAAI,CAAC3C,KAAL,CAAW,CAAX,CAAD,CAAN;MACD,CAfc,CAAf;IAgBD,CAlBD,MAkBO;MACL;MACAgD,gBAAgB,CAAC,IAAD,EAAON,QAAQ,CAACO,OAAD,CAAf,CAAhB;IACD;EACF,CAvBD;;EAwBAC,MAAM,CAACH,WAAD,CAAN;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASa,gBAAT,CAA2BhC,EAA3B,EAAuE;EAC5E,IAAMiC,OAAO,GAAG,EAAhB;EACC,CAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,EAAsC,QAAtC,EAAgD,aAAhD,EAA+D/C,OAA/D,CAAuE,UAAUsB,IAAV,EAAgB;IACtF,KAAK,IAAMP,KAAX,IAAoBD,EAAE,CAACQ,IAAD,CAAtB,EAA8B;MAC5B,IAAM0B,KAAe,GAAG,EAAxB;;MACA,KAAK,IAAMxB,IAAX,IAAmBV,EAAE,CAACQ,IAAD,CAAF,CAASP,KAAT,CAAnB,EAAoC;QAClCiC,KAAK,CAACH,IAAN,CAAWrB,IAAX;MACD;;MACDwB,KAAK,CAACC,IAAN;MACA,IAAMC,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAW,IAAX,CAAf;MACA,IAAI,CAACJ,OAAO,CAACG,MAAD,CAAZ,EAAsBH,OAAO,CAACG,MAAD,CAAP,GAAkB,EAAlB;MACtBH,OAAO,CAACG,MAAD,CAAP,CAAgBL,IAAhB,CAAqB,CAACvB,IAAD,EAAOP,KAAP,CAArB;IACD;EACF,CAXA;EAYD,OAAOgC,OAAP;AACD;AAED;AACA;AACA;;;AACO,SAASK,YAAT,CAAuB/E,EAAvB,EAAkCgF,CAAlC,EAAgDvC,EAAhD,EAAiEpC,MAAjE,EAA0F;EAC/F,IAAMqE,OAAO,GAAGD,gBAAgB,CAAChC,EAAD,CAAhC;EACA,OAAOwC,mBAAmB,CAACjF,EAAD,EAAKgF,CAAL,EAAQN,OAAR,EAAiBrE,MAAjB,CAA1B;AACD;AAED;AACA;AACA;;;AACO,SAAS4E,mBAAT,CACLjF,EADK,EAELgF,CAFK,EAGLN,OAHK,EAILrE,MAJK,EAKL6E,IALK,EAMLX,IANK,EAOC;EACN,IAAM/D,GAAG,GAAGC,EAAE,CAACC,GAAf;;EACA,KAAK,IAAMiE,KAAX,IAAoBD,OAApB,EAA6B;IAC3B,IAAMS,KAAK,GAAGT,OAAO,CAACC,KAAD,CAArB;IACA,IAAI,CAACQ,KAAK,CAAC/C,MAAX,EAAmB,SAFQ,CAEC;;IAC5B,IAAMgD,QAAQ,GAAGT,KAAK,CAACU,KAAN,CAAY,IAAZ,CAAjB;;IACA,IAAIC,MAAK,GAAGF,QAAQ,CACjBG,GADS,CACL,UAAUC,CAAV,EAAa;MAChB,OAAOA,CAAC,CAACH,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAP;IACD,CAHS,EAITP,IAJS,CAIJ,EAJI,CAAZ;;IAKA,IAAIP,IAAI,IAAI,CAACW,IAAb,EAAmBI,MAAK,IAAI,SAAT,CATQ,CASW;;IACtC,IAAMpC,EAAC,GAAGlD,EAAE,CAACiC,GAAH,CAAO5B,MAAM,CAACO,GAAP,GAAa,GAAb,GAAmB0E,MAA1B,CAAV;;IACAtF,EAAE,CAAC4B,GAAH,CAAOsB,EAAP,EAAUzC,EAAE,CAACc,GAAH,CAAO,MAAP,CAAV,EAA0Bf,GAAG,CAAC,eAAD,CAA7B,EAAgDH,MAAhD;;IACA,IAAI6E,IAAJ,EAAU;MACRlF,EAAE,CAAC4B,GAAH,CAAOsB,EAAP,EAAU1C,GAAG,CAAC,UAAD,CAAb,EAA2BwE,CAA3B,EAA8B3E,MAA9B;IACD;;IACD,IAAIkE,IAAJ,EAAU;MACRvE,EAAE,CAAC4B,GAAH,CAAOsB,EAAP,EAAU1C,GAAG,CAAC,SAAD,CAAb,EAA0BwE,CAA1B,EAA6B3E,MAA7B;IACD;;IACD,KAAK,IAAIoF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAAChD,MAA7B,EAAqCqD,CAAC,EAAtC,EAA0C;MACxCzF,EAAE,CAAC4B,GAAH,CAAOsB,EAAP,EAAU1C,GAAG,CAAC,MAAD,CAAb,EAAuBR,EAAE,CAACiC,GAAH,CAAOmD,QAAQ,CAACK,CAAD,CAAf,CAAvB,EAA4CpF,MAA5C;IACD;;IACD,KAAK,IAAIoF,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGN,KAAK,CAAC/C,MAA1B,EAAkCqD,EAAC,EAAnC,EAAuC;MACrC,IAAMxC,IAAI,GAAGkC,KAAK,CAACM,EAAD,CAAL,CAAS,CAAT,CAAb;MACA,IAAMhC,EAAE,GAAG0B,KAAK,CAACM,EAAD,CAAL,CAAS,CAAT,CAAX;MACAzF,EAAE,CAAC4B,GAAH,CAAOsB,EAAP,EAAU1C,GAAG,CAACyC,IAAD,CAAb,EAAqBjD,EAAE,CAACiC,GAAH,CAAOwB,EAAP,CAArB,EAAiCpD,MAAjC;IACD;EACF;AACF;AAED;AACA;AACA;AACA;;;AACO,SAASqF,WAAT,CAAsBjD,EAAtB,EAA+C;EACpD,OAAOkD,aAAa,CAAClB,gBAAgB,CAAChC,EAAD,CAAjB,CAApB;AACD;AAED;AACA;AACA;;;AACO,SAASkD,aAAT,CAAwBjB,OAAxB,EAAoD;EACzD,IAAIkB,GAAG,GAAG,EAAV;;EACA,KAAK,IAAMjB,KAAX,IAAoBD,OAApB,EAA6B;IAC3B,IAAMU,QAAQ,GAAGT,KAAK,CAACU,KAAN,CAAY,IAAZ,CAAjB;IACA,IAAMQ,QAAQ,GAAGT,QAAQ,CACtBG,GADc,CACV,UAAUC,CAAV,EAAa;MAChB,OAAOA,CAAC,CAACH,KAAF,CAAQ,GAAR,EAAa,CAAb,EAAgB,CAAhB,CAAP;IACD,CAHc,EAIdP,IAJc,CAIT,EAJS,CAAjB;IAKAc,GAAG,IAAIC,QAAQ,GAAG,GAAlB;IACA,IAAMV,KAAK,GAAGT,OAAO,CAACC,KAAD,CAArB;;IACA,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAAC/C,MAA1B,EAAkCqD,CAAC,EAAnC,EAAuC;MACrC,IAAMxC,IAAI,GAAGkC,KAAK,CAACM,CAAD,CAAL,CAAS,CAAT,CAAb;MACA,IAAMhC,EAAE,GAAG,IAAAxB,WAAA,EAAIkD,KAAK,CAACM,CAAD,CAAL,CAAS,CAAT,CAAJ,CAAX;MACAG,GAAG,IAAI3C,IAAI,KAAK,OAAT,GAAmB,GAAnB,GAAyB,EAAhC;MACA2C,GAAG,IAAInC,EAAE,CAACqC,QAAH,CAAYrF,EAAE,CAACsF,IAAH,CAAQ,OAAR,CAAZ,IAAgC,GAAhC,GAAsCC,KAAK,CAACC,KAAN,CAAYxC,EAAZ,CAA7C;MACA,IAAIgC,CAAC,GAAGN,KAAK,CAAC/C,MAAN,GAAe,CAAvB,EAA0BwD,GAAG,IAAI,GAAP;IAC3B;;IACDA,GAAG,IAAI,GAAP;EACD;;EACD,OAAO,MAAMA,GAAG,CAAC/E,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN,GAAyB,GAAhC,CApByD,CAoBrB;AACrC;AAED;AACA;AACA;;;AACO,SAASqF,aAAT,CAAwBlB,CAAxB,EAAsCvC,EAAtC,EAAuDpC,MAAvD,EAAkF;EACvF,IAAMoB,GAAG,GAAG,IAAAC,aAAA,GAAZ;EACAqD,YAAY,CAACtD,GAAD,EAAMuD,CAAN,EAASvC,EAAT,EAAapC,MAAb,CAAZ;EACA,OAAO,IAAA8F,iBAAA,EAAU9F,MAAV,EAAkBoB,GAAlB,EAAuBpB,MAAM,CAACO,GAA9B,EAAmC,aAAnC,KAAqD,EAA5D;AACD;AAED;AACA;AACA;;;AACO,SAASwF,YAAT,CACLpG,EADK,EAELgF,CAFK,EAGLvC,EAHK,EAILpC,MAJK,EAKLwD,gBALK,EAMC;EACN,IAAMa,OAAO,GAAGD,gBAAgB,CAAChC,EAAD,CAAhC;EACA,OAAO4D,aAAa,CAACrG,EAAD,EAAKgF,CAAL,EAAQN,OAAR,EAAiBrE,MAAjB,EAAyBwD,gBAAzB,CAApB;AACD;AAED;AACA;AACA;;;AACO,SAASwC,aAAT,CACLrG,EADK,EAELgF,CAFK,EAGLN,OAHK,EAILrE,MAJK,EAKLwD,gBALK,EAMC;EAAA;;EACN,IAAMpC,GAAG,GAAG,IAAAC,aAAA,GAAZ;EACAuD,mBAAmB,CAACxD,GAAD,EAAMuD,CAAN,EAASN,OAAT,EAAkBrE,MAAlB,EAA0B,IAA1B,CAAnB,CAFM,CAIN;;EACA,eAAAL,EAAE,CAACsG,OAAH,4DAAYC,GAAZ,CACElG,MADF,EAEEoB,GAAG,CAACH,kBAAJ,CAAuBN,SAAvB,EAAkCA,SAAlC,EAA6CA,SAA7C,EAAwDX,MAAxD,CAFF,EAGE,aAHF,EAIE,UAAUO,GAAV,EAAesD,EAAf,EAAmBsC,OAAnB,EAA4B;IAC1B,IAAI,CAACtC,EAAL,EAAS;MACPL,gBAAgB,CAACK,EAAD,EAAKsC,OAAL,CAAhB;IACD,CAFD,MAEO;MAAA;;MACL,eAAAxG,EAAE,CAACyG,OAAH,4DAAYC,MAAZ,CAAmBrG,MAAnB;MACA4E,mBAAmB,CAACjF,EAAD,EAAKgF,CAAL,EAAQN,OAAR,EAAiBrE,MAAjB,EAAyB,IAAzB,CAAnB;MACAL,EAAE,CAACyG,OAAH,CAAYE,SAAZ,CAAsBtG,MAAM,CAACO,GAA7B,IAAoC,MAApC,CAHK,CAGsC;;MAC3CiD,gBAAgB,CAACK,EAAD,CAAhB;IACD;EACF,CAbH;AAeD;;AAKD;AACA;AACA;AACA;AACA;AACO,SAAS0C,oBAAT,CAA+BC,MAA/B,EAAkDC,GAAlD,EAAiEjD,gBAAjE,EAAuH;EAC5H,IAAMkD,MAAM,GAAG/G,EAAE,CAACe,IAAH,CAAQC,SAAR,EAAmBP,EAAE,CAACuG,KAAH,CAAS,WAAT,CAAnB,EAA0CH,MAA1C,CAAf,CAD4H,CAE5H;;EACA,IAAIE,MAAJ,EAAY;IACVE,gBAAgB,CAACJ,MAAD,EAASE,MAAT,EAAiBD,GAAjB,EAAsBjD,gBAAtB,CAAhB;EACD,CAFD,MAEO;IACLiD,GAAG,CAAC,2BAAD,CAAH;IACAjD,gBAAgB,CAAC,IAAD,CAAhB,CAFK,CAEkB;EACxB,CAR2H,CAS5H;;AACD;AAED;AACA;AACA;;;AACO,SAASoD,gBAAT,CAA2BC,IAA3B,EAA4CC,QAA5C,EAAwEL,GAAxE,EAAuFjD,gBAAvF,EAAyI;EAC9IiD,GAAG,GAAGA,GAAG,IAAIM,KAAK,CAACN,GAAnB;EACA,IAAM1G,GAAG,GAAG8G,IAAI,CAAC9G,GAAL,EAAZ;EACA6D,eAAe,CAAC7D,GAAD,EAAM,UACnB8D,EADmB,EAEnBmD,MAFmB,EAGnBjD,SAHmB,EAInBC,YAJmB,EAKnBC,aALmB,EAMnB/D,aANmB,EAOnB;IACA,IAAI,CAAC2D,EAAD,IAAO,CAACI,aAAR,IAAyB,CAAC/D,aAA9B,EAA6C,OAAOsD,gBAAgB,CAAC,KAAD,EAAQQ,YAAR,CAAvB,CAD7C,CAC0F;;IAC1F,IAAM5B,EAAE,GAAG4E,MAAM,GACbhF,OAAO,CAAC+B,SAAD,EAAyBC,YAAzB,CADM,GAEbhC,OAAO,CAACiC,aAAD,EAAgB/D,aAAhB,CAFX;IAGAoD,YAAY,CAACwD,QAAD,EAAW,UAAUjD,EAAV,EAAcoD,KAAd,EAAqB;MAC1C,IAAI,CAACpD,EAAL,EAAS,OAAOL,gBAAgB,CAAC,KAAD,EAAQyD,KAAR,CAAvB;;MACT,IAAIlE,OAAO,CAACkE,KAAD,EAAuC7E,EAAvC,CAAX,EAAuD;QACrDqE,GAAG,CAAC,gCAAgCd,KAAK,CAACC,KAAN,CAAYiB,IAAZ,CAAhC,GAAoD,GAApD,GAA0D9G,GAA3D,CAAH;MACD,CAFD,MAEO;QACL0G,GAAG,CAAC,2BAA2Bd,KAAK,CAACC,KAAN,CAAYiB,IAAZ,CAA3B,GAA+C,GAA/C,GAAqD9G,GAAtD,CAAH,CADK,CAGL;QACA;QACA;;QAEAgG,YAAY,CACVpG,EADU,EAEVoE,SAFU,EAGVkD,KAHU,EAIVjD,YAJU,EAKVR,gBALU,CAAZ;MAOD;IACF,CAnBW,CAAZ;EAoBD,CAhCc,CAAf;AAiCD;AAED;AACA;AACA;;;AACO,SAAS0D,MAAT,CACLC,MADK,EAELC,OAFK,EAGL5D,gBAHK,EAIC;EACN,IAAMxD,MAAM,GAAGL,EAAE,CAAC0H,GAAH,CACbF,MADa,EAEbG,oBAFa,CAAf,CADM,CAIJ;;EACF,IAAI,CAAC3H,EAAE,CAACyG,OAAR,EAAiB;IACf,MAAM,IAAImB,KAAJ,CAAU,sBAAV,CAAN;EACD;;EACD,IAAIvH,MAAJ,EAAY;IACV;IACAL,EAAE,CAACyG,OAAH,CACGoB,YADH,CACgB,KADhB,EACuBxH,MAAM,CAACyH,KAD9B,EACqC;MACjCC,IAAI,EAAEN,OAD2B;MAEjCO,WAAW,EAAE;IAFoB,CADrC,EAKGC,IALH,CAKQ,UAACC,GAAD,EAAS;MACbrE,gBAAgB,CAACqE,GAAG,CAAChE,EAAL,EAASgE,GAAG,CAACC,KAAJ,IAAa,EAAtB,CAAhB;IACD,CAPH,EAFU,CASL;EACN,CAVD,MAUO;IACLnI,EAAE,CAACyG,OAAH,CAAW2B,gBAAX,CAA4BZ,MAA5B,EAAoCxG,SAApC,EAA+C,UAAUkD,EAAV,EAAcmE,IAAd,EAAoB;MACjE,IAAI,CAACnE,EAAL,EAAS,OAAOL,gBAAgB,CAACK,EAAD,EAAK,+BAA+BmE,IAApC,CAAvB;MACT,IAAMhI,MAAM,GAAGL,EAAE,CAAC0H,GAAH,CACbF,MADa,EAEbG,oBAFa,CAAf,CAFiE,CAK/D;;MACF,IAAI,CAACtH,MAAL,EAAa;QACX;QACAwD,gBAAgB,CAAC,KAAD,EAAQ,gCAAgC2D,MAAxC,CAAhB;MACD,CAHD,MAGO;QACL,IAAI,CAACxH,EAAE,CAACyG,OAAR,EAAiB;UACf,MAAM,IAAImB,KAAJ,CAAU,sBAAV,CAAN;QACD;;QACD5H,EAAE,CAACyG,OAAH,CACGoB,YADH,CACgB,KADhB,EACuBxH,MAAM,CAACyH,KAD9B,EACqC;UACjCC,IAAI,EAAEN,OAD2B;UAEjCO,WAAW,EAAE;QAFoB,CADrC,EAKGC,IALH,CAKQ,UAACC,GAAD,EAAS;UACbrE,gBAAgB,CAACqE,GAAG,CAAChE,EAAL,EAASgE,GAAG,CAACC,KAAJ,IAAa,EAAtB,CAAhB;QACD,CAPH;MAQD;IACF,CAtBD;EAuBD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASlE,eAAT,CACL7D,GADK,EAELyD,gBAFK,EAUC;EACNyE,MAAM,CAAClI,GAAD,EAAM,UAAU8D,EAAV,EAAcqE,MAAd,EAAsBlI,MAAtB,EAA8BmG,OAA9B,EAAsD;IAChE,IAAMhG,GAAG,GAAGC,EAAE,CAACC,GAAf;IACA,IAAI,CAACwD,EAAL,EAAS,OAAOL,gBAAgB,CAAC,KAAD,EAAQ,KAAR,EAAe0E,MAAf,EAAiC/B,OAAjC,CAAvB,CAFuD,CAIhE;;IACA,IAAMgC,SAAS,GAAG,SAAZA,SAAY,CAAU5H,GAAV,EAAe;MAC/B,IAAIA,GAAG,CAACC,KAAJ,CAAU,CAAC,CAAX,MAAkB,GAAtB,EAA2B;QACzBD,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;MACD;;MACD,IAAM4H,KAAK,GAAG7H,GAAG,CAAC8H,WAAJ,CAAgB,GAAhB,CAAd;MACA,IAAMC,IAAI,GAAG/H,GAAG,CAACgI,OAAJ,CAAY,GAAZ,EAAiBhI,GAAG,CAACgI,OAAJ,CAAY,IAAZ,IAAoB,CAArC,CAAb;;MACA,IAAID,IAAI,GAAGF,KAAX,EAAkB;QAChB,OAAO5E,gBAAgB,CAAC,KAAD,EAAQ,IAAR,EAAc,GAAd,EAAmB,uBAAnB,CAAvB;MACD;;MACDjD,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa4H,KAAK,GAAG,CAArB,CAAN;MACA,IAAMI,IAAI,GAAG,IAAA5G,WAAA,EAAIrB,GAAJ,CAAb;MACA0H,MAAM,CAACO,IAAD,EAAO,UAAU3E,EAAV,EAAcqE,MAAd,EAAsBhI,aAAtB,EAA4D;QACvE,IAAI,CAAC2D,EAAL,EAAS;UACP,OAAOL,gBAAgB,CACrB,KADqB,EAErB,IAFqB,EAGrB0E,MAHqB,6BAID3H,GAJC,cAIM2H,MAJN,cAIgBhI,aAJhB,EAAvB;QAMD,CAPD,MAOO,IAAIgI,MAAM,KAAK,GAAf,EAAoB;UACzB,OAAO1E,gBAAgB,CACrB,KADqB,EAErB,IAFqB,EAGrB0E,MAHqB,+CAIiB3H,GAJjB,OAAvB;QAMD,CAPM,MAOA,IAAI2H,MAAM,KAAK,GAAf,EAAoB;UACzB,OAAOC,SAAS,CAAC5H,GAAD,CAAhB;QACD,CAFM,MAEA,IAAI2H,MAAM,KAAK,GAAf,EAAoB;UACzB,OAAO1E,gBAAgB,CACrB,KADqB,EAErB,IAFqB,EAGrB0E,MAHqB,0BAIJA,MAJI,yCAIiCM,IAJjC,EAAvB;QAMD,CAxBsE,CAyBvE;QACA;;;QACA,IAAM/H,QAAQ,GAAGd,EAAE,CAChBe,IADc,CACTC,SADS,EACER,GAAG,CAAC,SAAD,CADL,EACkBR,EAAE,CAACiC,GAAH,CAAOrB,GAAP,CADlB,EAC+BL,aAD/B,EAEdU,MAFc,CAGbjB,EAAE,CAACe,IAAH,CAAQC,SAAR,EAAmBR,GAAG,CAAC,eAAD,CAAtB,EAAyCR,EAAE,CAACiC,GAAH,CAAOrB,GAAP,CAAzC,EAAsDL,aAAtD,CAHa,CAAjB;;QAKA,IAAI,CAACO,QAAQ,CAACsB,MAAd,EAAsB;UACpB,OAAOoG,SAAS,CAAC5H,GAAD,CAAhB,CADoB,CACE;QACvB;;QACD,IAAM0D,aAAa,GAAGtE,EAAE,CAACiC,GAAH,CAAOrB,GAAP,CAAtB;QACA,OAAOiD,gBAAgB,CACrB,IADqB,EAErB,KAFqB,EAGrBzD,GAHqB,EAIrBC,MAJqB,EAKrBiE,aALqB,EAMrB/D,aANqB,CAAvB;MAQD,CA5CK,CAAN;IA6CD,CAxDD,CALgE,CA6D9D;;;IAEF,IAAI,CAAC2D,EAAL,EAAS;MACP,OAAOL,gBAAgB,CACrB,KADqB,EAErB,KAFqB,EAGrB0E,MAHqB,2DAI6BnI,GAJ7B,eAIqCoG,OAJrC,EAAvB;IAMD,CAPD,MAOO,IAAI+B,MAAM,KAAK,GAAf,EAAoB;MACzBC,SAAS,CAACpI,GAAG,CAACQ,GAAL,CAAT,CADyB,CACN;IACpB,CAFM,MAEA,IAAI2H,MAAM,KAAK,GAAf,EAAoB;MACzB,OAAO1E,gBAAgB,CACrB,KADqB,EAErB,KAFqB,EAGrB0E,MAHqB,0CAIY/B,OAJZ,EAAvB;IAMD,CAPM,MAOA,IAAI+B,MAAM,KAAK,GAAf,EAAoB;MACzB,OAAO1E,gBAAgB,CACrB,KADqB,EAErB,KAFqB,EAGrB0E,MAHqB,kBAIZA,MAJY,uDAIuCnI,GAJvC,eAI+CoG,OAJ/C,EAAvB;IAMD,CAPM,MAOA;MACL;MACA,OAAO3C,gBAAgB,CAAC,IAAD,EAAO,IAAP,EAAazD,GAAb,EAAkBC,MAAlB,CAAvB;IACD;EACF,CA1FK,CAAN,CADM,CA2FH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASiI,MAAT,CACLlI,GADK,EAELyD,gBAFK,EAQC;EACN,IAAI,CAAC7D,EAAE,CAACyG,OAAR,EAAiB;IACf,MAAM,IAAImB,KAAJ,CAAU,mBAAV,CAAN;EACD;;EACD5H,EAAE,CAACyG,OAAH,CAAW2B,gBAAX,CAA4BhI,GAA5B,EAAiCY,SAAjC,EAA4C,UAAUkD,EAAV,EAAcmE,IAAd,EAAoB;IAC9D,IAAI,CAACnE,EAAL,EAAS;MACP,OAAOL,gBAAgB,CAACK,EAAD,8CAA0C9D,GAA1C,eAAkDiI,IAAlD,EAAvB;IACD;;IACD,IAAMhI,MAAM,GAAGL,EAAE,CAAC0H,GAAH,CACbtH,GADa,EAEbuH,oBAFa,CAAf,CAJ8D,CAO5D;;IACF,IAAI,CAACtH,MAAL,EAAa;MACXwD,gBAAgB,CAAC,KAAD,EAAQ,GAAR,uCAA2CzD,GAA3C,EAAhB;IACD,CAFD,MAEO;MACL,IAAI,CAACJ,EAAE,CAACyG,OAAR,EAAiB;QACf,MAAM,IAAImB,KAAJ,CAAU,mBAAV,CAAN;MACD;;MACD,IAAI5H,EAAE,CAACyG,OAAH,CAAWqC,WAAX,CAAuBzI,MAAM,CAACyH,KAA9B,CAAJ,EAA0C;QACxC,OAAOjE,gBAAgB,CACrB,IADqB,EAErB,GAFqB,EAGrBxD,MAHqB,qBAITA,MAJS,sBAAvB;MAMD;;MACDL,EAAE,CAACyG,OAAH,CAAW2B,gBAAX,CAA4B/H,MAA5B,EAAiDW,SAAjD,EAA4D,UAC1DkD,EAD0D,EAE1DsC,OAF0D,EAG1DuC,QAH0D,EAI1D;QACA,IAAI,CAAC7E,EAAL,EAAS;UACPL,gBAAgB,CACd,IADc,EAEdkF,QAAQ,CAACR,MAFK,EAGdlI,MAHc,2CAIoBA,MAJpB,eAI+BmG,OAJ/B,EAAhB;QAMD,CAPD,MAOO;UACL3C,gBAAgB,CAAC,IAAD,EAAO,GAAP,EAAYxD,MAAZ,CAAhB;QACD;MACF,CAfD;IAgBD;EACF,CAvCD;AAwCD;AAED;AACA;AACA;;;SACsB2I,oB;;;;;wGAAf,iBAAqCC,eAArC;IAAA;MAAA;QAAA;UAAA;YAAA,iCACE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;cAAA,OAAqBnF,eAAe,CAAC,IAAAhC,WAAA,EAAIgH,eAAJ,CAAD,EAAuB,UAC5E/E,EAD4E,EAE5EmF,WAF4E,EAG5EjF,SAH4E,EAI5EC,YAJ4E,EAK5EC,aAL4E,EAMzE;gBACH,IAAIJ,EAAJ,EAAQ;kBACN,OAAOiF,OAAO,CAAEE,WAAW,GAAGjF,SAAH,GAAeE,aAA5B,CAAd;gBACD;;gBACD,OAAO8E,MAAM,CAAC,IAAIxB,KAAJ,yBAA2BqB,eAA3B,EAAD,CAAb;cACD,CAXsD,CAApC;YAAA,CAAZ,CADF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C"}