{"version":3,"file":"preferences.js","names":["$rdf","_interopRequireWildcard","require","_solidLogic","debug","_login","ns","participation","widgets","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","kb","store","value","exports","k","v","log","Error","recordSharedPreferences","subject","context","Promise","resolve","reject","sharedPreferences","any","ui","sp","sym","doc","uri","ins","st","updater","update","ok","errorMessage","recordPersonalDefaults","theClass","ensureLoadedPreferences","then","preferencesFile","preferencesFileError","regs","each","solid","prefs","reg","length","forEach","r","personalDefaults","newThing","rdf","push","errm","err","renderPreferencesForm","preferencesForm","prefContainer","dom","createElement","participationObject","me","heading","text","appendChild","textContent","noun","appendForm","mes","complain","errorMessageBlock","toJS","term","datatype","equals","xsd","Date","Number","getPreferencesForClass","predicates","results","pred","v1"],"sources":["../src/preferences.js"],"sourcesContent":["//                  Solid-UI preferences\n//                  =====================\n//\n\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport { store } from 'solid-logic'\nimport * as debug from './debug'\nimport { ensureLoadedPreferences } from './login/login'\nimport * as ns from './ns'\nimport * as participation from './participation' // @ts-ignore\nimport * as widgets from './widgets'\n\nconst kb = store\n\n// This was tabulator . preferences in the tabulator\n//  Is this functionality used anywhere?\n//\n\n// used for storing user name\n// @@ Deprocate these functions.  They were used for\n// communication around the tabulator functionality about the user session\n\nexport const value = []\nexport function get (k) {\n  return value[k]\n}\n\nexport function set (k, v) {\n  if (typeof v !== 'string') {\n    debug.log('Non-string value of preference ' + k + ': ' + v)\n    throw new Error('Non-string value of preference ' + k + ': ' + v)\n  }\n  this.value[k] = v\n}\n\n// In a solid world, Preferences are stored in the web\n//\n// Make an RDF node for recording the common view preferences for any object\n// (maybe make it in a separate file?)\nexport function recordSharedPreferences (subject, context) {\n  return new Promise(function (resolve, reject) {\n    const sharedPreferences = kb.any(subject, ns.ui('sharedPreferences'))\n    if (!sharedPreferences) {\n      const sp = $rdf.sym(subject.doc().uri + '#SharedPreferences')\n      const ins = [\n        $rdf.st(subject, ns.ui('sharedPreferences'), sp, subject.doc())\n      ]\n      debug.log('Creating shared preferences ' + sp)\n      kb.updater.update([], ins, function (uri, ok, errorMessage) {\n        if (!ok) {\n          reject(new Error('Error creating shared prefs: ' + errorMessage))\n        } else {\n          context.sharedPreferences = sp\n          resolve(context)\n        }\n      })\n    } else {\n      context.sharedPreferences = sharedPreferences\n      resolve(context)\n    }\n  })\n}\n\n// Construct a personal defaults node in the preferences file for a given class of object\n//\nexport function recordPersonalDefaults (theClass, context) {\n  return new Promise(function (resolve, reject) {\n    ensureLoadedPreferences(context).then(\n      context => {\n        if (!context.preferencesFile) {\n          debug.log(\n            'Not doing private class preferences as no access to preferences file. ' +\n              context.preferencesFileError\n          )\n          return\n        }\n        const regs = kb.each(\n          null,\n          ns.solid('forClass'),\n          theClass,\n          context.preferencesFile\n        )\n        let ins = []\n        let prefs\n        let reg\n        if (regs.length) {\n          // Use existing node if we can\n          regs.forEach(r => {\n            prefs = prefs || kb.any(r, ns.solid('personalDefaults'))\n          })\n          if (prefs) {\n            context.personalDefaults = prefs // Found one\n            resolve(context)\n            return\n          } else {\n            prefs = widgets.newThing(context.preferencesFile)\n            reg = regs[0]\n          }\n        } else {\n          // no regs fo class\n          reg = widgets.newThing(context.preferencesFile)\n          ins = [\n            $rdf.st(\n              reg,\n              ns.rdf('type'),\n              ns.solid('TypeRegistration'),\n              context.preferencesFile\n            ),\n            $rdf.st(reg, ns.solid('forClass'), theClass, context.preferencesFile)\n          ]\n        }\n        prefs = widgets.newThing(context.preferencesFile)\n        ins.push(\n          $rdf.st(\n            reg,\n            ns.solid('personalDefaults'),\n            prefs,\n            context.preferencesFile\n          )\n        )\n        kb.updater.update([], ins, function (uri, ok, errm) {\n          if (!ok) {\n            reject(new Error('Setting preferences for ' + theClass + ': ' + errm))\n          } else {\n            context.personalDefaults = prefs\n            resolve(context)\n          }\n        })\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\nexport function renderPreferencesForm (subject, theClass, preferencesForm, context) {\n  const prefContainer = context.dom.createElement('div')\n  participation.participationObject(subject, subject.doc(), context.me).then(\n    participation => {\n      const dom = context.dom\n      function heading (text) {\n        prefContainer.appendChild(dom.createElement('h5')).textContent = text\n      }\n      heading('My view of this ' + context.noun)\n      widgets.appendForm(\n        dom,\n        prefContainer,\n        {},\n        participation,\n        preferencesForm,\n        subject.doc(),\n        (ok, mes) => {\n          if (!ok) widgets.complain(context, mes)\n        }\n      )\n\n      heading(\"Everyone's  view of this \" + context.noun)\n      recordSharedPreferences(subject, context).then(context => {\n        const sharedPreferences = context.sharedPreferences\n        widgets.appendForm(\n          dom,\n          prefContainer,\n          {},\n          sharedPreferences,\n          preferencesForm,\n          subject.doc(),\n          (ok, mes) => {\n            if (!ok) widgets.complain(context, mes)\n          }\n        )\n\n        heading('My default view of any ' + context.noun)\n        recordPersonalDefaults(theClass, context).then(\n          context => {\n            widgets.appendForm(\n              dom,\n              prefContainer,\n              {},\n              context.personalDefaults,\n              preferencesForm,\n              context.preferencesFile,\n              (ok, mes) => {\n                if (!ok) widgets.complain(context, mes)\n              }\n            )\n          },\n          err => {\n            widgets.complain(context, err)\n          }\n        )\n      })\n    },\n    err => {\n      // parp object fails\n      prefContainer.appendChild(widgets.errorMessageBlock(context.dom, err))\n    }\n  )\n  return prefContainer\n}\n\n// This should be part of rdflib.js ad part of the RDFJS Standard!!\n\nfunction toJS (term) {\n  if (!term.datatype) return term // Objects remain objects\n  if (term.datatype.equals(ns.xsd('boolean'))) {\n    return term.value === '1'\n  }\n  if (\n    term.datatype.equals(ns.xsd('dateTime')) ||\n    term.datatype.equals(ns.xsd('date'))\n  ) {\n    return new Date(term.value)\n  }\n  if (\n    term.datatype.equals(ns.xsd('integer')) ||\n    term.datatype.equals(ns.xsd('float')) ||\n    term.datatype.equals(ns.xsd('decimal'))\n  ) {\n    return Number(term.value)\n  }\n  return term.value\n}\n\n// This is the function which acuakly reads and combines the preferences\n//\n//  @@ make it much more tolerant of missing buts of prefernces\nexport function getPreferencesForClass (subject, theClass, predicates, context) {\n  return new Promise(function (resolve, reject) {\n    recordSharedPreferences(subject, context).then(context => {\n      const sharedPreferences = context.sharedPreferences\n      if (context.me) {\n        participation\n          .participationObject(subject, subject.doc(), context.me)\n          .then(participation => {\n            recordPersonalDefaults(theClass, context).then(context => {\n              const results = []\n              const personalDefaults = context.personalDefaults\n              predicates.forEach(pred => {\n                // Order of preference: My settings on object, Global settings on object, my settings on class\n                const v1 =\n                  kb.any(participation, pred) ||\n                  kb.any(sharedPreferences, pred) ||\n                  kb.any(personalDefaults, pred)\n                if (v1) {\n                  results[pred.uri] = toJS(v1)\n                }\n              })\n              resolve(results)\n            }, reject)\n          }, reject)\n      } else {\n        // no user defined, just use common prefs\n        const results = []\n        predicates.forEach(pred => {\n          const v1 = kb.any(sharedPreferences, pred)\n          if (v1) {\n            results[pred.uri] = toJS(v1)\n          }\n        })\n        resolve(results)\n      }\n    })\n  })\n}\n\n// ends\n"],"mappings":"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"}