{"version":3,"sources":["../src/preferences.js"],"names":["kb","store","value","get","k","set","v","debug","log","Error","recordSharedPreferences","subject","context","Promise","resolve","reject","sharedPreferences","any","ns","ui","sp","$rdf","sym","doc","uri","ins","st","updater","update","ok","errorMessage","recordPersonalDefaults","theClass","authn","logInLoadPreferences","then","preferencesFile","preferencesFileError","regs","each","solid","prefs","reg","length","forEach","r","personalDefaults","widgets","newThing","rdf","push","errm","err","renderPreferencesForm","preferencesForm","prefContainer","dom","createElement","participation","participationObject","me","heading","text","appendChild","textContent","noun","appendForm","mes","complain","errorMessageBlock","toJS","term","datatype","equals","xsd","Date","Number","getPreferencesForClass","predicates","results","pred","v1"],"mappings":";;;;;;;;;;;;;;;AAIA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAZA;AACA;AACA;AAOgD;AAEjB;AAG/B,IAAMA,EAAE,GAAGC,YAAX,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEO,IAAMC,KAAK,GAAG,EAAd;;;AACA,SAASC,GAAT,CAAcC,CAAd,EAAiB;AACtB,SAAOF,KAAK,CAACE,CAAD,CAAZ;AACD;;AAEM,SAASC,GAAT,CAAcD,CAAd,EAAiBE,CAAjB,EAAoB;AACzB,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzBC,IAAAA,KAAK,CAACC,GAAN,CAAU,oCAAoCJ,CAApC,GAAwC,IAAxC,GAA+CE,CAAzD;AACA,UAAM,IAAIG,KAAJ,CAAU,oCAAoCL,CAApC,GAAwC,IAAxC,GAA+CE,CAAzD,CAAN;AACD;;AACD,OAAKJ,KAAL,CAAWE,CAAX,IAAgBE,CAAhB;AACD,C,CAED;AACA;AACA;AACA;;;AACO,SAASI,uBAAT,CAAkCC,OAAlC,EAA2CC,OAA3C,EAAoD;AACzD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAMC,iBAAiB,GAAGhB,EAAE,CAACiB,GAAH,CAAON,OAAP,EAAgBO,EAAE,CAACC,EAAH,CAAM,mBAAN,CAAhB,CAA1B;;AACA,QAAI,CAACH,iBAAL,EAAwB;AACtB,UAAMI,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASX,OAAO,CAACY,GAAR,GAAcC,GAAd,GAAoB,oBAA7B,CAAX;AACA,UAAMC,GAAG,GAAG,CACVJ,IAAI,CAACK,EAAL,CAAQf,OAAR,EAAiBO,EAAE,CAACC,EAAH,CAAM,mBAAN,CAAjB,EAA6CC,EAA7C,EAAiDT,OAAO,CAACY,GAAR,EAAjD,CADU,CAAZ;AAGAhB,MAAAA,KAAK,CAACC,GAAN,CAAU,iCAAiCY,EAA3C;AACApB,MAAAA,EAAE,CAAC2B,OAAH,CAAWC,MAAX,CAAkB,EAAlB,EAAsBH,GAAtB,EAA2B,UAAUD,GAAV,EAAeK,EAAf,EAAmBC,YAAnB,EAAiC;AAC1D,YAAI,CAACD,EAAL,EAAS;AACPd,UAAAA,MAAM,CAAC,IAAIN,KAAJ,CAAU,kCAAkCqB,YAA5C,CAAD,CAAN;AACD,SAFD,MAEO;AACLlB,UAAAA,OAAO,CAACI,iBAAR,GAA4BI,EAA5B;AACAN,UAAAA,OAAO,CAACF,OAAD,CAAP;AACD;AACF,OAPD;AAQD,KAdD,MAcO;AACLA,MAAAA,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;AACAF,MAAAA,OAAO,CAACF,OAAD,CAAP;AACD;AACF,GApBM,CAAP;AAqBD,C,CAED;AACA;;;AACO,SAASmB,sBAAT,CAAiCC,QAAjC,EAA2CpB,OAA3C,EAAoD;AACzD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CkB,iBAAMC,oBAAN,CAA2BtB,OAA3B,EAAoCuB,IAApC,CACE,UAAAvB,OAAO,EAAI;AACT,UAAI,CAACA,OAAO,CAACwB,eAAb,EAA8B;AAC5B7B,QAAAA,KAAK,CAACC,GAAN,CACE,2EACEI,OAAO,CAACyB,oBAFZ;AAIA;AACD;;AACD,UAAMC,IAAI,GAAGtC,EAAE,CAACuC,IAAH,CACX,IADW,EAEXrB,EAAE,CAACsB,KAAH,CAAS,UAAT,CAFW,EAGXR,QAHW,EAIXpB,OAAO,CAACwB,eAJG,CAAb;AAMA,UAAIX,GAAG,GAAG,EAAV;AACA,UAAIgB,KAAJ;AACA,UAAIC,GAAJ;;AACA,UAAIJ,IAAI,CAACK,MAAT,EAAiB;AACf;AACAL,QAAAA,IAAI,CAACM,OAAL,CAAa,UAAAC,CAAC,EAAI;AAChBJ,UAAAA,KAAK,GAAGA,KAAK,IAAIzC,EAAE,CAACiB,GAAH,CAAO4B,CAAP,EAAU3B,EAAE,CAACsB,KAAH,CAAS,kBAAT,CAAV,CAAjB;AACD,SAFD;;AAGA,YAAIC,KAAJ,EAAW;AACT7B,UAAAA,OAAO,CAACkC,gBAAR,GAA2BL,KAA3B,CADS,CACwB;;AACjC3B,UAAAA,OAAO,CAACF,OAAD,CAAP;AACA;AACD,SAJD,MAIO;AACL6B,UAAAA,KAAK,GAAGM,OAAO,CAACC,QAAR,CAAiBpC,OAAO,CAACwB,eAAzB,CAAR;AACAM,UAAAA,GAAG,GAAGJ,IAAI,CAAC,CAAD,CAAV;AACD;AACF,OAbD,MAaO;AACL;AACAI,QAAAA,GAAG,GAAGK,OAAO,CAACC,QAAR,CAAiBpC,OAAO,CAACwB,eAAzB,CAAN;AACAX,QAAAA,GAAG,GAAG,CACJJ,IAAI,CAACK,EAAL,CACEgB,GADF,EAEExB,EAAE,CAAC+B,GAAH,CAAO,MAAP,CAFF,EAGE/B,EAAE,CAACsB,KAAH,CAAS,kBAAT,CAHF,EAIE5B,OAAO,CAACwB,eAJV,CADI,EAOJf,IAAI,CAACK,EAAL,CAAQgB,GAAR,EAAaxB,EAAE,CAACsB,KAAH,CAAS,UAAT,CAAb,EAAmCR,QAAnC,EAA6CpB,OAAO,CAACwB,eAArD,CAPI,CAAN;AASD;;AACDK,MAAAA,KAAK,GAAGM,OAAO,CAACC,QAAR,CAAiBpC,OAAO,CAACwB,eAAzB,CAAR;AACAX,MAAAA,GAAG,CAACyB,IAAJ,CACE7B,IAAI,CAACK,EAAL,CACEgB,GADF,EAEExB,EAAE,CAACsB,KAAH,CAAS,kBAAT,CAFF,EAGEC,KAHF,EAIE7B,OAAO,CAACwB,eAJV,CADF;AAQApC,MAAAA,EAAE,CAAC2B,OAAH,CAAWC,MAAX,CAAkB,EAAlB,EAAsBH,GAAtB,EAA2B,UAAUD,GAAV,EAAeK,EAAf,EAAmBsB,IAAnB,EAAyB;AAClD,YAAI,CAACtB,EAAL,EAAS;AACPd,UAAAA,MAAM,CAAC,IAAIN,KAAJ,CAAU,6BAA6BuB,QAA7B,GAAwC,IAAxC,GAA+CmB,IAAzD,CAAD,CAAN;AACD,SAFD,MAEO;AACLvC,UAAAA,OAAO,CAACkC,gBAAR,GAA2BL,KAA3B;AACA3B,UAAAA,OAAO,CAACF,OAAD,CAAP;AACD;AACF,OAPD;AAQD,KA7DH,EA8DE,UAAAwC,GAAG,EAAI;AACLrC,MAAAA,MAAM,CAACqC,GAAD,CAAN;AACD,KAhEH;AAkED,GAnEM,CAAP;AAoED;;AAEM,SAASC,qBAAT,CAAgC1C,OAAhC,EAAyCqB,QAAzC,EAAmDsB,eAAnD,EAAoE1C,OAApE,EAA6E;AAClF,MAAM2C,aAAa,GAAG3C,OAAO,CAAC4C,GAAR,CAAYC,aAAZ,CAA0B,KAA1B,CAAtB;AACAC,EAAAA,aAAa,CAACC,mBAAd,CAAkChD,OAAlC,EAA2CA,OAAO,CAACY,GAAR,EAA3C,EAA0DX,OAAO,CAACgD,EAAlE,EAAsEzB,IAAtE,CACE,UAAAuB,aAAa,EAAI;AACf,QAAMF,GAAG,GAAG5C,OAAO,CAAC4C,GAApB;;AACA,aAASK,OAAT,CAAkBC,IAAlB,EAAwB;AACtBP,MAAAA,aAAa,CAACQ,WAAd,CAA0BP,GAAG,CAACC,aAAJ,CAAkB,IAAlB,CAA1B,EAAmDO,WAAnD,GAAiEF,IAAjE;AACD;;AACDD,IAAAA,OAAO,CAAC,qBAAqBjD,OAAO,CAACqD,IAA9B,CAAP;AACAlB,IAAAA,OAAO,CAACmB,UAAR,CACEV,GADF,EAEED,aAFF,EAGE,EAHF,EAIEG,aAJF,EAKEJ,eALF,EAME3C,OAAO,CAACY,GAAR,EANF,EAOE,UAACM,EAAD,EAAKsC,GAAL,EAAa;AACX,UAAI,CAACtC,EAAL,EAASkB,OAAO,CAACqB,QAAR,CAAiBxD,OAAjB,EAA0BuD,GAA1B;AACV,KATH;AAYAN,IAAAA,OAAO,CAAC,8BAA8BjD,OAAO,CAACqD,IAAvC,CAAP;AACAvD,IAAAA,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvB,CAA0CuB,IAA1C,CAA+C,UAAAvB,OAAO,EAAI;AACxD,UAAMI,iBAAiB,GAAGJ,OAAO,CAACI,iBAAlC;AACA+B,MAAAA,OAAO,CAACmB,UAAR,CACEV,GADF,EAEED,aAFF,EAGE,EAHF,EAIEvC,iBAJF,EAKEsC,eALF,EAME3C,OAAO,CAACY,GAAR,EANF,EAOE,UAACM,EAAD,EAAKsC,GAAL,EAAa;AACX,YAAI,CAACtC,EAAL,EAASkB,OAAO,CAACqB,QAAR,CAAiBxD,OAAjB,EAA0BuD,GAA1B;AACV,OATH;AAYAN,MAAAA,OAAO,CAAC,4BAA4BjD,OAAO,CAACqD,IAArC,CAAP;AACAlC,MAAAA,sBAAsB,CAACC,QAAD,EAAWpB,OAAX,CAAtB,CAA0CuB,IAA1C,CACE,UAAAvB,OAAO,EAAI;AACTmC,QAAAA,OAAO,CAACmB,UAAR,CACEV,GADF,EAEED,aAFF,EAGE,EAHF,EAIE3C,OAAO,CAACkC,gBAJV,EAKEQ,eALF,EAME1C,OAAO,CAACwB,eANV,EAOE,UAACP,EAAD,EAAKsC,GAAL,EAAa;AACX,cAAI,CAACtC,EAAL,EAASkB,OAAO,CAACqB,QAAR,CAAiBxD,OAAjB,EAA0BuD,GAA1B;AACV,SATH;AAWD,OAbH,EAcE,UAAAf,GAAG,EAAI;AACLL,QAAAA,OAAO,CAACqB,QAAR,CAAiBxD,OAAjB,EAA0BwC,GAA1B;AACD,OAhBH;AAkBD,KAjCD;AAkCD,GAtDH,EAuDE,UAAAA,GAAG,EAAI;AACL;AACAG,IAAAA,aAAa,CAACQ,WAAd,CAA0BhB,OAAO,CAACsB,iBAAR,CAA0BzD,OAAO,CAAC4C,GAAlC,EAAuCJ,GAAvC,CAA1B;AACD,GA1DH;AA4DA,SAAOG,aAAP;AACD,C,CAED;;;AAEA,SAASe,IAAT,CAAeC,IAAf,EAAqB;AACnB,MAAI,CAACA,IAAI,CAACC,QAAV,EAAoB,OAAOD,IAAP,CADD,CACa;;AAChC,MAAIA,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,SAAP,CAArB,CAAJ,EAA6C;AAC3C,WAAOH,IAAI,CAACrE,KAAL,KAAe,GAAtB;AACD;;AACD,MACEqE,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,UAAP,CAArB,KACAH,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,MAAP,CAArB,CAFF,EAGE;AACA,WAAO,IAAIC,IAAJ,CAASJ,IAAI,CAACrE,KAAd,CAAP;AACD;;AACD,MACEqE,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,SAAP,CAArB,KACAH,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,OAAP,CAArB,CADA,IAEAH,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqBvD,EAAE,CAACwD,GAAH,CAAO,SAAP,CAArB,CAHF,EAIE;AACA,WAAOE,MAAM,CAACL,IAAI,CAACrE,KAAN,CAAb;AACD;;AACD,SAAOqE,IAAI,CAACrE,KAAZ;AACD,C,CAED;AACA;AACA;;;AACO,SAAS2E,sBAAT,CAAiClE,OAAjC,EAA0CqB,QAA1C,EAAoD8C,UAApD,EAAgElE,OAAhE,EAAyE;AAC9E,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CL,IAAAA,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvB,CAA0CuB,IAA1C,CAA+C,UAAAvB,OAAO,EAAI;AACxD,UAAMI,iBAAiB,GAAGJ,OAAO,CAACI,iBAAlC;;AACA,UAAIJ,OAAO,CAACgD,EAAZ,EAAgB;AACdF,QAAAA,aAAa,CACVC,mBADH,CACuBhD,OADvB,EACgCA,OAAO,CAACY,GAAR,EADhC,EAC+CX,OAAO,CAACgD,EADvD,EAEGzB,IAFH,CAEQ,UAAAuB,aAAa,EAAI;AACrB3B,UAAAA,sBAAsB,CAACC,QAAD,EAAWpB,OAAX,CAAtB,CAA0CuB,IAA1C,CAA+C,UAAAvB,OAAO,EAAI;AACxD,gBAAMmE,OAAO,GAAG,EAAhB;AACA,gBAAMjC,gBAAgB,GAAGlC,OAAO,CAACkC,gBAAjC;AACAgC,YAAAA,UAAU,CAAClC,OAAX,CAAmB,UAAAoC,IAAI,EAAI;AACzB;AACA,kBAAMC,EAAE,GACNjF,EAAE,CAACiB,GAAH,CAAOyC,aAAP,EAAsBsB,IAAtB,KACAhF,EAAE,CAACiB,GAAH,CAAOD,iBAAP,EAA0BgE,IAA1B,CADA,IAEAhF,EAAE,CAACiB,GAAH,CAAO6B,gBAAP,EAAyBkC,IAAzB,CAHF;;AAIA,kBAAIC,EAAJ,EAAQ;AACNF,gBAAAA,OAAO,CAACC,IAAI,CAACxD,GAAN,CAAP,GAAoB8C,IAAI,CAACW,EAAD,CAAxB;AACD;AACF,aATD;AAUAnE,YAAAA,OAAO,CAACiE,OAAD,CAAP;AACD,WAdD,EAcGhE,MAdH;AAeD,SAlBH,EAkBKA,MAlBL;AAmBD,OApBD,MAoBO;AACL;AACA,YAAMgE,OAAO,GAAG,EAAhB;AACAD,QAAAA,UAAU,CAAClC,OAAX,CAAmB,UAAAoC,IAAI,EAAI;AACzB,cAAMC,EAAE,GAAGjF,EAAE,CAACiB,GAAH,CAAOD,iBAAP,EAA0BgE,IAA1B,CAAX;;AACA,cAAIC,EAAJ,EAAQ;AACNF,YAAAA,OAAO,CAACC,IAAI,CAACxD,GAAN,CAAP,GAAoB8C,IAAI,CAACW,EAAD,CAAxB;AACD;AACF,SALD;AAMAnE,QAAAA,OAAO,CAACiE,OAAD,CAAP;AACD;AACF,KAjCD;AAkCD,GAnCM,CAAP;AAoCD,C,CAED","sourcesContent":["//                  Solid-UI preferences\n//                  =====================\n//\n\nimport * as debug from './debug'\n\nimport { authn } from './authn/index'\nimport { store } from './logic'\nimport * as ns from './ns'\nimport * as participation from './participation'// @ts-ignore\n\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport * as widgets from './widgets'\n\nconst kb = store\n\n// This was tabulator . preferences in the tabulator\n//  Is this functionality used anywhere?\n//\n\n// used for storing user name\n// @@ Deprocate these functions.  They were used for\n// communication around the tabulator functionality about the user session\n\nexport const value = []\nexport function get (k) {\n  return value[k]\n}\n\nexport function set (k, v) {\n  if (typeof v !== 'string') {\n    debug.log('Non-string value of preference ' + k + ': ' + v)\n    throw new Error('Non-string value of preference ' + k + ': ' + v)\n  }\n  this.value[k] = v\n}\n\n// In a solid world, Preferences are stored in the web\n//\n// Make an RDF node for recording the common view preferences for any object\n// (maybe make it in a separate file?)\nexport function recordSharedPreferences (subject, context) {\n  return new Promise(function (resolve, reject) {\n    const sharedPreferences = kb.any(subject, ns.ui('sharedPreferences'))\n    if (!sharedPreferences) {\n      const sp = $rdf.sym(subject.doc().uri + '#SharedPreferences')\n      const ins = [\n        $rdf.st(subject, ns.ui('sharedPreferences'), sp, subject.doc())\n      ]\n      debug.log('Creating shared preferences ' + sp)\n      kb.updater.update([], ins, function (uri, ok, errorMessage) {\n        if (!ok) {\n          reject(new Error('Error creating shared prefs: ' + errorMessage))\n        } else {\n          context.sharedPreferences = sp\n          resolve(context)\n        }\n      })\n    } else {\n      context.sharedPreferences = sharedPreferences\n      resolve(context)\n    }\n  })\n}\n\n// Construct a personal defaults node in the preferences file for a given class of object\n//\nexport function recordPersonalDefaults (theClass, context) {\n  return new Promise(function (resolve, reject) {\n    authn.logInLoadPreferences(context).then(\n      context => {\n        if (!context.preferencesFile) {\n          debug.log(\n            'Not doing private class preferences as no access to preferences file. ' +\n              context.preferencesFileError\n          )\n          return\n        }\n        const regs = kb.each(\n          null,\n          ns.solid('forClass'),\n          theClass,\n          context.preferencesFile\n        )\n        let ins = []\n        let prefs\n        let reg\n        if (regs.length) {\n          // Use existing node if we can\n          regs.forEach(r => {\n            prefs = prefs || kb.any(r, ns.solid('personalDefaults'))\n          })\n          if (prefs) {\n            context.personalDefaults = prefs // Found one\n            resolve(context)\n            return\n          } else {\n            prefs = widgets.newThing(context.preferencesFile)\n            reg = regs[0]\n          }\n        } else {\n          // no regs fo class\n          reg = widgets.newThing(context.preferencesFile)\n          ins = [\n            $rdf.st(\n              reg,\n              ns.rdf('type'),\n              ns.solid('TypeRegistration'),\n              context.preferencesFile\n            ),\n            $rdf.st(reg, ns.solid('forClass'), theClass, context.preferencesFile)\n          ]\n        }\n        prefs = widgets.newThing(context.preferencesFile)\n        ins.push(\n          $rdf.st(\n            reg,\n            ns.solid('personalDefaults'),\n            prefs,\n            context.preferencesFile\n          )\n        )\n        kb.updater.update([], ins, function (uri, ok, errm) {\n          if (!ok) {\n            reject(new Error('Setting preferences for ' + theClass + ': ' + errm))\n          } else {\n            context.personalDefaults = prefs\n            resolve(context)\n          }\n        })\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\nexport function renderPreferencesForm (subject, theClass, preferencesForm, context) {\n  const prefContainer = context.dom.createElement('div')\n  participation.participationObject(subject, subject.doc(), context.me).then(\n    participation => {\n      const dom = context.dom\n      function heading (text) {\n        prefContainer.appendChild(dom.createElement('h5')).textContent = text\n      }\n      heading('My view of this ' + context.noun)\n      widgets.appendForm(\n        dom,\n        prefContainer,\n        {},\n        participation,\n        preferencesForm,\n        subject.doc(),\n        (ok, mes) => {\n          if (!ok) widgets.complain(context, mes)\n        }\n      )\n\n      heading(\"Everyone's  view of this \" + context.noun)\n      recordSharedPreferences(subject, context).then(context => {\n        const sharedPreferences = context.sharedPreferences\n        widgets.appendForm(\n          dom,\n          prefContainer,\n          {},\n          sharedPreferences,\n          preferencesForm,\n          subject.doc(),\n          (ok, mes) => {\n            if (!ok) widgets.complain(context, mes)\n          }\n        )\n\n        heading('My default view of any ' + context.noun)\n        recordPersonalDefaults(theClass, context).then(\n          context => {\n            widgets.appendForm(\n              dom,\n              prefContainer,\n              {},\n              context.personalDefaults,\n              preferencesForm,\n              context.preferencesFile,\n              (ok, mes) => {\n                if (!ok) widgets.complain(context, mes)\n              }\n            )\n          },\n          err => {\n            widgets.complain(context, err)\n          }\n        )\n      })\n    },\n    err => {\n      // parp object fails\n      prefContainer.appendChild(widgets.errorMessageBlock(context.dom, err))\n    }\n  )\n  return prefContainer\n}\n\n// This should be part of rdflib.js ad part of the RDFJS Standard!!\n\nfunction toJS (term) {\n  if (!term.datatype) return term // Objects remain objects\n  if (term.datatype.equals(ns.xsd('boolean'))) {\n    return term.value === '1'\n  }\n  if (\n    term.datatype.equals(ns.xsd('dateTime')) ||\n    term.datatype.equals(ns.xsd('date'))\n  ) {\n    return new Date(term.value)\n  }\n  if (\n    term.datatype.equals(ns.xsd('integer')) ||\n    term.datatype.equals(ns.xsd('float')) ||\n    term.datatype.equals(ns.xsd('decimal'))\n  ) {\n    return Number(term.value)\n  }\n  return term.value\n}\n\n// This is the function which acuakly reads and combines the preferences\n//\n//  @@ make it much more tolerant of missing buts of prefernces\nexport function getPreferencesForClass (subject, theClass, predicates, context) {\n  return new Promise(function (resolve, reject) {\n    recordSharedPreferences(subject, context).then(context => {\n      const sharedPreferences = context.sharedPreferences\n      if (context.me) {\n        participation\n          .participationObject(subject, subject.doc(), context.me)\n          .then(participation => {\n            recordPersonalDefaults(theClass, context).then(context => {\n              const results = []\n              const personalDefaults = context.personalDefaults\n              predicates.forEach(pred => {\n                // Order of preference: My settings on object, Global settings on object, my settings on class\n                const v1 =\n                  kb.any(participation, pred) ||\n                  kb.any(sharedPreferences, pred) ||\n                  kb.any(personalDefaults, pred)\n                if (v1) {\n                  results[pred.uri] = toJS(v1)\n                }\n              })\n              resolve(results)\n            }, reject)\n          }, reject)\n      } else {\n        // no user defined, just use common prefs\n        const results = []\n        predicates.forEach(pred => {\n          const v1 = kb.any(sharedPreferences, pred)\n          if (v1) {\n            results[pred.uri] = toJS(v1)\n          }\n        })\n        resolve(results)\n      }\n    })\n  })\n}\n\n// ends\n"],"file":"preferences.js"}