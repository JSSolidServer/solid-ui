{"version":3,"file":"log.js","names":["TERROR","TWARN","TMESG","TSUCCESS","TINFO","TDEBUG","TALL","LogLevel","_level","_ascending","_dom","document","_window","window","log","str","type","typestr","logArea","getElementById","addendum","createElement","setAttribute","now","Date","innerHTML","getHours","getMinutes","getSeconds","escapeForXML","insertBefore","firstChild","appendChild","console","msg","message","warn","debug","info","error","success","alert","clear","setLevel","level","dumpHTML","body","logAscending","logDescending","replace","setInternals"],"sources":["../src/log.ts"],"sourcesContent":["// ///////////////////////  Logging\n//\n// bitmask levels\n// const TNONE = 0\n/** @internal */\nconst TERROR = 1\n/** @internal */\nconst TWARN = 2\n/** @internal */\nconst TMESG = 4\n/** @internal */\nconst TSUCCESS = 8\n/** @internal */\nconst TINFO = 16\n/** @internal */\nconst TDEBUG = 32\n/** @internal */\nconst TALL = 63\n\n/** @internal */\nexport enum LogLevel {\n  Error = TERROR,\n  Warning = TWARN,\n  Message = TMESG,\n  Success = TSUCCESS,\n  Info = TINFO,\n  Debug = TDEBUG,\n  All = TALL\n}\n\n/** @internal */\nlet _level: number = TERROR + TWARN + TMESG\n/** @internal */\nlet _ascending: boolean = false\n/** @internal */\nlet _dom: HTMLDocument = document // must be able to override for tests\n/** @internal */\nlet _window: Window = window // must be able to override for tests\n\n/** @internal */\nfunction log (str: string, type: number = TMESG, typestr: string = 'mesg') {\n  if (!(_level & type)) return // bitmask\n\n  if (typeof _dom !== 'undefined') {\n    const logArea = _dom.getElementById('status')\n    if (!logArea) return\n\n    const addendum = _dom.createElement('span')\n    addendum.setAttribute('class', typestr)\n    const now = new Date()\n    addendum.innerHTML = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()} [${typestr}] ${escapeForXML(str)}<br/>`\n    if (_ascending) {\n      logArea.insertBefore(addendum, logArea.firstChild)\n    } else {\n      logArea.appendChild(addendum)\n    }\n  } else if (typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console.log(str)\n  }\n}\n\n/**\n * Adds a message to the element with id \"status\". The messages are prepended with\n * time and type of message, in this case [mesg].\n */\nexport function msg (message: string) {\n  log(message)\n}\n\n/**\n * Adds a warning message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [warn].\n */\nexport function warn (message: string): void {\n  log(message, TWARN, 'warn')\n}\n\n/**\n * Adds a debugging message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [dbug].\n */\nexport function debug (message: string): void {\n  log(message, TDEBUG, 'dbug')\n}\n\n/**\n * Adds a info message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [info].\n */\nexport function info (message: string): void {\n  log(message, TINFO, 'info')\n}\n\n/**\n * Adds a error to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [eror].\n */\nexport function error (message: string): void {\n  log(message, TERROR, 'eror')\n}\n\n/**\n * Adds a success message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [good].\n */\nexport function success (message: string): void {\n  log(message, TSUCCESS, 'good')\n}\n\n/**\n * Uses the global alert to send an alert. If global alert is not available, it\n * will output the message using the method [[warning]]s.\n */\nexport function alert (message: string): void {\n  if (_window && typeof _window.alert !== 'undefined') {\n    _window.alert(message)\n  } else {\n    warn(message)\n  }\n}\n\n/**\n * Will clear the content of the element with id \"status\".\n */\nexport function clear (): void {\n  const logArea = _dom?.getElementById('status')\n  if (!logArea) return\n  logArea.innerHTML = ''\n}\n\n/**\n * Lets you configure which types of messages will be shown. The module uses\n * [bitmask](https://en.wikipedia.org/wiki/Mask_(computing)) to filter which\n * types of messages should be shown. E.g. if you only want warning messages\n * to be shown, pass 2 to the function, if you want warning and success to be\n * shown, pass 10 (2+8). By passing the sum of all, 63, you'll show all\n * types of messages.\n *\n * - Error: 1\n * - Warning: 2\n * - Message: 4\n * - Success: 8\n * - Info: 16\n * - Debug: 32\n */\nexport function setLevel (level: number): void {\n  _level = TALL\n  debug('Log level is now ' + level)\n  _level = level\n}\n\n/**\n * Will dump the current HTML using the [[debug]] method.\n */\nexport function dumpHTML (): void {\n  if (!_dom) return\n  const level = _level\n  _level = TALL\n  debug(_dom?.body?.innerHTML || '')\n  _level = level\n}\n\n/**\n * Will start prepending messages the list of log messages.\n */\nexport function logAscending () {\n  _ascending = true\n}\n\n/**\n * Will start appending messages the list of log messages. (This is default\n * behavior.)\n */\nexport function logDescending () {\n  _ascending = false\n}\n\n/** @internal */\nexport function escapeForXML (str: string): string {\n  // can be replaced with function utils module when migrating\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\n/** @internal */\nexport function setInternals (window, document) {\n  _window = window\n  _dom = document\n}\n"],"mappings":"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"}