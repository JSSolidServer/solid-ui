{"version":3,"file":"log.js","names":["TERROR","TWARN","TMESG","TSUCCESS","TINFO","TDEBUG","TALL","LogLevel","_level","_ascending","_dom","document","_window","window","log","str","type","typestr","logArea","getElementById","addendum","createElement","setAttribute","now","Date","innerHTML","getHours","getMinutes","getSeconds","escapeForXML","insertBefore","firstChild","appendChild","console","msg","message","warn","debug","info","error","success","alert","clear","setLevel","level","dumpHTML","body","logAscending","logDescending","replace","setInternals"],"sources":["../src/log.ts"],"sourcesContent":["// ///////////////////////  Logging\n//\n// bitmask levels\n// const TNONE = 0\n/** @internal */\nconst TERROR = 1\n/** @internal */\nconst TWARN = 2\n/** @internal */\nconst TMESG = 4\n/** @internal */\nconst TSUCCESS = 8\n/** @internal */\nconst TINFO = 16\n/** @internal */\nconst TDEBUG = 32\n/** @internal */\nconst TALL = 63\n\n/** @internal */\nexport enum LogLevel {\n  Error = TERROR,\n  Warning = TWARN,\n  Message = TMESG,\n  Success = TSUCCESS,\n  Info = TINFO,\n  Debug = TDEBUG,\n  All = TALL\n}\n\n/** @internal */\nlet _level: number = TERROR + TWARN + TMESG\n/** @internal */\nlet _ascending: boolean = false\n/** @internal */\nlet _dom: HTMLDocument = document // must be able to override for tests\n/** @internal */\nlet _window: Window = window // must be able to override for tests\n\n/** @internal */\nfunction log (str: string, type: number = TMESG, typestr: string = 'mesg') {\n  if (!(_level & type)) return // bitmask\n\n  if (typeof _dom !== 'undefined') {\n    const logArea = _dom.getElementById('status')\n    if (!logArea) return\n\n    const addendum = _dom.createElement('span')\n    addendum.setAttribute('class', typestr)\n    const now = new Date()\n    addendum.innerHTML = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()} [${typestr}] ${escapeForXML(str)}<br/>`\n    if (_ascending) {\n      logArea.insertBefore(addendum, logArea.firstChild)\n    } else {\n      logArea.appendChild(addendum)\n    }\n  } else if (typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console.log(str)\n  }\n}\n\n/**\n * Adds a message to the element with id \"status\". The messages are prepended with\n * time and type of message, in this case [mesg].\n */\nexport function msg (message: string) {\n  log(message)\n}\n\n/**\n * Adds a warning message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [warn].\n */\nexport function warn (message: string): void {\n  log(message, TWARN, 'warn')\n}\n\n/**\n * Adds a debugging message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [dbug].\n */\nexport function debug (message: string): void {\n  log(message, TDEBUG, 'dbug')\n}\n\n/**\n * Adds a info message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [info].\n */\nexport function info (message: string): void {\n  log(message, TINFO, 'info')\n}\n\n/**\n * Adds a error to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [eror].\n */\nexport function error (message: string): void {\n  log(message, TERROR, 'eror')\n}\n\n/**\n * Adds a success message to the element with id \"status\". The messages are\n * prepended with time and type of message, in this case [good].\n */\nexport function success (message: string): void {\n  log(message, TSUCCESS, 'good')\n}\n\n/**\n * Uses the global alert to send an alert. If global alert is not available, it\n * will output the message using the method [[warning]]s.\n */\nexport function alert (message: string): void {\n  if (_window && typeof _window.alert !== 'undefined') {\n    _window.alert(message)\n  } else {\n    warn(message)\n  }\n}\n\n/**\n * Will clear the content of the element with id \"status\".\n */\nexport function clear (): void {\n  const logArea = _dom?.getElementById('status')\n  if (!logArea) return\n  logArea.innerHTML = ''\n}\n\n/**\n * Lets you configure which types of messages will be shown. The module uses\n * [bitmask](https://en.wikipedia.org/wiki/Mask_(computing)) to filter which\n * types of messages should be shown. E.g. if you only want warning messages\n * to be shown, pass 2 to the function, if you want warning and success to be\n * shown, pass 10 (2+8). By passing the sum of all, 63, you'll show all\n * types of messages.\n *\n * - Error: 1\n * - Warning: 2\n * - Message: 4\n * - Success: 8\n * - Info: 16\n * - Debug: 32\n */\nexport function setLevel (level: number): void {\n  _level = TALL\n  debug('Log level is now ' + level)\n  _level = level\n}\n\n/**\n * Will dump the current HTML using the [[debug]] method.\n */\nexport function dumpHTML (): void {\n  if (!_dom) return\n  const level = _level\n  _level = TALL\n  debug(_dom?.body?.innerHTML || '')\n  _level = level\n}\n\n/**\n * Will start prepending messages the list of log messages.\n */\nexport function logAscending () {\n  _ascending = true\n}\n\n/**\n * Will start appending messages the list of log messages. (This is default\n * behavior.)\n */\nexport function logDescending () {\n  _ascending = false\n}\n\n/** @internal */\nexport function escapeForXML (str: string): string {\n  // can be replaced with function utils module when migrating\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\n/** @internal */\nexport function setInternals (window, document) {\n  _window = window\n  _dom = document\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AACA;AACA,IAAMA,MAAM,GAAG,CAAf;AACA;;AACA,IAAMC,KAAK,GAAG,CAAd;AACA;;AACA,IAAMC,KAAK,GAAG,CAAd;AACA;;AACA,IAAMC,QAAQ,GAAG,CAAjB;AACA;;AACA,IAAMC,KAAK,GAAG,EAAd;AACA;;AACA,IAAMC,MAAM,GAAG,EAAf;AACA;;AACA,IAAMC,IAAI,GAAG,EAAb;AAEA;;IACYC,Q;AAUZ;;;;WAVYA,Q;EAAAA,Q,CAAAA,Q,YACFP,M;EADEO,Q,CAAAA,Q,cAEAN,K;EAFAM,Q,CAAAA,Q,cAGAL,K;EAHAK,Q,CAAAA,Q,cAIAJ,Q;EAJAI,Q,CAAAA,Q,WAKHH,K;EALGG,Q,CAAAA,Q,YAMFF,M;EANEE,Q,CAAAA,Q,UAOJD,I;GAPIC,Q,wBAAAA,Q;;AAWZ,IAAIC,MAAc,GAAGR,MAAM,GAAGC,KAAT,GAAiBC,KAAtC;AACA;;;AACA,IAAIO,UAAmB,GAAG,KAA1B;AACA;;AACA,IAAIC,IAAkB,GAAGC,QAAzB,C,CAAkC;;AAClC;;AACA,IAAIC,OAAe,GAAGC,MAAtB,C,CAA6B;;AAE7B;;AACA,SAASC,GAAT,CAAcC,GAAd,EAA2E;EAAA,IAAhDC,IAAgD,uEAAjCd,KAAiC;EAAA,IAA1Be,OAA0B,uEAAR,MAAQ;EACzE,IAAI,EAAET,MAAM,GAAGQ,IAAX,CAAJ,EAAsB,OADmD,CAC5C;;EAE7B,IAAI,OAAON,IAAP,KAAgB,WAApB,EAAiC;IAC/B,IAAMQ,OAAO,GAAGR,IAAI,CAACS,cAAL,CAAoB,QAApB,CAAhB;;IACA,IAAI,CAACD,OAAL,EAAc;;IAEd,IAAME,QAAQ,GAAGV,IAAI,CAACW,aAAL,CAAmB,MAAnB,CAAjB;;IACAD,QAAQ,CAACE,YAAT,CAAsB,OAAtB,EAA+BL,OAA/B;IACA,IAAMM,GAAG,GAAG,IAAIC,IAAJ,EAAZ;IACAJ,QAAQ,CAACK,SAAT,aAAwBF,GAAG,CAACG,QAAJ,EAAxB,cAA0CH,GAAG,CAACI,UAAJ,EAA1C,cAA8DJ,GAAG,CAACK,UAAJ,EAA9D,eAAmFX,OAAnF,eAA+FY,YAAY,CAACd,GAAD,CAA3G;;IACA,IAAIN,UAAJ,EAAgB;MACdS,OAAO,CAACY,YAAR,CAAqBV,QAArB,EAA+BF,OAAO,CAACa,UAAvC;IACD,CAFD,MAEO;MACLb,OAAO,CAACc,WAAR,CAAoBZ,QAApB;IACD;EACF,CAbD,MAaO,IAAI,OAAOa,OAAP,KAAmB,WAAvB,EAAoC;IACzC;IACAA,OAAO,CAACnB,GAAR,CAAYC,GAAZ;EACD;AACF;AAED;AACA;AACA;AACA;;;AACO,SAASmB,GAAT,CAAcC,OAAd,EAA+B;EACpCrB,GAAG,CAACqB,OAAD,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASC,IAAT,CAAeD,OAAf,EAAsC;EAC3CrB,GAAG,CAACqB,OAAD,EAAUlC,KAAV,EAAiB,MAAjB,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASoC,KAAT,CAAgBF,OAAhB,EAAuC;EAC5CrB,GAAG,CAACqB,OAAD,EAAU9B,MAAV,EAAkB,MAAlB,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASiC,IAAT,CAAeH,OAAf,EAAsC;EAC3CrB,GAAG,CAACqB,OAAD,EAAU/B,KAAV,EAAiB,MAAjB,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASmC,KAAT,CAAgBJ,OAAhB,EAAuC;EAC5CrB,GAAG,CAACqB,OAAD,EAAUnC,MAAV,EAAkB,MAAlB,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASwC,OAAT,CAAkBL,OAAlB,EAAyC;EAC9CrB,GAAG,CAACqB,OAAD,EAAUhC,QAAV,EAAoB,MAApB,CAAH;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASsC,KAAT,CAAgBN,OAAhB,EAAuC;EAC5C,IAAIvB,OAAO,IAAI,OAAOA,OAAO,CAAC6B,KAAf,KAAyB,WAAxC,EAAqD;IACnD7B,OAAO,CAAC6B,KAAR,CAAcN,OAAd;EACD,CAFD,MAEO;IACLC,IAAI,CAACD,OAAD,CAAJ;EACD;AACF;AAED;AACA;AACA;;;AACO,SAASO,KAAT,GAAwB;EAAA;;EAC7B,IAAMxB,OAAO,YAAGR,IAAH,0CAAG,MAAMS,cAAN,CAAqB,QAArB,CAAhB;EACA,IAAI,CAACD,OAAL,EAAc;EACdA,OAAO,CAACO,SAAR,GAAoB,EAApB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASkB,QAAT,CAAmBC,KAAnB,EAAwC;EAC7CpC,MAAM,GAAGF,IAAT;EACA+B,KAAK,CAAC,sBAAsBO,KAAvB,CAAL;EACApC,MAAM,GAAGoC,KAAT;AACD;AAED;AACA;AACA;;;AACO,SAASC,QAAT,GAA2B;EAAA;;EAChC,IAAI,CAACnC,IAAL,EAAW;EACX,IAAMkC,KAAK,GAAGpC,MAAd;EACAA,MAAM,GAAGF,IAAT;EACA+B,KAAK,CAAC,UAAA3B,IAAI,UAAJ,oDAAMoC,IAAN,0DAAYrB,SAAZ,KAAyB,EAA1B,CAAL;EACAjB,MAAM,GAAGoC,KAAT;AACD;AAED;AACA;AACA;;;AACO,SAASG,YAAT,GAAyB;EAC9BtC,UAAU,GAAG,IAAb;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASuC,aAAT,GAA0B;EAC/BvC,UAAU,GAAG,KAAb;AACD;AAED;;;AACO,SAASoB,YAAT,CAAuBd,GAAvB,EAA4C;EACjD;EACA,OAAOA,GAAG,CACPkC,OADI,CACI,IADJ,EACU,OADV,EAEJA,OAFI,CAEI,IAFJ,EAEU,MAFV,EAGJA,OAHI,CAGI,IAHJ,EAGU,MAHV,CAAP;AAID;AAED;;;AACO,SAASC,YAAT,CAAuBrC,MAAvB,EAA+BF,QAA/B,EAAyC;EAC9CC,OAAO,GAAGC,MAAV;EACAH,IAAI,GAAGC,QAAP;AACD"}