{"version":3,"sources":["../../../../src/widgets/forms/autocomplete/autocompleteBar.ts"],"names":["WEBID_NOUN","GREEN_PLUS","icons","iconBase","SEARCH_ICON","EDIT_ICON","renderAutocompleteControl","dom","person","barOptions","acOptions","addOneIdAndRefresh","deleteOne","autoCompleteDone","greenButtonHandler","removeDecorated","displayAutocomplete","searchButtonHandler","droppedURIHandler","syncEditingStatus","editing","editButton","acceptButton","cancelButton","uris","webid","_event","decoratedAutocomplete","creationArea","removeChild","undefined","createElement","setAttribute","decoration","appendChild","deleteButtonContainer","widgets","askName","store","ns","vcard","object","name","permanent","continueButton","noun","targetClass","utils","label","deleteButton","deleteButtonWithCheck","button","style","display","flexDirection","currentObject","editable","width","manualURIEntry","plus","idNoun","makeDropTarget","dbLookup"],"mappings":"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","sourcesContent":["/* The Autocomplete Control with decorations\n\nThis control has the buttons which control the state between editing, viewing, searching, accepting\nand so on.  See the state diagram in the documentation.  The AUtocomplete Picker does the main work.\n\n*/\nimport * as ns from '../../../ns'\nimport { icons } from '../../../iconBase'\nimport { store } from '../../../logic'\nimport * as widgets from '../../../widgets'\nimport * as utils from '../../../utils'\n\nimport { renderAutoComplete, AutocompleteDecoration, setVisible } from './autocompletePicker' // dbpediaParameters\n\nimport { NamedNode } from 'rdflib'\n\nconst WEBID_NOUN = 'Solid ID'\n\nconst GREEN_PLUS = icons.iconBase + 'noun_34653_green.svg'\nconst SEARCH_ICON = icons.iconBase + 'noun_Search_875351.svg'\nconst EDIT_ICON = icons.iconBase + 'noun_253504.svg'\n// const DELETE_ICON = icons.iconBase + 'noun_2188_red.svg'\n\nexport async function renderAutocompleteControl (dom:HTMLDocument,\n  person:NamedNode,\n  barOptions,\n  acOptions,\n  addOneIdAndRefresh,\n  deleteOne): Promise<HTMLElement> {\n  async function autoCompleteDone (object, name) {\n    if (acOptions.permanent) { // remember to set this in publicid panel\n      setVisible(editButton, true)\n      setVisible(acceptButton, false)\n      setVisible(cancelButton, false)\n    } else {\n      // console.log('temporary - removed decoratiion')\n      removeDecorated()\n    }\n    return addOneIdAndRefresh(object, name)\n  }\n\n  async function greenButtonHandler (_event) {\n    const webid = await widgets.askName(dom, store, creationArea, ns.vcard('url'), undefined, WEBID_NOUN)\n    if (!webid) {\n      return // cancelled by user\n    }\n    return addOneIdAndRefresh(person, webid)\n  }\n\n  function removeDecorated () {\n    if (decoratedAutocomplete) {\n      creationArea.removeChild(decoratedAutocomplete)\n      decoratedAutocomplete = undefined\n    }\n  }\n\n  async function displayAutocomplete () {\n    decoratedAutocomplete = dom.createElement('div') as HTMLElement\n    decoratedAutocomplete.setAttribute('style', 'display: flex; flex-flow: wrap;')\n    decoratedAutocomplete.appendChild(await renderAutoComplete(dom, acOptions, decoration, autoCompleteDone))\n    // console.log('@@ acceptButton', acceptButton)\n    decoratedAutocomplete.appendChild(acceptButton)\n    // console.log('@@ cancelButton', cancelButton)\n\n    decoratedAutocomplete.appendChild(cancelButton)\n    // console.log('@@ editButton', editButton)\n\n    decoratedAutocomplete.appendChild(editButton)\n    // console.log('@@ deleteButtonContainer', deleteButtonContainer)\n\n    decoratedAutocomplete.appendChild(deleteButtonContainer)\n    creationArea.appendChild(decoratedAutocomplete)\n  }\n\n  async function searchButtonHandler (_event) {\n    if (decoratedAutocomplete) {\n      creationArea.removeChild(decoratedAutocomplete)\n      decoratedAutocomplete = undefined\n    } else {\n      await displayAutocomplete()\n    }\n  }\n\n  async function droppedURIHandler (uris) {\n    for (const webid of uris) { // normally one but can be more than one\n      await addOneIdAndRefresh(person, webid)\n    }\n  }\n\n  const acceptButton = widgets.continueButton(dom)\n  acceptButton.setAttribute('data-testid', 'accept-button')\n\n  const cancelButton = widgets.cancelButton(dom)\n  cancelButton.setAttribute('data-testid', 'cancel-button')\n  const deleteButtonContainer = dom.createElement('div')\n  const noun = acOptions.targetClass ? utils.label(acOptions.targetClass) : 'item'\n  const deleteButton = widgets.deleteButtonWithCheck(dom, deleteButtonContainer, noun, deleteOne) // need to knock out this UI or caller does that\n  deleteButton.setAttribute('data-testid', 'delete-button')\n  const editButton = widgets.button(dom, EDIT_ICON, 'Edit', _event => {\n    editing = !editing\n    syncEditingStatus()\n  })\n  editButton.setAttribute('data-testid', 'edit-button')\n  let editing = true\n\n  function syncEditingStatus () {\n    if (editing) {\n      setVisible(editButton, false)\n      setVisible(acceptButton, false) // not till got it\n      setVisible(cancelButton, false)\n    } else {\n      setVisible(editButton, true)\n      setVisible(acceptButton, false)\n      setVisible(cancelButton, false)\n    }\n  }\n\n  const decoration:AutocompleteDecoration = {\n    acceptButton, cancelButton, editButton, deleteButton\n  }\n\n  let decoratedAutocomplete = undefined as HTMLElement | undefined\n\n  const creationArea = dom.createElement('div')\n  creationArea.style.display = 'flex'\n  creationArea.style.flexDirection = 'row'\n\n  if (acOptions.permanent || acOptions.currentObject) {\n    await displayAutocomplete()\n  }\n  if (barOptions.editable) {\n    // creationArea.appendChild(await renderAutoComplete(dom, barOptions, autoCompleteDone)) wait for searchButton\n    creationArea.style.width = '100%'\n    if (barOptions.manualURIEntry) {\n      const plus = creationArea.appendChild(widgets.button(dom, GREEN_PLUS, barOptions.idNoun, greenButtonHandler))\n      widgets.makeDropTarget(plus, droppedURIHandler, undefined)\n    }\n    if (barOptions.dbLookup && !acOptions.currentObject && !acOptions.permanent) {\n      creationArea.appendChild(widgets.button(dom, SEARCH_ICON, barOptions.idNoun, searchButtonHandler))\n    }\n  }\n  syncEditingStatus()\n  return creationArea\n} // renderAutocompleteControl\n\n// ends\n"],"file":"autocompleteBar.js"}