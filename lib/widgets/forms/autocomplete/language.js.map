{"version":3,"file":"language.js","names":["languageCodeURIBase","defaultPreferredLanguages","addDefaults","array","concat","filter","code","includes","getPreferredLanguagesFor","person","doc","store","fetcher","load","list","any","ns","schema","languageCodeArray","elements","forEach","item","lang","solid","console","warn","value","startsWith","error","slice","length","push","log","join","getPreferredLanguages","authn","currentUser","me","solidLanguagePrefs","navigator","languages","map","longForm","split","language","filterByLanguage","bindings","languagePrefs","uris","binding","uri","subject","languagePrefs2","reverse","slimmed","u","sortMe","name","index","indexOf","pair","sort","debug"],"sources":["../../../../src/widgets/forms/autocomplete/language.ts"],"sourcesContent":["/* Logic to access public data stores\n*\n* including filtering resut by natural language etc\n* See https://solidos.solidcommunity.net/public/2021/01%20Building%20Solid%20Apps%20which%20use%20Public%20Data.html\n*/\n/* eslint-disable no-console */\nimport * as debug from '../../../debug'\n// import * as logic from '../index'\n// import { authn } from '../../../authn/index'\nimport { authn, store } from 'solid-logic'\nimport * as ns from '../../../ns'\nimport { Collection, NamedNode, Node } from 'rdflib'\n// import { Binding } from '../widgets/forms/autocomplete/publicData'\n// import { nativeNameForLanguageCode, englishNameForLanguageCode } from './nativeNameForLanguageCode'\n\n// const { currentUser } = logic.authn\n\nexport interface Binding {\n  subject: Node;\n  name?: Node\n  location?: Node\n  coordinates?: Node\n}\n\nexport const languageCodeURIBase = 'https://www.w3.org/ns/iana/language-code/' /// @@ unsupported on the web (2021)\n\nexport const defaultPreferredLanguages = ['en', 'fr', 'de', 'it', 'ar']\n\nexport function addDefaults (array) {\n  if (!array) array = []\n  return array.concat(defaultPreferredLanguages.filter(code => !array.includes(code)))\n}\n\nexport async function getPreferredLanguagesFor (person: NamedNode) {\n  const doc = person.doc()\n  await store.fetcher?.load(doc)\n  const list = store.any(person, ns.schema('knowsLanguage'), null, doc) as Collection | undefined\n  if (!list) {\n    // console.log(`User ${person} has not set their languages in their profile.`)\n    return defaultPreferredLanguages\n  }\n  const languageCodeArray: string[] = []\n  list.elements.forEach(item => {\n    // console.log('@@ item ' + item)\n    const lang = store.any(item as any, ns.solid('publicId'), null, doc)\n    if (!lang) {\n      console.warn('getPreferredLanguages: No publiID of language.')\n      return\n    }\n    if (!lang.value.startsWith(languageCodeURIBase)) {\n      console.error(`What should be a language code ${lang.value} does not start with ${languageCodeURIBase}`)\n      return\n    }\n    const code = lang.value.slice(languageCodeURIBase.length)\n    languageCodeArray.push(code)\n  })\n\n  if (languageCodeArray.length > 0) {\n    console.log(`     User knows languages with codes: \"${languageCodeArray.join(',')}\"`)\n    return addDefaults(languageCodeArray)\n  }\n  return null\n}\n/* Get the preferred langauges for the user\n *\n *  Either from solid preferences or browser preferences or default\n */\nexport async function getPreferredLanguages () {\n  // In future:  cache in the login session for speed, but get from profile and private prefs\n  // We append the defaults so if someone's first choice is not available they don't get something very obscure\n  // See https://github.com/solidos/solidos/issues/42\n  const me = await authn.currentUser() as NamedNode\n  if (me) { // If logged in\n    const solidLanguagePrefs = await getPreferredLanguagesFor(me)\n    if (solidLanguagePrefs) return solidLanguagePrefs\n  }\n  if (typeof navigator !== 'undefined') { // use browser settings\n    if (navigator.languages) {\n      return addDefaults(navigator.languages.map(longForm => longForm.split('-')[0]))\n    }\n    if (navigator.language) {\n      return addDefaults([navigator.language.split('-')[0]])\n    }\n  }\n  return defaultPreferredLanguages\n}\n\n/* From an array of bindings with a names for each row,\n * remove dupliacte names for the same thing, leaving the user's\n * preferred language version\n*/\n\nexport function filterByLanguage (bindings, languagePrefs) {\n  const uris = {}\n  bindings.forEach(binding => { // Organize names by their subject\n    const uri = binding.subject.value\n    uris[uri] = uris[uri] || []\n    uris[uri].push(binding)\n  })\n\n  const languagePrefs2 = languagePrefs || defaultPreferredLanguages\n  languagePrefs2.reverse() // Preferred last\n\n  const slimmed = ([] as Array<Binding>)\n  // console.log(` @@ {languagePrefs2 ${languagePrefs2}`)\n  for (const u in uris) { // needs hasOwnProperty ?\n    const bindings = uris[u]\n    const sortMe = bindings.map(binding => {\n      const lang = binding.name['xml:lang']\n      const index = languagePrefs2.indexOf(lang)\n      const pair = [index, binding]\n      // console.log(`   @@ lang: ${lang}, index: ${index}`)\n      return pair\n    })\n    sortMe.sort() // best at th ebottom\n    sortMe.reverse() // best at the top\n    // console.debug('@@ sortMe:', sortMe)\n    slimmed.push((sortMe[0][1] as any))\n  } // map u\n  debug.log(` Filter by language: ${bindings.length} -> ${slimmed.length}`)\n  return slimmed\n}\n"],"mappings":"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"}