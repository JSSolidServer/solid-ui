{"version":3,"file":"language.js","names":["languageCodeURIBase","defaultPreferredLanguages","addDefaults","array","concat","filter","code","includes","getPreferredLanguagesFor","person","doc","store","fetcher","load","list","any","ns","schema","languageCodeArray","elements","forEach","item","lang","solid","console","warn","value","startsWith","error","slice","length","push","log","join","getPreferredLanguages","authn","currentUser","me","solidLanguagePrefs","navigator","languages","map","longForm","split","language","filterByLanguage","bindings","languagePrefs","uris","binding","uri","subject","languagePrefs2","reverse","slimmed","u","sortMe","name","index","indexOf","pair","sort","debug"],"sources":["../../../../src/widgets/forms/autocomplete/language.ts"],"sourcesContent":["/* Logic to access public data stores\n*\n* including filtering resut by natural language etc\n* See https://solidos.solidcommunity.net/public/2021/01%20Building%20Solid%20Apps%20which%20use%20Public%20Data.html\n*/\n/* eslint-disable no-console */\nimport * as debug from '../../../debug'\n// import * as logic from '../index'\n// import { authn } from '../../../authn/index'\nimport { authn, store } from 'solid-logic'\nimport * as ns from '../../../ns'\nimport { Collection, NamedNode, Node } from 'rdflib'\n// import { Binding } from '../widgets/forms/autocomplete/publicData'\n// import { nativeNameForLanguageCode, englishNameForLanguageCode } from './nativeNameForLanguageCode'\n\n// const { currentUser } = logic.authn\n\nexport interface Binding {\n  subject: Node;\n  name?: Node\n  location?: Node\n  coordinates?: Node\n}\n\nexport const languageCodeURIBase = 'https://www.w3.org/ns/iana/language-code/' /// @@ unsupported on the web (2021)\n\nexport const defaultPreferredLanguages = ['en', 'fr', 'de', 'it', 'ar']\n\nexport function addDefaults (array) {\n  if (!array) array = []\n  return array.concat(defaultPreferredLanguages.filter(code => !array.includes(code)))\n}\n\nexport async function getPreferredLanguagesFor (person: NamedNode) {\n  const doc = person.doc()\n  await store.fetcher?.load(doc)\n  const list = store.any(person, ns.schema('knowsLanguage'), null, doc) as Collection | undefined\n  if (!list) {\n    // console.log(`User ${person} has not set their languages in their profile.`)\n    return defaultPreferredLanguages\n  }\n  const languageCodeArray: string[] = []\n  list.elements.forEach(item => {\n    // console.log('@@ item ' + item)\n    const lang = store.any(item as any, ns.solid('publicId'), null, doc)\n    if (!lang) {\n      console.warn('getPreferredLanguages: No publiID of language.')\n      return\n    }\n    if (!lang.value.startsWith(languageCodeURIBase)) {\n      console.error(`What should be a language code ${lang.value} does not start with ${languageCodeURIBase}`)\n      return\n    }\n    const code = lang.value.slice(languageCodeURIBase.length)\n    languageCodeArray.push(code)\n  })\n\n  if (languageCodeArray.length > 0) {\n    console.log(`     User knows languages with codes: \"${languageCodeArray.join(',')}\"`)\n    return addDefaults(languageCodeArray)\n  }\n  return null\n}\n/* Get the preferred langauges for the user\n *\n *  Either from solid preferences or browser preferences or default\n */\nexport async function getPreferredLanguages () {\n  // In future:  cache in the login session for speed, but get from profile and private prefs\n  // We append the defaults so if someone's first choice is not available they don't get something very obscure\n  // See https://github.com/solidos/solidos/issues/42\n  const me = await authn.currentUser() as NamedNode\n  if (me) { // If logged in\n    const solidLanguagePrefs = await getPreferredLanguagesFor(me)\n    if (solidLanguagePrefs) return solidLanguagePrefs\n  }\n  if (typeof navigator !== 'undefined') { // use browser settings\n    if (navigator.languages) {\n      return addDefaults(navigator.languages.map(longForm => longForm.split('-')[0]))\n    }\n    if (navigator.language) {\n      return addDefaults([navigator.language.split('-')[0]])\n    }\n  }\n  return defaultPreferredLanguages\n}\n\n/* From an array of bindings with a names for each row,\n * remove dupliacte names for the same thing, leaving the user's\n * preferred language version\n*/\n\nexport function filterByLanguage (bindings, languagePrefs) {\n  const uris = {}\n  bindings.forEach(binding => { // Organize names by their subject\n    const uri = binding.subject.value\n    uris[uri] = uris[uri] || []\n    uris[uri].push(binding)\n  })\n\n  const languagePrefs2 = languagePrefs || defaultPreferredLanguages\n  languagePrefs2.reverse() // Preferred last\n\n  const slimmed = ([] as Array<Binding>)\n  // console.log(` @@ {languagePrefs2 ${languagePrefs2}`)\n  for (const u in uris) { // needs hasOwnProperty ?\n    const bindings = uris[u]\n    const sortMe = bindings.map(binding => {\n      const lang = binding.name['xml:lang']\n      const index = languagePrefs2.indexOf(lang)\n      const pair = [index, binding]\n      // console.log(`   @@ lang: ${lang}, index: ${index}`)\n      return pair\n    })\n    sortMe.sort() // best at th ebottom\n    sortMe.reverse() // best at the top\n    // console.debug('@@ sortMe:', sortMe)\n    slimmed.push((sortMe[0][1] as any))\n  } // map u\n  debug.log(` Filter by language: ${bindings.length} -> ${slimmed.length}`)\n  return slimmed\n}\n"],"mappings":"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"}