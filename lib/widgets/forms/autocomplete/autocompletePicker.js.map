{"version":3,"file":"autocompletePicker.js","names":["AUTOCOMPLETE_THRESHOLD","AUTOCOMPLETE_ROWS","AUTOCOMPLETE_ROWS_STRETCH","setVisible","element","visible","style","display","renderAutoComplete","dom","acOptions","decoration","callback","complain","finish","gotIt","acceptButtonHandler","cancelButtonHandler","nameMatch","clearList","inputEventHHandler","loadBindingsAndFilterByLanguage","filterByName","refreshList","initialize","currentObject","searchInput","value","currentName","foundName","lastFilter","undefined","foundObject","deleteButton","acceptButton","editButton","cancelButton","inputEventHandlerLock","rowForBinding","compareBindingsByName","self","other","name","binding","row","createElement","setStyle","setAttribute","color","allDisplayed","textContent","object","bindingToTerm","subject","nameTerm","addEventListener","_event","debug","log","getPreferredLanguages","languagePrefs","filter","trim","toLowerCase","length","numberOfRows","startsWith","lastBindings","slimmed","loadedEnough","displayable","slice","sort","table","appendChild","bindings","queryPublicDataByName","targetClass","defaultPreferredLanguages","queryParams","AUTOCOMPLETE_LIMIT","filterByLanguage","children","removeChild","lastChild","candidate","parts","split","j","word","indexOf","permanent","div","parentNode","disbaled","termType","objectURIBase","store","sym","message","errorRow","err","Error","widgets","errorMessageBlock","padding","head","cell","size","textInputSize","searchInputStyle","textInputStyle","event","keyCode"],"sources":["../../../../src/widgets/forms/autocomplete/autocompletePicker.ts"],"sourcesContent":["/* Autocomplete Picker: Create and edit data using public data\n**\n** As the data source is passed as a parameter, all kinds of APIa and query services can be used\n**\n*/\nimport * as debug from '../../../debug'\nimport * as style from '../../../style'\nimport * as widgets from '../../../widgets'\nimport { store } from 'solid-logic'\nimport { NamedNode, Literal } from 'rdflib'\nimport { queryPublicDataByName, bindingToTerm, AUTOCOMPLETE_LIMIT, QueryParameters } from './publicData'\nimport { filterByLanguage, getPreferredLanguages, defaultPreferredLanguages } from './language'\n\nconst AUTOCOMPLETE_THRESHOLD = 4 // don't check until this many characters typed\nconst AUTOCOMPLETE_ROWS = 20 // 20?\nconst AUTOCOMPLETE_ROWS_STRETCH = 40\n\n/*\nAutocomplete happens in 6 phases:\n  1. The search string is too small to bother\n  2. The search string is big enough, and we have not loaded the array\n  3. The search string is big enough, and we have loaded array up to the limit\n       Display them and wait for more user input\n  4. The search string is big enough, and we have loaded array NOT to the limit\n     but including all matches.   No more fetches.\n     If user gets more precise, wait for them to select one - or reduce to a single\n  5. Single one selected. Optionally waiting for accept button to be pressed, OR can change string and go to 5 or 2\n  6. Locked with a value. Press 'edit' button to return to 5\n*/\n\nexport type AutocompleteDecoration = {\n  acceptButton?: HTMLElement,\n  cancelButton: HTMLElement, // Must have cancel button\n  editButton?: HTMLElement,\n  deleteButton?: HTMLElement\n}\nexport type AutocompleteOptions = {\n     targetClass?: NamedNode,\n     currentObject?: NamedNode,\n     currentName?: Literal,\n     queryParams: QueryParameters,\n     size?: number,\n     permanent?: boolean\n}\n\ninterface Callback1 {\n  (_subject: NamedNode, _name: Literal): any;\n}\n\nexport function setVisible (element:HTMLElement, visible:boolean) {\n  element.style.display = visible ? '' : 'none' // Do not use visibility, it holds the real estate\n}\n\n// The core of the autocomplete UI\nexport async function renderAutoComplete (dom: HTMLDocument,\n  acOptions:AutocompleteOptions,\n  decoration: AutocompleteDecoration,\n  callback: Callback1) {\n  function complain (message) {\n    const errorRow = table.appendChild(dom.createElement('tr'))\n    debug.log(message)\n    const err = new Error(message)\n    errorRow.appendChild(widgets.errorMessageBlock(dom, err, 'pink'))\n    // errorMessageBlock will log the stack to the console\n    style.setStyle(errorRow, 'autocompleteRowStyle')\n    errorRow.style.padding = '1em'\n  }\n\n  function finish (object, name) {\n    debug.log('Auto complete: finish! ' + object)\n    if (object.termType === 'Literal' && acOptions.queryParams.objectURIBase) {\n      object = store.sym(acOptions.queryParams.objectURIBase.value + object.value)\n    }\n    // remove(decoration.cancelButton)\n    // remove(decoration.acceptButton)\n    // remove(div)\n    clearList()\n    callback(object, name)\n  }\n  async function gotIt (object:NamedNode | Literal, name: Literal) {\n    if (decoration.acceptButton) {\n      (decoration.acceptButton as any).disbaled = false\n      setVisible(decoration.acceptButton, true) // now wait for confirmation\n      searchInput.value = name.value // complete it\n      foundName = name\n      foundObject = object\n      debug.log('Auto complete: name: ' + name)\n      debug.log('Auto complete: waiting for accept ' + object)\n      clearList() // This may be an option - nice and clean but does not allow change of mind\n      return\n    }\n    setVisible(decoration.cancelButton, true)\n    finish(object, name)\n  }\n\n  async function acceptButtonHandler (_event) {\n    if (foundName && searchInput.value === foundName.value) { // still\n      finish(foundObject, foundName)\n    }\n  }\n\n  async function cancelButtonHandler (_event) {\n    debug.log('Auto complete: Canceled by user! ')\n    if (acOptions.permanent) {\n      initialize()\n    } else {\n      if (div.parentNode) {\n        div.parentNode.removeChild(div)\n      }\n    }\n  }\n\n  function nameMatch (filter:string, candidate: string):boolean {\n    const parts = filter.split(' ') // Each name part must be somewhere\n    for (let j = 0; j < parts.length; j++) {\n      const word = parts[j]\n      if (candidate.toLowerCase().indexOf(word) < 0) return false\n    }\n    return true\n  }\n\n  function clearList () {\n    while (table.children.length > 1) {\n      table.removeChild(table.lastChild as Node)\n    }\n  }\n\n  async function inputEventHHandler (_event) {\n    // console.log('@@ AC inputEventHHandler called')\n    setVisible(decoration.cancelButton, true) // only allow cancel when there is something to cancel\n    refreshList() /// @@  debounqce does not work with jest\n    /*\n    if (runningTimeout) {\n      clearTimeout(runningTimeout)\n    }\n    runningTimeout = setTimeout(refreshList, AUTOCOMPLETE_DEBOUNCE_MS)\n    */\n  }\n\n  async function loadBindingsAndFilterByLanguage (filter, languagePrefs) {\n    // console.log('@@ loadBindingsAndFilterByLanguage ' + filter)\n    let bindings\n    try {\n      bindings = await queryPublicDataByName(filter, targetClass as any,\n        languagePrefs || defaultPreferredLanguages, acOptions.queryParams)\n    } catch (err) {\n      complain('Error querying db of organizations: ' + err)\n      inputEventHandlerLock = false\n      return\n    }\n    loadedEnough = bindings.length < AUTOCOMPLETE_LIMIT\n    if (loadedEnough) {\n      lastFilter = filter\n    } else {\n      lastFilter = undefined\n    }\n    clearList()\n    const slimmed = filterByLanguage(bindings, languagePrefs)\n    return slimmed\n  }\n\n  function filterByName (filter, bindings) {\n    return bindings.filter(binding => nameMatch(filter, binding.name.value))\n  }\n\n  async function refreshList () {\n    // console.log('@@ refreshList called')\n    function rowForBinding (binding) {\n      const row = dom.createElement('tr')\n      style.setStyle(row, 'autocompleteRowStyle')\n      row.setAttribute('style', 'padding: 0.3em;')\n      row.style.color = allDisplayed ? '#080' : '#088' // green means 'you should find it here'\n      row.textContent = binding.name.value\n      const object = bindingToTerm(binding.subject)\n      const nameTerm = bindingToTerm(binding.name)\n      row.addEventListener('click', async _event => {\n        debug.log('       click row textContent: ' + row.textContent)\n        debug.log('       click name: ' + nameTerm.value)\n        if (object && nameTerm) {\n          gotIt(object, nameTerm as Literal)\n        }\n      })\n      return row\n    } // rowForBinding\n    function compareBindingsByName (self, other) {\n      return other.name.value > self.name.value\n        ? 1\n        : other.name.name < self.name.value ? -1 : 0\n    }\n\n    if (inputEventHandlerLock) {\n      debug.log(`Ignoring \"${searchInput.value}\" because of lock `)\n      return\n    }\n    debug.log(`Setting lock at \"${searchInput.value}\"`)\n\n    inputEventHandlerLock = true\n    const languagePrefs = await getPreferredLanguages()\n    const filter = searchInput.value.trim().toLowerCase()\n    if (filter.length < AUTOCOMPLETE_THRESHOLD) { // too small\n      clearList()\n      // candidatesLoaded = false\n      numberOfRows = AUTOCOMPLETE_ROWS\n    } else {\n      if (!allDisplayed || !lastFilter || !filter.startsWith(lastFilter)) {\n        debug.log(`   Querying database at \"${filter}\" cf last \"${lastFilter}\".`)\n        lastBindings = await loadBindingsAndFilterByLanguage(filter, languagePrefs) // freesh query\n      }\n      // Trim table as search gets tighter:\n      const slimmed = filterByName(filter, lastBindings)\n      if (loadedEnough && slimmed.length <= AUTOCOMPLETE_ROWS_STRETCH) {\n        numberOfRows = slimmed.length // stretch if it means we get all items\n      }\n      allDisplayed = loadedEnough && slimmed.length <= numberOfRows\n      debug.log(` Filter:\"${filter}\" lastBindings: ${lastBindings.length}, slimmed to ${slimmed.length}; rows: ${numberOfRows}, Enough? ${loadedEnough}, All displayed? ${allDisplayed}`)\n\n      const displayable = slimmed.slice(0, numberOfRows)\n\n      displayable.sort(compareBindingsByName)\n      clearList()\n      for (const binding of displayable) {\n        table.appendChild(rowForBinding(binding))\n      }\n      if (slimmed.length === 1) {\n        gotIt(bindingToTerm(slimmed[0].subject), bindingToTerm(slimmed[0].name) as Literal)\n      }\n    } // else\n    inputEventHandlerLock = false\n  } // refreshList\n\n  function initialize () {\n    if (acOptions.currentObject) { // If have existing value then jump into the endgame of the autocomplete\n      searchInput.value = acOptions.currentName ? acOptions.currentName.value : '??? wot no name for ' + acOptions.currentObject\n      foundName = acOptions.currentName\n      lastFilter = acOptions.currentName ? acOptions.currentName.value : undefined\n      foundObject = acOptions.currentObject\n    } else {\n      searchInput.value = ''\n      lastFilter = undefined\n      foundObject = undefined\n    }\n    if (decoration.deleteButton) {\n      setVisible(decoration.deleteButton, !!acOptions.currentObject)\n    }\n\n    if (decoration.acceptButton) {\n      setVisible(decoration.acceptButton, false) // hide until input complete\n    }\n    if (decoration.editButton) {\n      setVisible(decoration.editButton, true)\n    }\n    if (decoration.cancelButton) {\n      setVisible(decoration.cancelButton, false) // only allow cancel when there is something to cancel\n    }\n    inputEventHandlerLock = false\n    clearList()\n  } // initialiize\n\n  // const queryParams: QueryParameters = acOptions.queryParams\n  const targetClass = acOptions.targetClass\n  if (!targetClass) throw new Error('renderAutoComplete: missing targetClass')\n  // console.log(`renderAutoComplete: targetClass=${targetClass}` )\n  if (decoration.acceptButton) {\n    decoration.acceptButton.addEventListener('click', acceptButtonHandler, false)\n  }\n  if (decoration.cancelButton) {\n    decoration.cancelButton.addEventListener('click', cancelButtonHandler, false)\n  }\n\n  // var candidatesLoaded = false\n  let lastBindings\n  let loadedEnough = false\n  let inputEventHandlerLock = false\n  let allDisplayed = false\n  let lastFilter = undefined as (string | undefined)\n  let numberOfRows = AUTOCOMPLETE_ROWS // this gets slimmed down\n  const div = dom.createElement('div')\n  let foundName = undefined as (Literal | undefined)// once found accepted string must match this\n  let foundObject = undefined as (NamedNode | Literal | undefined)\n  const table = div.appendChild(dom.createElement('table'))\n  table.setAttribute('data-testid', 'autocomplete-table')\n  table.setAttribute('style', 'max-width: 30em; margin: 0.5em;')\n  const head = table.appendChild(dom.createElement('tr'))\n  style.setStyle(head, 'autocompleteRowStyle') // textInputStyle or\n  const cell = head.appendChild(dom.createElement('td'))\n  const searchInput = cell.appendChild(dom.createElement('input'))\n  searchInput.setAttribute('type', 'text')\n\n  initialize()\n\n  const size = acOptions.size || style.textInputSize || 20\n  searchInput.setAttribute('size', size)\n  searchInput.setAttribute('data-testid', 'autocomplete-input')\n\n  const searchInputStyle = style.textInputStyle || // searchInputStyle ?\n    'border: 0.1em solid #444; border-radius: 0.5em; width: 100%; font-size: 100%; padding: 0.1em 0.6em' // @\n  searchInput.setAttribute('style', searchInputStyle)\n  searchInput.addEventListener('keyup', function (event) {\n    if (event.keyCode === 13) {\n      acceptButtonHandler(event)\n    }\n  }, false)\n\n  searchInput.addEventListener('input', inputEventHHandler)\n  // console.log('@@ renderAutoComplete returns ' + div.innerHTML)\n  return div\n} // renderAutoComplete\n\n// ENDS\n"],"mappings":"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"}