{"version":3,"sources":["../../../src/widgets/forms/formStyle.ts"],"names":["STYLE_URI_PREFIX","setFieldStyle","ele","field","classUri","params","fieldParams","style","kb","any","ns","ui","setAttribute","termType","value","sts","statementsMatching","doc","forEach","st","predicate","uri","startsWith","cssAttribute","slice","length","object","err","console","warn","tagName"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AAEA,IAAMA,gBAAgB,GAAG,sCAAzB;AAEA;;AAEO,SAASC,aAAT,CAAwBC,GAAxB,EAAyCC,KAAzC,EAAqD;AAC1D,MAAMC,QAAQ,GAAG,yCAAqBD,KAArB,CAAjB;AACA,MAAME,MAAM,GAAGC,yBAAYF,QAAZ,KAAyB,EAAxC;;AAEA,MAAMG,KAAK,GAAGC,UAAGC,GAAH,CAAON,KAAP,EAAqBO,EAAE,CAACC,EAAH,CAAM,OAAN,CAArB,CAAd;;AACA,MAAI,CAACJ,KAAL,EAAY;AACV,QAAIF,MAAM,CAACE,KAAX,EAAkB;AAChBL,MAAAA,GAAG,CAACU,YAAJ,CAAiB,OAAjB,EAA0BP,MAAM,CAACE,KAAjC;AACD;;AACD;AACD;;AACD,MAAIA,KAAK,CAACM,QAAN,KAAmB,SAAvB,EAAkC;AAChC,QAAIN,KAAJ,EAAWL,GAAG,CAACU,YAAJ,CAAiB,OAAjB,EAA0BL,KAAK,CAACO,KAAhC;AACZ,GAFD,MAEO;AACL,QAAMC,GAAG,GAAGP,UAAGQ,kBAAH,CAAsBT,KAAtB,EAAoC,IAApC,EAA0C,IAA1C,EAAiDJ,KAAD,CAAec,GAAf,EAAhD,CAAZ;;AACAF,IAAAA,GAAG,CAACG,OAAJ,CAAY,UAAAC,EAAE,EAAI;AAChB,UAAIA,EAAE,CAACC,SAAH,CAAaC,GAAb,IAAoBF,EAAE,CAACC,SAAH,CAAaC,GAAb,CAAiBC,UAAjB,CAA4BtB,gBAA5B,CAAxB,EAAuE;AACrE,YAAMuB,YAAY,GAAGJ,EAAE,CAACC,SAAH,CAAaC,GAAb,CAAiBG,KAAjB,CAAuBxB,gBAAgB,CAACyB,MAAxC,CAArB;;AACA,YAAI;AACFvB,UAAAA,GAAG,CAACK,KAAJ,CAAUgB,YAAV,IAA0BJ,EAAE,CAACO,MAAH,CAAUZ,KAApC;AACD,SAFD,CAEE,OAAOa,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,IAAR,sDAA2DN,YAA3D,mBAA+EJ,EAAE,CAACO,MAAH,CAAUZ,KAAzF;AACAc,UAAAA,OAAO,CAACC,IAAR,sDAA0D3B,GAAG,CAAC4B,OAAJ,IAAe,KAAzE;AACD;AACF;AACF,KAVD;AAWD;AACF","sourcesContent":["import * as ns from '../../ns'\nimport { Node } from 'rdflib'\nimport { kb } from '../../logic'\nimport { fieldParams } from './fieldParams'\n\nimport { mostSpecificClassURI } from './fieldFunction'\n\nconst STYLE_URI_PREFIX = 'https://www.w3.org/ns/css/attribute#'\n\n/* eslint-disable no-console */\n\nexport function setFieldStyle (ele:HTMLElement, field:Node) {\n  const classUri = mostSpecificClassURI(field)\n  const params = fieldParams[classUri] || {}\n\n  const style = kb.any(field as any, ns.ui('style'))\n  if (!style) {\n    if (params.style) {\n      ele.setAttribute('style', params.style)\n    }\n    return\n  }\n  if (style.termType === 'Literal') {\n    if (style) ele.setAttribute('style', style.value)\n  } else {\n    const sts = kb.statementsMatching(style as any, null, null, (field as any).doc())\n    sts.forEach(st => {\n      if (st.predicate.uri && st.predicate.uri.startsWith(STYLE_URI_PREFIX)) {\n        const cssAttribute = st.predicate.uri.slice(STYLE_URI_PREFIX.length)\n        try {\n          ele.style[cssAttribute] = st.object.value\n        } catch (err) {\n          console.warn(`setFieldStyle: Error setting element style ${cssAttribute} to \"${st.object.value}\"`)\n          console.warn(`setFieldStyle:   ... Element tagName was \"${ele.tagName || '???'}\"`)\n        }\n      }\n    })\n  }\n}\n"],"file":"formStyle.js"}