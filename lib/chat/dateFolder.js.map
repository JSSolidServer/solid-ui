{"version":3,"file":"dateFolder.js","names":["DateFolder","rootThing","leafFileName","membershipProperty","root","rootFolder","dir","ns","wf","date","isoDate","toISOString","path","split","replace","uri","store","sym","doc","head","length","str","slice","Date","debug","log","backwards","previousPeriod","file","level","younger","suitable","lastNonEmpty","siblings","filter","sort","reverse","pop","folder","leafDocument","thisDateFolder","fetcher","load","statementsMatching","dct","x","tail","includes","parent","each","ldp","uncle","cousins","result","leafDocumentFromDate","found","dateFromLeafDocument","earliestSubfolder","folderFetcher","requested","force","kids","folderStore","Error","$rdf","graph","Fetcher","y","month","d","leafObjects","msg","trace","sortMe","map","leafObject","any"],"sources":["../../src/chat/dateFolder.js"],"sourcesContent":["/**\n * Contains the [[DateFolder]] class\n * This tracks data stored in dated folders and sub-folders\n *\n */\n\nimport * as debug from '../debug'\nimport { store } from 'solid-logic'\n\nimport * as ns from '../ns'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\n\n/**\n * Track back through the YYYY/MM/DD tree to find the previous/next day\n */\nexport class DateFolder {\n  constructor (rootThing, leafFileName, membershipProperty) {\n    this.root = rootThing\n    this.rootFolder = rootThing.dir()\n    this.leafFileName = leafFileName || 'index.ttl' // typically chat.ttl\n    this.membershipProperty = membershipProperty || ns.wf('leafObject')\n  }\n\n  /* Generate the leaf document (rdf object) from date\n   * @returns: <NamedNode> - document\n   */\n  leafDocumentFromDate (date) {\n    // debug.log('incoming date: ' + date)\n    const isoDate = date.toISOString() // Like \"2018-05-07T17:42:46.576Z\"\n    let path = isoDate.split('T')[0].replace(/-/g, '/') //  Like \"2018/05/07\"\n    path = this.root.dir().uri + path + '/' + this.leafFileName\n    return store.sym(path)\n  }\n\n  /* Generate a date object from the leaf file name\n   */\n  dateFromLeafDocument (doc) {\n    const head = this.rootFolder.uri.length\n    const str = doc.uri.slice(head, head + 10).replace(/\\//g, '-')\n    // let date = new Date(str + 'Z') // GMT - but fails in FF - invalid format :-(\n    const date = new Date(str) // not explicitly UTC but is assumed so in spec\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\n    debug.log('Date for ' + doc + ':' + date.toISOString())\n    return date\n  }\n\n  async loadPrevious (date, backwards) {\n    const thisDateFolder = this\n    async function previousPeriod (file, level) {\n      function younger (x) {\n        if (backwards ? x.uri >= file.uri : x.uri <= file.uri) return false // later than we want or same -- looking for different\n        return true\n      }\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n\n      async function lastNonEmpty (siblings) {\n        siblings = siblings.filter(suitable)\n        siblings.sort() // chronological order\n        if (!backwards) siblings.reverse()\n        if (level !== 3) return siblings.pop() // only length chck final leverl\n        while (siblings.length) {\n          const folder = siblings.pop()\n          const leafDocument = store.sym(folder.uri + thisDateFolder.leafFileName)\n          await store.fetcher.load(leafDocument)\n          // files can have seealso links. skip ones with no leafObjects with a date\n          if (\n            store.statementsMatching(null, ns.dct('created'), null, leafDocument)\n              .length > 0\n          ) {\n            return folder\n          }\n        }\n        return null\n      }\n      // debug.log('  previousPeriod level' + level + ' file ' + file)\n      const parent = file.dir()\n      await store.fetcher.load(parent)\n      let siblings = store.each(parent, ns.ldp('contains'))\n      siblings = siblings.filter(younger)\n      const folder = await lastNonEmpty(siblings)\n      if (folder) return folder\n\n      if (level === 0) return null // 3:day, 2:month, 1: year  0: no\n\n      const uncle = await previousPeriod(parent, level - 1)\n      if (!uncle) return null // reached first ever\n      await store.fetcher.load(uncle)\n      const cousins = store.each(uncle, ns.ldp('contains'))\n      const result = await lastNonEmpty(cousins)\n      return result\n    } // previousPeriod\n\n    const folder = this.leafDocumentFromDate(date).dir()\n    const found = await previousPeriod(folder, 3)\n    if (found) {\n      const doc = store.sym(found.uri + this.leafFileName)\n      return this.dateFromLeafDocument(doc)\n    }\n    return null\n  } // loadPrevious\n\n  async firstLeaf (backwards) {\n    // backwards -> last leafObject\n    const folderStore = $rdf.graph()\n    const folderFetcher = new $rdf.Fetcher(folderStore)\n    async function earliestSubfolder (parent) {\n      function suitable (x) {\n        const tail = x.uri\n          .slice(0, -1)\n          .split('/')\n          .slice(-1)[0]\n        if (!'0123456789'.includes(tail[0])) return false // not numeric\n        return true\n      }\n      debug.log('            parent ' + parent)\n      delete folderFetcher.requested[parent.uri]\n      // try {\n      await folderFetcher.load(parent, { force: true }) // Force fetch as will have changed\n      // }catch (err) {\n      // }\n\n      let kids = folderStore.each(parent, ns.ldp('contains'))\n      kids = kids.filter(suitable)\n      if (kids.length === 0) {\n        throw new Error(' @@@  No children to         parent2 ' + parent)\n      }\n\n      kids.sort()\n      if (backwards) kids.reverse()\n      return kids[0]\n    }\n    const y = await earliestSubfolder(this.root.dir())\n    const month = await earliestSubfolder(y)\n    const d = await earliestSubfolder(month)\n    const leafDocument = $rdf.sym(d.uri + 'chat.ttl')\n    await folderFetcher.load(leafDocument)\n    const leafObjects = folderStore.each(\n      this.root,\n      this.membershipProperty,\n      null,\n      leafDocument\n    )\n    if (leafObjects.length === 0) {\n      const msg =\n        '  INCONSISTENCY -- no chat leafObject in file ' + leafDocument\n      debug.trace(msg)\n      throw new Error(msg)\n    }\n    const sortMe = leafObjects.map(leafObject => [\n      folderStore.any(leafObject, ns.dct('created')),\n      leafObject\n    ])\n    sortMe.sort()\n    if (backwards) sortMe.reverse()\n    debug.log(\n      (backwards ? 'Latest' : 'Earliest') + ' leafObject is ' + sortMe[0][1]\n    )\n    return sortMe[0][1]\n  } // firstleafObject\n} // class\n"],"mappings":"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"}