{"version":3,"file":"chatLogic.js","names":["ChatChannel","channel","options","channelRoot","doc","dateFolder","DateFolder","div","text","updateMessage","oldMsg","deleteIt","sts","now","Date","timestamp","getTime","dateStamp","$rdf","term","chatDocument","leafDocumentFromDate","message","store","sym","uri","me","authn","currentUser","push","st","mostRecentVersion","ns","dct","schema","wf","sioc","literal","foaf","updater","update","msg","debug","warn","alert","Error","originalVersion","any","isDeleted","holds","isReplaced","isHidden","nick","person","s","value","utils","label","_createIfNotExists","contentType","data","fetcher","load","response","status","log","webOperation","requested"],"sources":["../../src/chat/chatLogic.js"],"sourcesContent":["/**\n * Contains the [[ChatChannel]] class and logic for Solid Chat\n * @packageDocumentation\n */\n\nimport * as debug from '../debug'\nimport { DateFolder } from './dateFolder'\nimport { store, authn } from 'solid-logic'\nimport * as ns from '../ns'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport * as utils from '../utils'\n\n/* The Solid logic for a 'LongChat'\n*/\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n *\n */\n\nexport class ChatChannel {\n  constructor (channel, options) {\n    this.channel = channel\n    this.channelRoot = channel.doc()\n    this.options = options\n    this.dateFolder = new DateFolder(this.channelRoot, 'chat.ttl')\n    this.div = null // : HTMLElement\n  }\n\n  /* Store a new message in the web,\n  */\n  async createMessage (text) {\n    return this.updateMessage(text)\n  }\n\n  /* Store a new message in the web,\n    as a replacement for an existing one.\n    The old one iis left, and the two are linked\n  */\n  async updateMessage (text, oldMsg = null, deleteIt) {\n    const sts = []\n    const now = new Date()\n    const timestamp = '' + now.getTime()\n    const dateStamp = $rdf.term(now)\n    const chatDocument = oldMsg ? oldMsg.doc() : this.dateFolder.leafDocumentFromDate(now)\n    const message = store.sym(chatDocument.uri + '#' + 'Msg' + timestamp)\n    // const content = store.literal(text)\n\n    const me = authn.currentUser() // If already logged on\n\n    if (oldMsg) { // edit message replaces old one\n      sts.push($rdf.st(mostRecentVersion(oldMsg), ns.dct('isReplacedBy'), message, chatDocument))\n      if (deleteIt) {\n        sts.push($rdf.st(message, ns.schema('dateDeleted'), dateStamp, chatDocument))\n      }\n    } else { // link new message to channel\n      sts.push($rdf.st(this.channel, ns.wf('message'), message, chatDocument))\n    }\n    sts.push(\n      $rdf.st(message, ns.sioc('content'), store.literal(text), chatDocument)\n    )\n    sts.push(\n      $rdf.st(message, ns.dct('created'), dateStamp, chatDocument)\n    )\n    if (me) {\n      sts.push($rdf.st(message, ns.foaf('maker'), me, chatDocument))\n    }\n    try {\n      await store.updater.update([], sts)\n    } catch (err) {\n      const msg = 'Error saving chat message: ' + err\n      debug.warn(msg)\n      alert(msg)\n      throw new Error(msg)\n    }\n    return message\n  }\n\n  /* Mark a message as deleted\n  * Wee add a new version of the message,m witha deletion flag (deletion date)\n  * so that the deletion can be revoked by adding another non-deleted update\n  */\n  async deleteMessage (message) {\n    return this.updateMessage('(message deleted)', message, true)\n  }\n} // class ChatChannel\n\nexport function originalVersion (message) {\n  let msg = message\n  while (msg) {\n    message = msg\n    msg = store.any(null, ns.dct('isReplacedBy'), message, message.doc())\n  }\n  return message\n}\n\nexport function mostRecentVersion (message) {\n  let msg = message\n  while (msg) {\n    message = msg\n    msg = store.any(message, ns.dct('isReplacedBy'), null, message.doc())\n  }\n  return message\n}\n\nexport function isDeleted (message) {\n  return store.holds(message, ns.schema('dateDeleted'), null, message.doc())\n}\n\nexport function isReplaced (message) {\n  return store.holds(message, ns.dct('isReplacedBy'), null, message.doc())\n}\n\nexport function isHidden (message) {\n  return this.isDeleted(message) || this.isReplaced(message)\n}\n\n// A Nickname for a person\n\nexport function nick (person) {\n  const s = store.any(person, ns.foaf('nick'))\n  if (s) return '' + s.value\n  return '' + utils.label(person)\n}\n\nexport async function _createIfNotExists (doc, contentType = 'text/turtle', data = '') {\n  let response\n  try {\n    response = await store.fetcher.load(doc)\n  } catch (err) {\n    if (err.response.status === 404) {\n      debug.log(\n        'createIfNotExists: doc does NOT exist, will create... ' + doc\n      )\n      try {\n        response = await store.fetcher.webOperation('PUT', doc.uri, {\n          data,\n          contentType\n        })\n      } catch (err) {\n        debug.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\n        throw err\n      }\n      delete store.fetcher.requested[doc.uri] // delete cached 404 error\n      // debug.log('createIfNotExists doc created ok ' + doc)\n      return response\n    } else {\n      debug.log(\n        'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\n      )\n      throw err\n    }\n  }\n  // debug.log('createIfNotExists: doc exists, all good: ' + doc)\n  return response\n}\n// ends\n"],"mappings":"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"}