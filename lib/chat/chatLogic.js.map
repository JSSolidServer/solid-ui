{"version":3,"file":"chatLogic.js","names":["debug","_interopRequireWildcard","require","_dateFolder","_solidLogic","ns","$rdf","utils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ChatChannel","channel","options","_classCallCheck2","channelRoot","doc","dateFolder","DateFolder","div","_createClass2","value","_createMessage","_asyncToGenerator2","_regenerator","mark","_callee","text","wrap","_callee$","_context","prev","next","abrupt","updateMessage","stop","createMessage","_x","apply","arguments","_updateMessage","_this","oldMsg","length","undefined","deleteIt","_callee2","sts","now","timestamp","dateStamp","chatDocument","message","me","msg","_callee2$","_context2","Date","getTime","term","leafDocumentFromDate","store","sym","uri","authn","currentUser","push","st","mostRecentVersion","dct","schema","wf","sioc","literal","foaf","updater","update","t0","warn","alert","Error","_x2","_deleteMessage","_callee3","_callee3$","_context3","deleteMessage","_x3","exports","originalVersion","any","isDeleted","holds","isReplaced","isHidden","nick","person","s","label","_createIfNotExists","_x4","_createIfNotExists2","contentType","data","_callee4","response","_callee4$","_context4","fetcher","load","sent","status","log","webOperation","t1","requested"],"sources":["../../src/chat/chatLogic.js"],"sourcesContent":["/**\n * Contains the [[ChatChannel]] class and logic for Solid Chat\n * @packageDocumentation\n */\n\nimport * as debug from '../debug'\nimport { DateFolder } from './dateFolder'\nimport { store, authn } from 'solid-logic'\nimport * as ns from '../ns'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport * as utils from '../utils'\n\n/* The Solid logic for a 'LongChat'\n*/\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n *\n */\n\nexport class ChatChannel {\n  constructor (channel, options) {\n    this.channel = channel\n    this.channelRoot = channel.doc()\n    this.options = options\n    this.dateFolder = new DateFolder(this.channelRoot, 'chat.ttl')\n    this.div = null // : HTMLElement\n  }\n\n  /* Store a new message in the web,\n  */\n  async createMessage (text) {\n    return this.updateMessage(text)\n  }\n\n  /* Store a new message in the web,\n    as a replacement for an existing one.\n    The old one iis left, and the two are linked\n  */\n  async updateMessage (text, oldMsg = null, deleteIt) {\n    const sts = []\n    const now = new Date()\n    const timestamp = '' + now.getTime()\n    const dateStamp = $rdf.term(now)\n    const chatDocument = oldMsg ? oldMsg.doc() : this.dateFolder.leafDocumentFromDate(now)\n    const message = store.sym(chatDocument.uri + '#' + 'Msg' + timestamp)\n    // const content = store.literal(text)\n\n    const me = authn.currentUser() // If already logged on\n\n    if (oldMsg) { // edit message replaces old one\n      sts.push($rdf.st(mostRecentVersion(oldMsg), ns.dct('isReplacedBy'), message, chatDocument))\n      if (deleteIt) {\n        sts.push($rdf.st(message, ns.schema('dateDeleted'), dateStamp, chatDocument))\n      }\n    } else { // link new message to channel\n      sts.push($rdf.st(this.channel, ns.wf('message'), message, chatDocument))\n    }\n    sts.push(\n      $rdf.st(message, ns.sioc('content'), store.literal(text), chatDocument)\n    )\n    sts.push(\n      $rdf.st(message, ns.dct('created'), dateStamp, chatDocument)\n    )\n    if (me) {\n      sts.push($rdf.st(message, ns.foaf('maker'), me, chatDocument))\n    }\n    try {\n      await store.updater.update([], sts)\n    } catch (err) {\n      const msg = 'Error saving chat message: ' + err\n      debug.warn(msg)\n      alert(msg)\n      throw new Error(msg)\n    }\n    return message\n  }\n\n  /* Mark a message as deleted\n  * Wee add a new version of the message,m witha deletion flag (deletion date)\n  * so that the deletion can be revoked by adding another non-deleted update\n  */\n  async deleteMessage (message) {\n    return this.updateMessage('(message deleted)', message, true)\n  }\n} // class ChatChannel\n\nexport function originalVersion (message) {\n  let msg = message\n  while (msg) {\n    message = msg\n    msg = store.any(null, ns.dct('isReplacedBy'), message, message.doc())\n  }\n  return message\n}\n\nexport function mostRecentVersion (message) {\n  let msg = message\n  while (msg) {\n    message = msg\n    msg = store.any(message, ns.dct('isReplacedBy'), null, message.doc())\n  }\n  return message\n}\n\nexport function isDeleted (message) {\n  return store.holds(message, ns.schema('dateDeleted'), null, message.doc())\n}\n\nexport function isReplaced (message) {\n  return store.holds(message, ns.dct('isReplacedBy'), null, message.doc())\n}\n\nexport function isHidden (message) {\n  return this.isDeleted(message) || this.isReplaced(message)\n}\n\n// A Nickname for a person\n\nexport function nick (person) {\n  const s = store.any(person, ns.foaf('nick'))\n  if (s) return '' + s.value\n  return '' + utils.label(person)\n}\n\nexport async function _createIfNotExists (doc, contentType = 'text/turtle', data = '') {\n  let response\n  try {\n    response = await store.fetcher.load(doc)\n  } catch (err) {\n    if (err.response.status === 404) {\n      debug.log(\n        'createIfNotExists: doc does NOT exist, will create... ' + doc\n      )\n      try {\n        response = await store.fetcher.webOperation('PUT', doc.uri, {\n          data,\n          contentType\n        })\n      } catch (err) {\n        debug.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\n        throw err\n      }\n      delete store.fetcher.requested[doc.uri] // delete cached 404 error\n      // debug.log('createIfNotExists doc created ok ' + doc)\n      return response\n    } else {\n      debug.log(\n        'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\n      )\n      throw err\n    }\n  }\n  // debug.log('createIfNotExists: doc exists, all good: ' + doc)\n  return response\n}\n// ends\n"],"mappings":"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"}