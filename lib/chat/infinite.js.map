{"version":3,"file":"infinite.js","names":["$rdf","_interopRequireWildcard","require","_solidLogic","debug","_iconBase","ns","widgets","_chatLogic","_message","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","desktopNotification","str","window","warn","Notification","permission","requestPermission","then","insertMessageIntoTable","channelObject","messageTable","message","fresh","options","userContext","messageRow","renderMessageRow","selectedMessage","sameTerm","style","backgroundColor","selectedElement","done","ele","firstChild","nextSibling","newestFirst","newestfirst","dateString","AJAR_date","insertBefore","appendChild","infiniteMessageArea","_x","_x2","_x3","_x4","_infiniteMessageArea","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee12","dom","wasStore","chatChannel","syncMessages","addMessage","insertPreviousMessages","_insertPreviousMessages","removePreviousMessages","createMessageTable","_createMessageTable","renderMessageTable","addNewChatDocumentIfNewDay","_addNewChatDocumentIfNewDay","appendCurrentMessages","_appendCurrentMessages","loadMoreWhereNeeded","_loadMoreWhereNeeded","loadInitialContent","_loadInitialContent","dateFolder","div","statusArea","liveMessageTable","earliest","latest","lock","wrap","_callee12$","_context12","prev","next","_loadInitialContent3","_callee11","yank","fixScroll","live","selectedDocument","now","todayDocument","selectedMessageTable","selectedDate","_callee11$","_context11","_fixScroll","scrollIntoView","block","inputRow","_yank","doc","Date","leafDocumentFromDate","dateFromLeafDocument","sent","setTimeout","addEventListener","solo","document","body","stop","_loadInitialContent2","_loadMoreWhereNeeded3","_callee10","event","freeze","magicZone","scrollBottom","scrollTop","_callee10$","_context10","abrupt","initial","extendBackwards","scrollHeight","log","clientHeight","extendForwards","_loadMoreWhereNeeded2","_x10","_x11","_appendCurrentMessage2","_callee9","chatDocument","_callee9$","_context9","refresh","_callee8","_callee8$","_context8","store","updater","addDownstreamChangeListener","_appendCurrentMessage","_addNewChatDocumentIf2","_callee7","newChatDocument","oldChatDocument","sts","_callee7$","_context7","removeChild","holds","rdfs","st","update","err","alert","_addNewChatDocumentIf","_renderMessageTable","date","scrollBackbutton","scrollForwardButton","_extendBackwards","_callee","_callee$","_context","setAttribute","icons","iconBase","disabled","extendedBack","setScrollBackbuttonIcon","sense","scrollBackIcon","getScrollbackIcon","scrollBackbuttonHandler","_x8","_scrollBackbuttonHandler","_callee2","_event","_callee2$","_context2","_extendForwards","_callee3","_callee3$","_context3","extendedForwards","setScrollForwardButtonIcon","scrollForwardIcon","getScrollForwardButtonIcon","scrollForwardButtonHandler","_x9","_scrollForwardButtonHandler","_callee4","_callee4$","_context4","createElement","tr","renderMessageEditor","infinite","scrollBackbuttonTR","scrollBackbuttonCell","button","dateCell","textContent","shortDate","toISOString","scrollForwardButtonCell","extendedForward","statementsMatching","wf","length","forEach","object","_createMessageTable3","_callee6","statusTR","_callee6$","_context6","fetcher","load","t0","response","status","errorMessageBlock","_createMessageTable2","_x6","_x7","_removePreviousMessag","backwards","previousSibling","extr","_insertPreviousMessag2","_callee5","extremity","todayDoc","newMessageTable","_callee5$","_context5","loadPrevious","concat","_insertPreviousMessag","_x5","_addMessage","mostRecentVersion","isDeleted","showDeletedMessages","_syncMessages","about","displayed","ele2","AJAR_subject","uri","messages","map","stored","m","refreshTree","authorDateOnLeft","ChatChannel"],"sources":["../../src/chat/infinite.js"],"sourcesContent":["/**\n * Contains the [[infiniteMessageArea]] class\n * @packageDocumentation\n */\n// import { findBookmarkDocument } from './bookmarks'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport { store } from 'solid-logic'\nimport * as debug from '../debug'\nimport { icons } from '../iconBase'\nimport * as ns from '../ns'\n// import * as style from '../style'\n// import * as utils from '../utils'\nimport * as widgets from '../widgets'\n// import * as pad from '../pad'\n// import { DateFolder } from './dateFolder'\nimport { ChatChannel, isDeleted, mostRecentVersion } from './chatLogic'\nimport { renderMessageEditor, renderMessageRow } from './message'\n\n// const UI = { authn, icons, ns, media, pad, $rdf, store, style, utils, widgets }\n\nexport function desktopNotification (str) {\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    debug.warn('This browser does no t support desktop notification')\n  } else if (Notification.permission === 'granted') {\n    // Let's check whether notificatio n permissions have already been granted\n    // eslint-disable-next-line no-new\n    new Notification(str)\n  } else if (Notification.permission !== 'denied') {\n    // Otherwise, we need to ask the user for permission\n    Notification.requestPermission().then(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === 'granted') {\n        // eslint-disable-next-line no-new\n        new Notification(str)\n      }\n    })\n  }\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n\n/**\n * Renders a chat message inside a `messageTable`\n */\nexport function insertMessageIntoTable (channelObject, messageTable, message, fresh, options, userContext) {\n  const messageRow = renderMessageRow(channelObject,\n    message,\n    fresh,\n    options,\n    userContext\n  )\n\n  // const message = messageRow.AJAR_subject\n  if (options.selectedMessage && options.selectedMessage.sameTerm(message)) {\n    messageRow.style.backgroundColor = 'yellow'\n    options.selectedElement = messageRow\n    messageTable.selectedElement = messageRow\n  }\n\n  let done = false\n  for (let ele = messageTable.firstChild; ; ele = ele.nextSibling) {\n    if (!ele) {\n      // empty\n      break\n    }\n    const newestFirst = options.newestfirst === true\n    const dateString = messageRow.AJAR_date\n    if (\n      (dateString > ele.AJAR_date && newestFirst) ||\n      (dateString < ele.AJAR_date && !newestFirst)\n    ) {\n      messageTable.insertBefore(messageRow, ele)\n      done = true\n      break\n    }\n  }\n  if (!done) {\n    messageTable.appendChild(messageRow)\n  }\n}\n\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n *\n * Use to import store as param 2, now ignores it and uses the UI main store\n *\n * Options include:\n\n - shiftEnterSendsMessage: Use shift/enter to send message, Enter to add newline, instead of the reverse.\n - authorDateOnLeft:  Display the author's anme and date of the message in the left column instead of first above the content\n - selectedMessage: Display one message highlighted with the chat around it\n - solo: By itelf on a webpage, so user scroll anywhere in the web page scan scroll the chat.\n - newestFirst: Arrange the chat messages chronologically newest at the top insted of at the bottom\n - infinite:  Use infinite scroll\n - showDeletedMessages: Show messages which have been delted as \"deleted message\". Otherwise hide them.\n - expandImagesInline: If a URI by itself in a message looks like an image URI, replace it with the image\n - inlineImageHeightEms: The height (in ems) of images expaned from their URIs in the chat.\n\n */\nexport async function infiniteMessageArea (dom, wasStore, chatChannel, options) {\n  // ///////////////////////////////////////////////////////////////////////\n\n  function syncMessages (about, messageTable) {\n    const displayed = {}\n    let ele, ele2\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        displayed[ele.AJAR_subject.uri] = true\n      }\n    }\n\n    const messages = store\n      .statementsMatching(\n        about,\n        ns.wf('message'),\n        null,\n        messageTable.chatDocument\n      )\n      .map(st => {\n        return st.object\n      })\n    const stored = {}\n    messages.forEach(function (m) {\n      stored[m.uri] = true\n      if (!displayed[m.uri]) {\n        addMessage(m, messageTable)\n      }\n    })\n\n    // eslint-disable-next-line space-in-parens\n    for (ele = messageTable.firstChild; ele;) {\n      ele2 = ele.nextSibling\n      if (ele.AJAR_subject && !stored[ele.AJAR_subject.uri]) {\n        messageTable.removeChild(ele)\n      }\n      ele = ele2\n    }\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        // Refresh thumbs up etc\n        widgets.refreshTree(ele) // Things inside may have changed too\n      }\n    }\n  } // syncMessages\n\n  // Called once per original message displayed\n  function addMessage (message, messageTable) {\n    const latest = mostRecentVersion(message)\n    // const content = store.any(latest, ns.sioc('content'))\n    if (isDeleted(latest) && !options.showDeletedMessages) {\n      return // ignore deleted messaged -- @@ could also leave a placeholder\n    }\n    insertMessageIntoTable(channelObject,\n      messageTable,\n      message,\n      messageTable.fresh,\n      options,\n      userContext\n    ) // fresh from elsewhere\n  }\n\n  /* Add a new messageTable at the top/bottom\n   */\n  async function insertPreviousMessages (backwards) {\n    const extremity = backwards ? earliest : latest\n    let date = extremity.messageTable.date // day in mssecs\n\n    date = await dateFolder.loadPrevious(date, backwards) // backwards\n    debug.log(\n      `insertPreviousMessages: from ${\n        backwards ? 'backwards' : 'forwards'\n      } loadPrevious: ${date}`\n    )\n    if (!date && !backwards && !liveMessageTable) {\n      await appendCurrentMessages() // If necessary skip to today and add that\n    }\n    if (!date) return true // done\n    let live = false\n    if (!backwards) {\n      const todayDoc = dateFolder.leafDocumentFromDate(new Date())\n      const doc = dateFolder.leafDocumentFromDate(date)\n      live = doc.sameTerm(todayDoc) // Is this todays?\n    }\n    const newMessageTable = await createMessageTable(date, live)\n    extremity.messageTable = newMessageTable // move pointer to earliest\n    if (backwards ? newestFirst : !newestFirst) {\n      // put on bottom or top\n      div.appendChild(newMessageTable)\n    } else {\n      // put on top as we scroll back\n      div.insertBefore(newMessageTable, div.firstChild)\n    }\n    return live // not done\n  }\n\n  /* Remove message tables earlier than this one\n   */\n  function removePreviousMessages (backwards, messageTable) {\n    if (backwards ? newestFirst : !newestFirst) {\n      // it was put on bottom\n      while (messageTable.nextSibling) {\n        div.removeChild(messageTable.nextSibling)\n      }\n    } else {\n      // it was put on top as we scroll back\n      while (messageTable.previousSibling) {\n        div.removeChild(messageTable.previousSibling)\n      }\n    }\n    const extr = backwards ? earliest : latest\n    extr.messageTable = messageTable\n  }\n\n  /* Load and render message table\n   ** @returns DOM element generates\n   */\n  async function createMessageTable (date, live) {\n    debug.log('   createMessageTable for  ' + date)\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    try {\n      await store.fetcher.load(chatDocument)\n    } catch (err) {\n      const messageTable = dom.createElement('table')\n      const statusTR = messageTable.appendChild(dom.createElement('tr')) // ### find status in exception\n      if (err.response && err.response.status && err.response.status === 404) {\n        debug.log('Error 404 for chat file ' + chatDocument)\n        return renderMessageTable(date, live) // no mssage file is fine.. will be craeted later\n        // statusTR.appendChild(widgets.errorMessageBlock(dom, 'no message file', 'white'))\n      } else {\n        debug.log('*** Error NON 404 for chat file ' + chatDocument)\n        statusTR.appendChild(widgets.errorMessageBlock(dom, err, 'pink'))\n      }\n      return statusTR\n    }\n    return renderMessageTable(date, live)\n  }\n\n  function renderMessageTable (date, live) {\n    let scrollBackbutton\n    let scrollForwardButton\n\n    /// /////////////////   Scroll down adding more above\n\n    async function extendBackwards () {\n      const done = await insertPreviousMessages(true)\n      if (done) {\n        if (scrollBackbutton) {\n          scrollBackbutton.firstChild.setAttribute(\n            'src',\n            icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n          ) // T\n          scrollBackbutton.disabled = true\n        }\n        messageTable.initial = true\n      } else {\n        messageTable.extendedBack = true\n      }\n      setScrollBackbuttonIcon()\n      return done\n    }\n\n    function setScrollBackbuttonIcon () {\n      if (!scrollBackbutton) {\n        return\n      }\n      const sense = messageTable.extendedBack ? !newestFirst : newestFirst\n      const scrollBackIcon = messageTable.initial\n        ? 'noun_T-Block_1114655_000000.svg'\n        : getScrollbackIcon(sense)\n      scrollBackbutton.firstChild.setAttribute(\n        'src',\n        icons.iconBase + scrollBackIcon\n      )\n\n      function getScrollbackIcon (sense) {\n        return sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollBackbuttonHandler (_event) {\n      if (messageTable.extendedBack) {\n        removePreviousMessages(true, messageTable)\n        messageTable.extendedBack = false\n        setScrollBackbuttonIcon()\n      } else {\n        await extendBackwards()\n      }\n    }\n\n    /// ////////////// Scroll up adding more below\n\n    async function extendForwards () {\n      const done = await insertPreviousMessages(false)\n      if (done) {\n        scrollForwardButton.firstChild.setAttribute(\n          'src',\n          icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n        )\n        scrollForwardButton.disabled = true\n        messageTable.final = true\n      } else {\n        messageTable.extendedForwards = true\n      }\n      setScrollForwardButtonIcon()\n      return done\n    }\n\n    function setScrollForwardButtonIcon () {\n      const sense = messageTable.extendedForwards ? !newestFirst : newestFirst // noun_T-Block_1114657_000000.svg\n      const scrollForwardIcon = messageTable.final\n        ? 'noun_T-Block_1114657_000000.svg'\n        : getScrollForwardButtonIcon(sense)\n      scrollForwardButton.firstChild.setAttribute(\n        'src',\n        icons.iconBase + scrollForwardIcon\n      )\n\n      function getScrollForwardButtonIcon (sense) {\n        return !sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollForwardButtonHandler (_event) {\n      if (messageTable.extendedForwards) {\n        removePreviousMessages(false, messageTable)\n        messageTable.extendedForwards = false\n        setScrollForwardButtonIcon()\n      } else {\n        await extendForwards() // async\n        latest.messageTable.scrollIntoView(newestFirst)\n      }\n    }\n\n    /// ///////////////////////\n    /*\n    options = options || {}\n    options.authorDateOnLeft = true\n    const newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n    const channelObject = new ChatChannel(chatChannel, options)\n    const dateFolder = channelObject.dateFolder\n\n    const div = dom.createElement('div')\n    const statusArea = div.appendChild(dom.createElement('div'))\n    const userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n\n*/\n    const messageTable = dom.createElement('table')\n\n    messageTable.extendBackwards = extendBackwards // Make function available to scroll stuff\n    messageTable.extendForwards = extendForwards // Make function available to scroll stuff\n\n    messageTable.date = date\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    messageTable.chatDocument = chatDocument\n\n    messageTable.fresh = false\n    messageTable.setAttribute('style', 'width: 100%;') // fill that div!\n    if (live) {\n      messageTable.final = true\n      liveMessageTable = messageTable\n      latest.messageTable = messageTable\n      const tr = renderMessageEditor(channelObject, messageTable, userContext, options)\n      if (newestFirst) {\n        messageTable.insertBefore(tr, messageTable.firstChild) // If newestFirst\n      } else {\n        messageTable.appendChild(tr) // not newestFirst\n      }\n      messageTable.inputRow = tr\n    }\n\n    /// ///// Infinite scroll\n    //\n    // @@ listen for swipe past end event not just button\n    if (options.infinite) {\n      const scrollBackbuttonTR = dom.createElement('tr')\n      const scrollBackbuttonCell = scrollBackbuttonTR.appendChild(\n        dom.createElement('td')\n      )\n      // up traingles: noun_1369237.svg\n      // down triangles: noun_1369241.svg\n      const scrollBackIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollBackbutton = widgets.button(\n        dom,\n        icons.iconBase + scrollBackIcon,\n        'Previous messages ...'\n      )\n      scrollBackbuttonCell.style = 'width:3em; height:3em;'\n      scrollBackbutton.addEventListener('click', scrollBackbuttonHandler, false)\n      messageTable.extendedBack = false\n      scrollBackbuttonCell.appendChild(scrollBackbutton)\n      setScrollBackbuttonIcon()\n\n      const dateCell = scrollBackbuttonTR.appendChild(dom.createElement('td'))\n      dateCell.style =\n        'text-align: center; vertical-align: middle; color: #888; font-style: italic;'\n      dateCell.textContent = widgets.shortDate(date.toISOString(), true) // no time, only date\n\n      // @@@@@@@@@@@ todo move this button to other end of  message cell, o\n      const scrollForwardButtonCell = scrollBackbuttonTR.appendChild(\n        dom.createElement('td')\n      )\n      const scrollForwardIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollForwardButton = widgets.button(\n        dom,\n        icons.iconBase + scrollForwardIcon,\n        'Later messages ...'\n      )\n      scrollForwardButtonCell.appendChild(scrollForwardButton)\n      scrollForwardButtonCell.style = 'width:3em; height:3em;'\n      scrollForwardButton.addEventListener(\n        'click',\n        scrollForwardButtonHandler,\n        false\n      )\n      messageTable.extendedForward = false\n      setScrollForwardButtonIcon()\n\n      messageTable.extendedForwards = false\n\n      if (!newestFirst) {\n        // opposite end from the entry field\n        messageTable.insertBefore(scrollBackbuttonTR, messageTable.firstChild) // If not newestFirst\n      } else {\n        messageTable.appendChild(scrollBackbuttonTR) //  newestFirst\n      }\n    }\n\n    const sts = store.statementsMatching(null, ns.wf('message'), null, chatDocument)\n    if (!live && sts.length === 0) {\n      // not todays\n      // no need buttomns at the moment\n      // messageTable.style.visibility = 'collapse' // Hide files with no messages\n    }\n    sts.forEach(st => {\n      addMessage(st.object, messageTable)\n    })\n    messageTable.fresh = true\n\n    // loadMessageTable(messageTable, chatDocument)\n    messageTable.fresh = false\n    return messageTable\n  } // renderMessageTable\n\n  async function addNewChatDocumentIfNewDay () {\n    // @@ Remove listener from previous table as it is now static\n    const newChatDocument = dateFolder.leafDocumentFromDate(new Date())\n    if (!newChatDocument.sameTerm(latest.messageTable.chatDocument)) {\n      // It is a new day\n      if (liveMessageTable.inputRow) {\n        liveMessageTable.removeChild(liveMessageTable.inputRow)\n        delete liveMessageTable.inputRow\n      }\n      const oldChatDocument = latest.messageTable.chatDocument\n      await appendCurrentMessages()\n      // Adding a link in the document will ping listeners to add the new block too\n      if (\n        !store.holds(\n          oldChatDocument,\n          ns.rdfs('seeAlso'),\n          newChatDocument,\n          oldChatDocument\n        )\n      ) {\n        const sts = [\n          $rdf.st(\n            oldChatDocument,\n            ns.rdfs('seeAlso'),\n            newChatDocument,\n            oldChatDocument\n          )\n        ]\n        try {\n          store.updater.update([], sts)\n        } catch (err) {\n          alert('Unable to link old chat file to new one:' + err)\n        }\n      }\n    }\n  }\n\n  /*\n  function messageCount () {\n    var n = 0\n    const tables = div.children\n    for (let i = 0; i < tables.length; i++) {\n      n += tables[i].children.length - 1\n      // debug.log('    table length:' + tables[i].children.length)\n    }\n    return n\n  }\n*/\n\n  /* Add the live message block with entry field for today\n   */\n  async function appendCurrentMessages () {\n    const now = new Date()\n    const chatDocument = dateFolder.leafDocumentFromDate(now)\n\n    /// ///////////////////////////////////////////////////////////\n    const messageTable = await createMessageTable(now, true)\n    div.appendChild(messageTable)\n    div.refresh = async function () {\n      // only the last messageTable is live\n      await addNewChatDocumentIfNewDay(new Date())\n      syncMessages(chatChannel, messageTable) // @@ livemessagetable??\n      desktopNotification(chatChannel)\n    } // The short chat version the live update listening is done in the pane but we do it in the widget @@\n    store.updater.addDownstreamChangeListener(chatDocument, div.refresh) // Live update\n    liveMessageTable = messageTable\n    latest.messageTable = liveMessageTable\n    return messageTable\n  }\n\n  async function loadMoreWhereNeeded (event, fixScroll) {\n    if (lock) return\n    lock = true\n    const freeze = !fixScroll\n    const magicZone = 150\n    // const top = div.scrollTop\n    // const bottom = div.scrollHeight - top - div.clientHeight\n    let done\n\n    while (\n      div.scrollTop < magicZone &&\n      earliest.messageTable &&\n      !earliest.messageTable.initial &&\n      earliest.messageTable.extendBackwards\n    ) {\n      // If this has been called before the element is actually in the\n      // user's DOM tree, then this scrollTop check won't work -> loop forever\n      // https://github.com/solidos/solid-ui/issues/366\n      if (div.scrollHeight === 0) {\n        // console.log('    chat/loadMoreWhereNeeded: trying later...')\n        setTimeout(loadMoreWhereNeeded, 2000) // couple be less\n        lock = false\n        return // abandon now, do later\n      }\n      // console.log('    chat/loadMoreWhereNeeded: Going now')\n      const scrollBottom = div.scrollHeight - div.scrollTop\n      debug.log('infinite scroll: adding above: top ' + div.scrollTop)\n      done = await earliest.messageTable.extendBackwards()\n      if (freeze) {\n        div.scrollTop = div.scrollHeight - scrollBottom\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    while (\n      options.selectedMessage && // we started in the middle not at the bottom\n      div.scrollHeight - div.scrollTop - div.clientHeight < magicZone && // we are scrolled right to the bottom\n      latest.messageTable &&\n      !latest.messageTable.final && // there is more data to come\n      latest.messageTable.extendForwards\n    ) {\n      const scrollTop = div.scrollTop\n      debug.log(\n        'infinite scroll: adding below: bottom: ' +\n        (div.scrollHeight - div.scrollTop - div.clientHeight)\n      )\n      done = await latest.messageTable.extendForwards() // then add more data on the bottom\n      if (freeze) {\n        div.scrollTop = scrollTop // while adding below keep same things in view\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    lock = false\n  }\n\n  async function loadInitialContent () {\n    function yank () {\n      selectedMessageTable.selectedElement.scrollIntoView({ block: 'center' })\n    }\n\n    // During initial load ONLY keep scroll to selected thing or bottom\n    function fixScroll () {\n      if (options.selectedElement) {\n        options.selectedElement.scrollIntoView({ block: 'center' }) // align tops or bottoms\n      } else {\n        if (liveMessageTable.inputRow.scrollIntoView) {\n          liveMessageTable.inputRow.scrollIntoView(newestFirst) // align tops or bottoms\n        }\n      }\n    }\n\n    let live, selectedDocument\n    if (options.selectedMessage) {\n      selectedDocument = options.selectedMessage.doc()\n      const now = new Date()\n      const todayDocument = dateFolder.leafDocumentFromDate(now)\n      live = todayDocument.sameTerm(selectedDocument)\n    }\n    let selectedMessageTable\n    if (options.selectedMessage && !live) {\n      const selectedDate = dateFolder.dateFromLeafDocument(selectedDocument)\n      selectedMessageTable = await createMessageTable(selectedDate, live)\n      div.appendChild(selectedMessageTable)\n      earliest.messageTable = selectedMessageTable\n      latest.messageTable = selectedMessageTable\n      yank()\n      setTimeout(yank, 1000) // @@ kludge - restore position distubed by other cHANGES\n    } else {\n      // Live end\n      await appendCurrentMessages()\n      earliest.messageTable = liveMessageTable\n      latest.messageTable = liveMessageTable\n    }\n\n    await loadMoreWhereNeeded(null, fixScroll)\n    div.addEventListener('scroll', loadMoreWhereNeeded)\n    if (options.solo) {\n      document.body.addEventListener('scroll', loadMoreWhereNeeded)\n    }\n  }\n\n  // Body of main function\n\n  options = options || {}\n  options.authorDateOnLeft = false // @@ make a user optiosn\n  const newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n\n  const channelObject = new ChatChannel(chatChannel, options)\n  const dateFolder = channelObject.dateFolder\n\n  const div = dom.createElement('div')\n  channelObject.div = div\n\n  const statusArea = div.appendChild(dom.createElement('div'))\n  const userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n\n  // const messageTable = dom.createElement('table') // @@ check does this go in renderMessageTable\n\n  let liveMessageTable\n  const earliest = { messageTable: null } // Stuff about each end of the loaded days\n  const latest = { messageTable: null }\n\n  let lock = false\n\n  await loadInitialContent()\n  return div\n}\n"],"mappings":"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"}