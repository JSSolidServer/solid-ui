{"version":3,"file":"infinite.js","names":["desktopNotification","str","window","debug","warn","Notification","permission","requestPermission","then","insertMessageIntoTable","channelObject","messageTable","message","fresh","options","userContext","messageRow","renderMessageRow","selectedMessage","sameTerm","style","backgroundColor","selectedElement","done","ele","firstChild","nextSibling","newestFirst","newestfirst","dateString","AJAR_date","insertBefore","appendChild","infiniteMessageArea","dom","wasStore","chatChannel","syncMessages","addMessage","insertPreviousMessages","removePreviousMessages","createMessageTable","renderMessageTable","addNewChatDocumentIfNewDay","appendCurrentMessages","loadMoreWhereNeeded","loadInitialContent","yank","fixScroll","scrollIntoView","block","liveMessageTable","inputRow","selectedMessageTable","selectedDocument","doc","now","Date","todayDocument","dateFolder","leafDocumentFromDate","live","selectedDate","dateFromLeafDocument","div","earliest","latest","setTimeout","addEventListener","solo","document","body","event","lock","freeze","magicZone","scrollTop","initial","extendBackwards","scrollHeight","scrollBottom","log","clientHeight","extendForwards","chatDocument","refresh","store","updater","addDownstreamChangeListener","newChatDocument","removeChild","oldChatDocument","holds","ns","rdfs","sts","$rdf","st","update","err","alert","date","scrollBackbutton","scrollForwardButton","setAttribute","icons","iconBase","disabled","extendedBack","setScrollBackbuttonIcon","sense","scrollBackIcon","getScrollbackIcon","scrollBackbuttonHandler","_event","extendedForwards","setScrollForwardButtonIcon","scrollForwardIcon","getScrollForwardButtonIcon","scrollForwardButtonHandler","createElement","tr","renderMessageEditor","infinite","scrollBackbuttonTR","scrollBackbuttonCell","widgets","button","dateCell","textContent","shortDate","toISOString","scrollForwardButtonCell","extendedForward","statementsMatching","wf","length","forEach","object","fetcher","load","statusTR","response","status","errorMessageBlock","backwards","previousSibling","extr","extremity","loadPrevious","todayDoc","newMessageTable","mostRecentVersion","isDeleted","showDeletedMessages","about","displayed","ele2","AJAR_subject","uri","messages","map","stored","m","refreshTree","authorDateOnLeft","ChatChannel","statusArea"],"sources":["../../src/chat/infinite.js"],"sourcesContent":["/**\n * Contains the [[infiniteMessageArea]] class\n * @packageDocumentation\n */\n// import { findBookmarkDocument } from './bookmarks'\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport { store } from 'solid-logic'\nimport * as debug from '../debug'\nimport { icons } from '../iconBase'\nimport * as ns from '../ns'\n// import * as style from '../style'\n// import * as utils from '../utils'\nimport * as widgets from '../widgets'\n// import * as pad from '../pad'\n// import { DateFolder } from './dateFolder'\nimport { ChatChannel, isDeleted, mostRecentVersion } from './chatLogic'\nimport { renderMessageEditor, renderMessageRow } from './message'\n\n// const UI = { authn, icons, ns, media, pad, $rdf, store, style, utils, widgets }\n\nexport function desktopNotification (str) {\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    debug.warn('This browser does no t support desktop notification')\n  } else if (Notification.permission === 'granted') {\n    // Let's check whether notificatio n permissions have already been granted\n    // eslint-disable-next-line no-new\n    new Notification(str)\n  } else if (Notification.permission !== 'denied') {\n    // Otherwise, we need to ask the user for permission\n    Notification.requestPermission().then(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === 'granted') {\n        // eslint-disable-next-line no-new\n        new Notification(str)\n      }\n    })\n  }\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n\n/**\n * Renders a chat message inside a `messageTable`\n */\nexport function insertMessageIntoTable (channelObject, messageTable, message, fresh, options, userContext) {\n  const messageRow = renderMessageRow(channelObject,\n    message,\n    fresh,\n    options,\n    userContext\n  )\n\n  // const message = messageRow.AJAR_subject\n  if (options.selectedMessage && options.selectedMessage.sameTerm(message)) {\n    messageRow.style.backgroundColor = 'yellow'\n    options.selectedElement = messageRow\n    messageTable.selectedElement = messageRow\n  }\n\n  let done = false\n  for (let ele = messageTable.firstChild; ; ele = ele.nextSibling) {\n    if (!ele) {\n      // empty\n      break\n    }\n    const newestFirst = options.newestfirst === true\n    const dateString = messageRow.AJAR_date\n    if (\n      (dateString > ele.AJAR_date && newestFirst) ||\n      (dateString < ele.AJAR_date && !newestFirst)\n    ) {\n      messageTable.insertBefore(messageRow, ele)\n      done = true\n      break\n    }\n  }\n  if (!done) {\n    messageTable.appendChild(messageRow)\n  }\n}\n\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n *\n * Use to import store as param 2, now ignores it and uses the UI main store\n *\n * Options include:\n\n - shiftEnterSendsMessage: Use shift/enter to send message, Enter to add newline, instead of the reverse.\n - authorDateOnLeft:  Display the author's anme and date of the message in the left column instead of first above the content\n - selectedMessage: Display one message highlighted with the chat around it\n - solo: By itelf on a webpage, so user scroll anywhere in the web page scan scroll the chat.\n - newestFirst: Arrange the chat messages chronologically newest at the top insted of at the bottom\n - infinite:  Use infinite scroll\n - showDeletedMessages: Show messages which have been delted as \"deleted message\". Otherwise hide them.\n - expandImagesInline: If a URI by itself in a message looks like an image URI, replace it with the image\n - inlineImageHeightEms: The height (in ems) of images expaned from their URIs in the chat.\n\n */\nexport async function infiniteMessageArea (dom, wasStore, chatChannel, options) {\n  // ///////////////////////////////////////////////////////////////////////\n\n  function syncMessages (about, messageTable) {\n    const displayed = {}\n    let ele, ele2\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        displayed[ele.AJAR_subject.uri] = true\n      }\n    }\n\n    const messages = store\n      .statementsMatching(\n        about,\n        ns.wf('message'),\n        null,\n        messageTable.chatDocument\n      )\n      .map(st => {\n        return st.object\n      })\n    const stored = {}\n    messages.forEach(function (m) {\n      stored[m.uri] = true\n      if (!displayed[m.uri]) {\n        addMessage(m, messageTable)\n      }\n    })\n\n    // eslint-disable-next-line space-in-parens\n    for (ele = messageTable.firstChild; ele;) {\n      ele2 = ele.nextSibling\n      if (ele.AJAR_subject && !stored[ele.AJAR_subject.uri]) {\n        messageTable.removeChild(ele)\n      }\n      ele = ele2\n    }\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        // Refresh thumbs up etc\n        widgets.refreshTree(ele) // Things inside may have changed too\n      }\n    }\n  } // syncMessages\n\n  // Called once per original message displayed\n  function addMessage (message, messageTable) {\n    const latest = mostRecentVersion(message)\n    // const content = store.any(latest, ns.sioc('content'))\n    if (isDeleted(latest) && !options.showDeletedMessages) {\n      return // ignore deleted messaged -- @@ could also leave a placeholder\n    }\n    insertMessageIntoTable(channelObject,\n      messageTable,\n      message,\n      messageTable.fresh,\n      options,\n      userContext\n    ) // fresh from elsewhere\n  }\n\n  /* Add a new messageTable at the top/bottom\n   */\n  async function insertPreviousMessages (backwards) {\n    const extremity = backwards ? earliest : latest\n    let date = extremity.messageTable.date // day in mssecs\n\n    date = await dateFolder.loadPrevious(date, backwards) // backwards\n    debug.log(\n      `insertPreviousMessages: from ${\n        backwards ? 'backwards' : 'forwards'\n      } loadPrevious: ${date}`\n    )\n    if (!date && !backwards && !liveMessageTable) {\n      await appendCurrentMessages() // If necessary skip to today and add that\n    }\n    if (!date) return true // done\n    let live = false\n    if (!backwards) {\n      const todayDoc = dateFolder.leafDocumentFromDate(new Date())\n      const doc = dateFolder.leafDocumentFromDate(date)\n      live = doc.sameTerm(todayDoc) // Is this todays?\n    }\n    const newMessageTable = await createMessageTable(date, live)\n    extremity.messageTable = newMessageTable // move pointer to earliest\n    if (backwards ? newestFirst : !newestFirst) {\n      // put on bottom or top\n      div.appendChild(newMessageTable)\n    } else {\n      // put on top as we scroll back\n      div.insertBefore(newMessageTable, div.firstChild)\n    }\n    return live // not done\n  }\n\n  /* Remove message tables earlier than this one\n   */\n  function removePreviousMessages (backwards, messageTable) {\n    if (backwards ? newestFirst : !newestFirst) {\n      // it was put on bottom\n      while (messageTable.nextSibling) {\n        div.removeChild(messageTable.nextSibling)\n      }\n    } else {\n      // it was put on top as we scroll back\n      while (messageTable.previousSibling) {\n        div.removeChild(messageTable.previousSibling)\n      }\n    }\n    const extr = backwards ? earliest : latest\n    extr.messageTable = messageTable\n  }\n\n  /* Load and render message table\n   ** @returns DOM element generates\n   */\n  async function createMessageTable (date, live) {\n    debug.log('   createMessageTable for  ' + date)\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    try {\n      await store.fetcher.load(chatDocument)\n    } catch (err) {\n      const messageTable = dom.createElement('table')\n      const statusTR = messageTable.appendChild(dom.createElement('tr')) // ### find status in exception\n      if (err.response && err.response.status && err.response.status === 404) {\n        debug.log('Error 404 for chat file ' + chatDocument)\n        return renderMessageTable(date, live) // no mssage file is fine.. will be craeted later\n        // statusTR.appendChild(widgets.errorMessageBlock(dom, 'no message file', 'white'))\n      } else {\n        debug.log('*** Error NON 404 for chat file ' + chatDocument)\n        statusTR.appendChild(widgets.errorMessageBlock(dom, err, 'pink'))\n      }\n      return statusTR\n    }\n    return renderMessageTable(date, live)\n  }\n\n  function renderMessageTable (date, live) {\n    let scrollBackbutton\n    let scrollForwardButton\n\n    /// /////////////////   Scroll down adding more above\n\n    async function extendBackwards () {\n      const done = await insertPreviousMessages(true)\n      if (done) {\n        if (scrollBackbutton) {\n          scrollBackbutton.firstChild.setAttribute(\n            'src',\n            icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n          ) // T\n          scrollBackbutton.disabled = true\n        }\n        messageTable.initial = true\n      } else {\n        messageTable.extendedBack = true\n      }\n      setScrollBackbuttonIcon()\n      return done\n    }\n\n    function setScrollBackbuttonIcon () {\n      if (!scrollBackbutton) {\n        return\n      }\n      const sense = messageTable.extendedBack ? !newestFirst : newestFirst\n      const scrollBackIcon = messageTable.initial\n        ? 'noun_T-Block_1114655_000000.svg'\n        : getScrollbackIcon(sense)\n      scrollBackbutton.firstChild.setAttribute(\n        'src',\n        icons.iconBase + scrollBackIcon\n      )\n\n      function getScrollbackIcon (sense) {\n        return sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollBackbuttonHandler (_event) {\n      if (messageTable.extendedBack) {\n        removePreviousMessages(true, messageTable)\n        messageTable.extendedBack = false\n        setScrollBackbuttonIcon()\n      } else {\n        await extendBackwards()\n      }\n    }\n\n    /// ////////////// Scroll up adding more below\n\n    async function extendForwards () {\n      const done = await insertPreviousMessages(false)\n      if (done) {\n        scrollForwardButton.firstChild.setAttribute(\n          'src',\n          icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n        )\n        scrollForwardButton.disabled = true\n        messageTable.final = true\n      } else {\n        messageTable.extendedForwards = true\n      }\n      setScrollForwardButtonIcon()\n      return done\n    }\n\n    function setScrollForwardButtonIcon () {\n      const sense = messageTable.extendedForwards ? !newestFirst : newestFirst // noun_T-Block_1114657_000000.svg\n      const scrollForwardIcon = messageTable.final\n        ? 'noun_T-Block_1114657_000000.svg'\n        : getScrollForwardButtonIcon(sense)\n      scrollForwardButton.firstChild.setAttribute(\n        'src',\n        icons.iconBase + scrollForwardIcon\n      )\n\n      function getScrollForwardButtonIcon (sense) {\n        return !sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollForwardButtonHandler (_event) {\n      if (messageTable.extendedForwards) {\n        removePreviousMessages(false, messageTable)\n        messageTable.extendedForwards = false\n        setScrollForwardButtonIcon()\n      } else {\n        await extendForwards() // async\n        latest.messageTable.scrollIntoView(newestFirst)\n      }\n    }\n\n    /// ///////////////////////\n    /*\n    options = options || {}\n    options.authorDateOnLeft = true\n    const newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n    const channelObject = new ChatChannel(chatChannel, options)\n    const dateFolder = channelObject.dateFolder\n\n    const div = dom.createElement('div')\n    const statusArea = div.appendChild(dom.createElement('div'))\n    const userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n\n*/\n    const messageTable = dom.createElement('table')\n\n    messageTable.extendBackwards = extendBackwards // Make function available to scroll stuff\n    messageTable.extendForwards = extendForwards // Make function available to scroll stuff\n\n    messageTable.date = date\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    messageTable.chatDocument = chatDocument\n\n    messageTable.fresh = false\n    messageTable.setAttribute('style', 'width: 100%;') // fill that div!\n    if (live) {\n      messageTable.final = true\n      liveMessageTable = messageTable\n      latest.messageTable = messageTable\n      const tr = renderMessageEditor(channelObject, messageTable, userContext, options)\n      if (newestFirst) {\n        messageTable.insertBefore(tr, messageTable.firstChild) // If newestFirst\n      } else {\n        messageTable.appendChild(tr) // not newestFirst\n      }\n      messageTable.inputRow = tr\n    }\n\n    /// ///// Infinite scroll\n    //\n    // @@ listen for swipe past end event not just button\n    if (options.infinite) {\n      const scrollBackbuttonTR = dom.createElement('tr')\n      const scrollBackbuttonCell = scrollBackbuttonTR.appendChild(\n        dom.createElement('td')\n      )\n      // up traingles: noun_1369237.svg\n      // down triangles: noun_1369241.svg\n      const scrollBackIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollBackbutton = widgets.button(\n        dom,\n        icons.iconBase + scrollBackIcon,\n        'Previous messages ...'\n      )\n      scrollBackbuttonCell.style = 'width:3em; height:3em;'\n      scrollBackbutton.addEventListener('click', scrollBackbuttonHandler, false)\n      messageTable.extendedBack = false\n      scrollBackbuttonCell.appendChild(scrollBackbutton)\n      setScrollBackbuttonIcon()\n\n      const dateCell = scrollBackbuttonTR.appendChild(dom.createElement('td'))\n      dateCell.style =\n        'text-align: center; vertical-align: middle; color: #888; font-style: italic;'\n      dateCell.textContent = widgets.shortDate(date.toISOString(), true) // no time, only date\n\n      // @@@@@@@@@@@ todo move this button to other end of  message cell, o\n      const scrollForwardButtonCell = scrollBackbuttonTR.appendChild(\n        dom.createElement('td')\n      )\n      const scrollForwardIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollForwardButton = widgets.button(\n        dom,\n        icons.iconBase + scrollForwardIcon,\n        'Later messages ...'\n      )\n      scrollForwardButtonCell.appendChild(scrollForwardButton)\n      scrollForwardButtonCell.style = 'width:3em; height:3em;'\n      scrollForwardButton.addEventListener(\n        'click',\n        scrollForwardButtonHandler,\n        false\n      )\n      messageTable.extendedForward = false\n      setScrollForwardButtonIcon()\n\n      messageTable.extendedForwards = false\n\n      if (!newestFirst) {\n        // opposite end from the entry field\n        messageTable.insertBefore(scrollBackbuttonTR, messageTable.firstChild) // If not newestFirst\n      } else {\n        messageTable.appendChild(scrollBackbuttonTR) //  newestFirst\n      }\n    }\n\n    const sts = store.statementsMatching(null, ns.wf('message'), null, chatDocument)\n    if (!live && sts.length === 0) {\n      // not todays\n      // no need buttomns at the moment\n      // messageTable.style.visibility = 'collapse' // Hide files with no messages\n    }\n    sts.forEach(st => {\n      addMessage(st.object, messageTable)\n    })\n    messageTable.fresh = true\n\n    // loadMessageTable(messageTable, chatDocument)\n    messageTable.fresh = false\n    return messageTable\n  } // renderMessageTable\n\n  async function addNewChatDocumentIfNewDay () {\n    // @@ Remove listener from previous table as it is now static\n    const newChatDocument = dateFolder.leafDocumentFromDate(new Date())\n    if (!newChatDocument.sameTerm(latest.messageTable.chatDocument)) {\n      // It is a new day\n      if (liveMessageTable.inputRow) {\n        liveMessageTable.removeChild(liveMessageTable.inputRow)\n        delete liveMessageTable.inputRow\n      }\n      const oldChatDocument = latest.messageTable.chatDocument\n      await appendCurrentMessages()\n      // Adding a link in the document will ping listeners to add the new block too\n      if (\n        !store.holds(\n          oldChatDocument,\n          ns.rdfs('seeAlso'),\n          newChatDocument,\n          oldChatDocument\n        )\n      ) {\n        const sts = [\n          $rdf.st(\n            oldChatDocument,\n            ns.rdfs('seeAlso'),\n            newChatDocument,\n            oldChatDocument\n          )\n        ]\n        try {\n          store.updater.update([], sts)\n        } catch (err) {\n          alert('Unable to link old chat file to new one:' + err)\n        }\n      }\n    }\n  }\n\n  /*\n  function messageCount () {\n    var n = 0\n    const tables = div.children\n    for (let i = 0; i < tables.length; i++) {\n      n += tables[i].children.length - 1\n      // debug.log('    table length:' + tables[i].children.length)\n    }\n    return n\n  }\n*/\n\n  /* Add the live message block with entry field for today\n   */\n  async function appendCurrentMessages () {\n    const now = new Date()\n    const chatDocument = dateFolder.leafDocumentFromDate(now)\n\n    /// ///////////////////////////////////////////////////////////\n    const messageTable = await createMessageTable(now, true)\n    div.appendChild(messageTable)\n    div.refresh = async function () {\n      // only the last messageTable is live\n      await addNewChatDocumentIfNewDay(new Date())\n      syncMessages(chatChannel, messageTable) // @@ livemessagetable??\n      desktopNotification(chatChannel)\n    } // The short chat version the live update listening is done in the pane but we do it in the widget @@\n    store.updater.addDownstreamChangeListener(chatDocument, div.refresh) // Live update\n    liveMessageTable = messageTable\n    latest.messageTable = liveMessageTable\n    return messageTable\n  }\n\n  async function loadMoreWhereNeeded (event, fixScroll) {\n    if (lock) return\n    lock = true\n    const freeze = !fixScroll\n    const magicZone = 150\n    // const top = div.scrollTop\n    // const bottom = div.scrollHeight - top - div.clientHeight\n    let done\n\n    while (\n      div.scrollTop < magicZone &&\n      earliest.messageTable &&\n      !earliest.messageTable.initial &&\n      earliest.messageTable.extendBackwards\n    ) {\n      // If this has been called before the element is actually in the\n      // user's DOM tree, then this scrollTop check won't work -> loop forever\n      // https://github.com/solidos/solid-ui/issues/366\n      if (div.scrollHeight === 0) {\n        // console.log('    chat/loadMoreWhereNeeded: trying later...')\n        setTimeout(loadMoreWhereNeeded, 2000) // couple be less\n        lock = false\n        return // abandon now, do later\n      }\n      // console.log('    chat/loadMoreWhereNeeded: Going now')\n      const scrollBottom = div.scrollHeight - div.scrollTop\n      debug.log('infinite scroll: adding above: top ' + div.scrollTop)\n      done = await earliest.messageTable.extendBackwards()\n      if (freeze) {\n        div.scrollTop = div.scrollHeight - scrollBottom\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    while (\n      options.selectedMessage && // we started in the middle not at the bottom\n      div.scrollHeight - div.scrollTop - div.clientHeight < magicZone && // we are scrolled right to the bottom\n      latest.messageTable &&\n      !latest.messageTable.final && // there is more data to come\n      latest.messageTable.extendForwards\n    ) {\n      const scrollTop = div.scrollTop\n      debug.log(\n        'infinite scroll: adding below: bottom: ' +\n        (div.scrollHeight - div.scrollTop - div.clientHeight)\n      )\n      done = await latest.messageTable.extendForwards() // then add more data on the bottom\n      if (freeze) {\n        div.scrollTop = scrollTop // while adding below keep same things in view\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    lock = false\n  }\n\n  async function loadInitialContent () {\n    function yank () {\n      selectedMessageTable.selectedElement.scrollIntoView({ block: 'center' })\n    }\n\n    // During initial load ONLY keep scroll to selected thing or bottom\n    function fixScroll () {\n      if (options.selectedElement) {\n        options.selectedElement.scrollIntoView({ block: 'center' }) // align tops or bottoms\n      } else {\n        if (liveMessageTable.inputRow.scrollIntoView) {\n          liveMessageTable.inputRow.scrollIntoView(newestFirst) // align tops or bottoms\n        }\n      }\n    }\n\n    let live, selectedDocument\n    if (options.selectedMessage) {\n      selectedDocument = options.selectedMessage.doc()\n      const now = new Date()\n      const todayDocument = dateFolder.leafDocumentFromDate(now)\n      live = todayDocument.sameTerm(selectedDocument)\n    }\n    let selectedMessageTable\n    if (options.selectedMessage && !live) {\n      const selectedDate = dateFolder.dateFromLeafDocument(selectedDocument)\n      selectedMessageTable = await createMessageTable(selectedDate, live)\n      div.appendChild(selectedMessageTable)\n      earliest.messageTable = selectedMessageTable\n      latest.messageTable = selectedMessageTable\n      yank()\n      setTimeout(yank, 1000) // @@ kludge - restore position distubed by other cHANGES\n    } else {\n      // Live end\n      await appendCurrentMessages()\n      earliest.messageTable = liveMessageTable\n      latest.messageTable = liveMessageTable\n    }\n\n    await loadMoreWhereNeeded(null, fixScroll)\n    div.addEventListener('scroll', loadMoreWhereNeeded)\n    if (options.solo) {\n      document.body.addEventListener('scroll', loadMoreWhereNeeded)\n    }\n  }\n\n  // Body of main function\n\n  options = options || {}\n  options.authorDateOnLeft = false // @@ make a user optiosn\n  const newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n\n  const channelObject = new ChatChannel(chatChannel, options)\n  const dateFolder = channelObject.dateFolder\n\n  const div = dom.createElement('div')\n  channelObject.div = div\n\n  const statusArea = div.appendChild(dom.createElement('div'))\n  const userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n\n  // const messageTable = dom.createElement('table') // @@ check does this go in renderMessageTable\n\n  let liveMessageTable\n  const earliest = { messageTable: null } // Stuff about each end of the loaded days\n  const latest = { messageTable: null }\n\n  let lock = false\n\n  await loadInitialContent()\n  return div\n}\n"],"mappings":"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"}