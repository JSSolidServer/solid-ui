{"version":3,"sources":["../../src/chat/infinite.js"],"names":["$rdf","require","DateFolder","SERVER_MKDIRP_BUG","UI","authn","icons","ns","media","pad","rdf","store","style","utils","widgets","renderMessage","creatorAndDate","bookmarks","createIfNotExists","doc","contentType","data","fetcher","load","response","status","debug","log","webOperation","uri","requested","desktopNotification","str","window","warn","Notification","permission","requestPermission","then","infiniteMessageArea","dom","kb","chatChannel","options","WF","Namespace","DCT","newestFirst","dateFolder","authorAboveContent","messageBodyStyle","div","createElement","menuButton","statusArea","appendChild","userContext","me","updater","newMessageForm","messageTable","form","lhs","middle","rhs","AJAR_date","field","sendButton","sendMessage","text","sendComplete","bindings","message","content","dateStamp","liveMessageTable","value","setAttribute","disabled","scrollIntoView","focus","select","now","Date","addNewTableIfNewDay","sts","timestamp","getTime","term","chatDocument","leafDocumentFromDate","sym","literal","push","Statement","wf","sioc","foaf","undefined","update","errorMessageBlock","droppedFileHandler","files","base","dir","uploadFiles","theFile","destURI","droppedURIHandler","uris","turnOnInput","menuHandler","menuOptions","newBase","addEventListener","event","innerHTML","rows","e","keyCode","altKey","makeDropTarget","button","iconBase","buttonStyle","_event","imageDoc","getImageDoc","tookPicture","cameraButton","recordParticipation","context","logIn","Object","assign","findBookmarkDocument","bookmarkDocument","syncMessages","about","displayed","ele","ele2","firstChild","nextSibling","AJAR_subject","messages","statementsMatching","map","st","object","stored","m","addMessage","removeChild","refreshTree","any","fresh","insertPreviousMessages","backwards","extremity","earliest","latest","date","loadPrevious","appendCurrentMessages","live","todayDoc","sameTerm","createMessageTable","newMessageTable","insertBefore","removePreviousMessages","previousSibling","extr","statusTR","renderMessageTable","scrollBackButton","scrollForwardButton","extendBackwards","done","initial","extendedBack","setScrollBackButtonIcon","sense","scrollBackIcon","getScrollbackIcon","scrollBackButtonHandler","extendForwards","extendedForwards","setScrollForwardButtonIcon","scrollForwardIcon","getScrollForwardButtonIcon","scrollForwardButtonHandler","tr","inputRow","infinite","scrollBackButtonTR","scrollBackButtonCell","dateCell","textContent","shortDate","toISOString","scrollForwardButtonCell","extendedForward","length","forEach","newChatDocument","oldChatDocument","holds","rdfs","ok","body","alert","refresh","addDownstreamChangeListener","lock","loadMoreWhereNeeded","fixScroll","freeze","magicZone","scrollTop","scrollBottom","scrollHeight","selectedMessage","clientHeight","go","yank","selectedElement","block","selectedMessageTable","selectedDocument","todayDocument","selectedDate","dateFromLeafDocument","setTimeout","solo","document"],"mappings":"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","sourcesContent":["/**\n * Contains the [[infiniteMessageArea]] class\n * @packageDocumentation\n */\n\n/* global alert */\nimport * as debug from '../debug'\n\nconst $rdf = require('rdflib')\nconst DateFolder = require('./dateFolder')\n\n// @@ trace20190428T1745\n\nconst SERVER_MKDIRP_BUG = true\n\nconst UI = {\n  authn: require('../authn/authn'),\n  icons: require('../iconBase'),\n  ns: require('../ns'),\n  media: require('../media-capture'),\n  pad: require('../pad'),\n  rdf: require('rdflib'),\n  store: require('../store'),\n  style: require('../style'),\n  utils: require('../utils'),\n  widgets: require('../widgets')\n}\n\n// const utils = require('./utils')\nconst { renderMessage, creatorAndDate } = require('./message')\nconst bookmarks = require('./bookmarks')\n\n// module.exports = module.exports || {}\n// module.exports.infiniteMessageArea =\n\nasync function createIfNotExists (doc, contentType = 'text/turtle', data = '') {\n  const fetcher = UI.store.fetcher\n  try {\n    var response = await fetcher.load(doc)\n  } catch (err) {\n    if (err.response.status === 404) {\n      debug.log(\n        'createIfNotExists: doc does NOT exist, will create... ' + doc\n      )\n      try {\n        response = await fetcher.webOperation('PUT', doc.uri, {\n          data,\n          contentType\n        })\n      } catch (err) {\n        debug.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\n        throw err\n      }\n      delete fetcher.requested[doc.uri] // delete cached 404 error\n      // debug.log('createIfNotExists doc created ok ' + doc)\n      return response\n    } else {\n      debug.log(\n        'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\n      )\n      throw err\n    }\n  }\n  // debug.log('createIfNotExists: doc exists, all good: ' + doc)\n  return response\n}\n\nfunction desktopNotification (str) {\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    debug.warn('This browser does not support desktop notification')\n  } else if (Notification.permission === 'granted') {\n    // Let's check whether notification permissions have already been granted\n    // eslint-disable-next-line no-new\n    new Notification(str)\n  } else if (Notification.permission !== 'denied') {\n    // Otherwise, we need to ask the user for permission\n    Notification.requestPermission().then(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === 'granted') {\n        // eslint-disable-next-line no-new\n        new Notification(str)\n      }\n    })\n  }\n\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n */\nexport function infiniteMessageArea (dom, kb, chatChannel, options) {\n  kb = kb || UI.store\n  const ns = UI.ns\n  const WF = $rdf.Namespace('http://www.w3.org/2005/01/wf/flow#')\n  const DCT = $rdf.Namespace('http://purl.org/dc/terms/')\n  // const POSIX = $rdf.Namespace('http://www.w3.org/ns/posix/stat#')\n\n  options = options || {}\n\n  var newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n\n  const dateFolder = new DateFolder(chatChannel, 'chat.ttl')\n\n  options.authorAboveContent = true\n\n  // var participation // An object tracking users use and prefs\n  const messageBodyStyle = UI.style.messageBodyStyle\n\n  // var messageBodyStyle = 'white-space: pre-wrap; width: 90%; font-size:100%; border: 0.07em solid #eee; padding: .2em 0.5em; margin: 0.1em 1em 0.1em 1em;'\n  // 'font-size: 100%; margin: 0.1em 1em 0.1em 1em;  background-color: white; white-space: pre-wrap; padding: 0.1em;'\n\n  var div = dom.createElement('div')\n  var menuButton\n  const statusArea = div.appendChild(dom.createElement('div'))\n  var userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n  var me\n\n  var updater = UI.store.updater\n\n  /** Does a file exist on the web?\n   * @returns {Boolean}\n   */\n  /*\n  async function documentExists (doc) {\n    try {\n      await kb.fetcher.load(doc)\n    } catch (err) {\n      if (err.response.status === 404) {\n        return false\n      } else {\n        debug.log('documentExists: doc load error NOT 404:  ' + doc + ': ' + err)\n        throw err\n      }\n    }\n    return true\n  }\n*/\n\n  /*       Form for a new message\n   */\n  function newMessageForm (messageTable) {\n    var form = dom.createElement('tr')\n    var lhs = dom.createElement('td')\n    var middle = dom.createElement('td')\n    var rhs = dom.createElement('td')\n    form.appendChild(lhs)\n    form.appendChild(middle)\n    form.appendChild(rhs)\n    form.AJAR_date = '9999-01-01T00:00:00Z' // ISO format for field sort\n    var field, sendButton\n\n    async function sendMessage (text) {\n      var now = new Date()\n      await addNewTableIfNewDay(now)\n\n      if (!text) {\n        field.setAttribute('style', messageBodyStyle + 'color: #bbb;') // pendingedit\n        field.disabled = true\n      }\n      var sts = []\n      var timestamp = '' + now.getTime()\n      var dateStamp = $rdf.term(now)\n      const chatDocument = dateFolder.leafDocumentFromDate(now)\n\n      var message = kb.sym(chatDocument.uri + '#' + 'Msg' + timestamp)\n      var content = kb.literal(text || field.value)\n      // if (text) field.value = text  No - don't destroy half-finsihed user input\n\n      sts.push(\n        new $rdf.Statement(chatChannel, ns.wf('message'), message, chatDocument)\n      )\n      sts.push(\n        new $rdf.Statement(message, ns.sioc('content'), content, chatDocument)\n      )\n      sts.push(\n        new $rdf.Statement(message, DCT('created'), dateStamp, chatDocument)\n      )\n      if (me) {\n        sts.push(\n          new $rdf.Statement(message, ns.foaf('maker'), me, chatDocument)\n        )\n      }\n\n      function sendComplete () {\n        var bindings = {\n          '?msg': message,\n          '?content': content,\n          '?date': dateStamp,\n          '?creator': me\n        }\n        renderMessage(liveMessageTable, bindings, false, options, userContext) // not green\n\n        if (!text) {\n          field.value = '' // clear from out for reuse\n          field.setAttribute('style', messageBodyStyle)\n          field.disabled = false\n          field.scrollIntoView(newestFirst) // allign bottom (top)\n          field.focus() // Start typing next line immediately\n          field.select()\n        }\n      }\n\n      if (\n        SERVER_MKDIRP_BUG &&\n        (kb.fetcher.requested[chatDocument.uri] === undefined ||\n          kb.fetcher.requested[chatDocument.uri] === 404)\n      ) {\n        debug.log(\n          '@@@ SERVER_MKDIRP_BUG: Should only happen once: create chat file: ' +\n          chatDocument\n        )\n        await createIfNotExists(chatDocument)\n      }\n      try {\n        await updater.update([], sts)\n      } catch (err) {\n        form.appendChild(\n          UI.widgets.errorMessageBlock(dom, 'Error writing message: ' + err)\n        )\n        return\n      }\n      sendComplete()\n    } // sendMessage\n\n    form.appendChild(dom.createElement('br'))\n\n    //    DRAG AND DROP\n    function droppedFileHandler (files) {\n      const base = messageTable.chatDocument.dir().uri\n      UI.widgets.uploadFiles(\n        kb.fetcher,\n        files,\n        base + 'Files',\n        base + 'Pictures',\n        async function (theFile, destURI) {\n          // @@@@@@ Wait for eachif several\n          await sendMessage(destURI)\n        }\n      )\n    }\n\n    // When a set of URIs are dropped on the field\n    var droppedURIHandler = async function (uris) {\n      for (var uri of uris) {\n        await sendMessage(uri)\n      }\n    }\n\n    // When we are actually logged on\n    function turnOnInput () {\n      if (options.menuHandler && menuButton) {\n        const menuOptions = {\n          me,\n          dom,\n          div,\n          newBase: messageTable.chatDocument.dir().uri\n        }\n        menuButton.addEventListener(\n          'click',\n          event => {\n            options.menuHandler(event, chatChannel, menuOptions)\n          },\n          false\n        )\n      }\n\n      // Turn on message input\n      creatorAndDate(lhs, me, '', null)\n\n      field = dom.createElement('textarea')\n      middle.innerHTML = ''\n      middle.appendChild(field)\n      field.rows = 3\n      // field.cols = 40\n      field.setAttribute('style', messageBodyStyle + 'background-color: #eef;')\n\n      // Trap the Enter BEFORE it is used ti make a newline\n      field.addEventListener(\n        'keydown',\n        async function (e) {\n          // User preference?\n          if (e.keyCode === 13) {\n            if (!e.altKey) {\n              // Alt-Enter just adds a new line\n              await sendMessage()\n            }\n          }\n        },\n        false\n      )\n      UI.widgets.makeDropTarget(field, droppedURIHandler, droppedFileHandler)\n\n      rhs.innerHTML = ''\n      sendButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + 'noun_383448.svg',\n        'Send'\n      )\n      sendButton.setAttribute('style', UI.style.buttonStyle + 'float: right;')\n      sendButton.addEventListener('click', _event => sendMessage(), false)\n      rhs.appendChild(sendButton)\n\n      const chatDocument = dateFolder.leafDocumentFromDate(new Date())\n      var imageDoc\n\n      function getImageDoc () {\n        imageDoc = kb.sym(\n          chatDocument.dir().uri + 'Image_' + Date.now() + '.png'\n        )\n        return imageDoc\n      }\n\n      async function tookPicture (imageDoc) {\n        if (imageDoc) {\n          await sendMessage(imageDoc.uri)\n        }\n      }\n\n      middle.appendChild(\n        UI.media.cameraButton(dom, kb, getImageDoc, tookPicture)\n      )\n\n      UI.pad.recordParticipation(chatChannel, chatChannel.doc()) // participation =\n    } // turn on inpuut\n\n    const context = { div: middle, dom: dom }\n    UI.authn.logIn(context).then(context => {\n      me = context.me\n      turnOnInput()\n      Object.assign(context, userContext)\n      bookmarks.findBookmarkDocument(context).then(context => {\n        debug.log('Bookmark file: ' + context.bookmarkDocument)\n      })\n    })\n\n    return form\n  }\n\n  // ///////////////////////////////////////////////////////////////////////\n\n  function syncMessages (about, messageTable) {\n    var displayed = {}\n    var ele, ele2\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        displayed[ele.AJAR_subject.uri] = true\n      }\n    }\n\n    var messages = kb\n      .statementsMatching(\n        about,\n        ns.wf('message'),\n        null,\n        messageTable.chatDocument\n      )\n      .map(st => {\n        return st.object\n      })\n    var stored = {}\n    messages.map(function (m) {\n      stored[m.uri] = true\n      if (!displayed[m.uri]) {\n        addMessage(m, messageTable)\n      }\n    })\n\n    // eslint-disable-next-line space-in-parens\n    for (ele = messageTable.firstChild; ele;) {\n      ele2 = ele.nextSibling\n      if (ele.AJAR_subject && !stored[ele.AJAR_subject.uri]) {\n        messageTable.removeChild(ele)\n      }\n      ele = ele2\n    }\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        // Refresh thumbs up etc\n        UI.widgets.refreshTree(ele) // Things inside may have changed too\n      }\n    }\n  } // syncMessages\n\n  var addMessage = function (message, messageTable) {\n    var bindings = {\n      '?msg': message,\n      '?creator': kb.any(message, ns.foaf('maker')),\n      '?date': kb.any(message, DCT('created')),\n      '?content': kb.any(message, ns.sioc('content'))\n    }\n    renderMessage(\n      messageTable,\n      bindings,\n      messageTable.fresh,\n      options,\n      userContext\n    ) // fresh from elsewhere\n  }\n\n  // ////////\n\n  /* Add a new messageTable at the top/bottom\n   */\n  async function insertPreviousMessages (backwards) {\n    const extremity = backwards ? earliest : latest\n    let date = extremity.messageTable.date // day in mssecs\n\n    date = await dateFolder.loadPrevious(date, backwards) // backwards\n    debug.log(\n      `insertPreviousMessages: from ${\n        backwards ? 'backwards' : 'forwards'\n      } loadPrevious: ${date}`\n    )\n    if (!date && !backwards && !liveMessageTable) {\n      await appendCurrentMessages() // If necessary skip to today and add that\n    }\n    if (!date) return true // done\n    var live = false\n    if (!backwards) {\n      const todayDoc = dateFolder.leafDocumentFromDate(new Date())\n      const doc = dateFolder.leafDocumentFromDate(date)\n      live = doc.sameTerm(todayDoc) // Is this todays?\n    }\n    const newMessageTable = await createMessageTable(date, live)\n    extremity.messageTable = newMessageTable // move pointer to earliest\n    if (backwards ? newestFirst : !newestFirst) {\n      // put on bottom or top\n      div.appendChild(newMessageTable)\n    } else {\n      // put on top as we scroll back\n      div.insertBefore(newMessageTable, div.firstChild)\n    }\n    return live // not done\n  }\n\n  /* Remove message tables earlier than this one\n   */\n  function removePreviousMessages (backwards, messageTable) {\n    if (backwards ? newestFirst : !newestFirst) {\n      // it was put on bottom\n      while (messageTable.nextSibling) {\n        div.removeChild(messageTable.nextSibling)\n      }\n    } else {\n      // it was put on top as we scroll back\n      while (messageTable.previousSibling) {\n        div.removeChild(messageTable.previousSibling)\n      }\n    }\n    const extr = backwards ? earliest : latest\n    extr.messageTable = messageTable\n  }\n\n  /* Load and render message table\n   ** @returns DOM element generates\n   */\n  async function createMessageTable (date, live) {\n    debug.log('   createMessageTable for  ' + date)\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    try {\n      await kb.fetcher.load(chatDocument)\n    } catch (err) {\n      const messageTable = dom.createElement('table')\n      const statusTR = messageTable.appendChild(dom.createElement('tr')) // ### find status in exception\n      if (err.response && err.response.status && err.response.status === 404) {\n        debug.log('Error 404 for chat file ' + chatDocument)\n        return renderMessageTable(date, live) // no mssage file is fine.. will be craeted later\n        // statusTR.appendChild(UI.widgets.errorMessageBlock(dom, 'no message file', 'white'))\n      } else {\n        debug.log('*** Error NON 404 for chat file ' + chatDocument)\n        statusTR.appendChild(UI.widgets.errorMessageBlock(dom, err, 'pink'))\n      }\n      return statusTR\n    }\n    return renderMessageTable(date, live)\n  }\n\n  function renderMessageTable (date, live) {\n    var scrollBackButton\n    var scrollForwardButton\n\n    /// /////////////////   Scroll down adding more above\n\n    async function extendBackwards () {\n      const done = await insertPreviousMessages(true)\n      if (done) {\n        scrollBackButton.firstChild.setAttribute(\n          'src',\n          UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n        ) // T\n        scrollBackButton.disabled = true\n        messageTable.initial = true\n      } else {\n        messageTable.extendedBack = true\n      }\n      setScrollBackButtonIcon()\n      return done\n    }\n\n    function setScrollBackButtonIcon () {\n      const sense = messageTable.extendedBack ? !newestFirst : newestFirst\n      const scrollBackIcon = messageTable.initial\n        ? 'noun_T-Block_1114655_000000.svg'\n        : getScrollbackIcon(sense)\n      scrollBackButton.firstChild.setAttribute(\n        'src',\n        UI.icons.iconBase + scrollBackIcon\n      )\n\n      function getScrollbackIcon (sense) {\n        return sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollBackButtonHandler (_event) {\n      if (messageTable.extendedBack) {\n        removePreviousMessages(true, messageTable)\n        messageTable.extendedBack = false\n        setScrollBackButtonIcon()\n      } else {\n        await extendBackwards()\n      }\n    }\n\n    /// ////////////// Scroll up adding more below\n\n    async function extendForwards () {\n      const done = await insertPreviousMessages(false)\n      if (done) {\n        scrollForwardButton.firstChild.setAttribute(\n          'src',\n          UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n        )\n        scrollForwardButton.disabled = true\n        messageTable.final = true\n      } else {\n        messageTable.extendedForwards = true\n      }\n      setScrollForwardButtonIcon()\n      return done\n    }\n\n    function setScrollForwardButtonIcon () {\n      const sense = messageTable.extendedForwards ? !newestFirst : newestFirst // noun_T-Block_1114657_000000.svg\n      const scrollForwardIcon = messageTable.final\n        ? 'noun_T-Block_1114657_000000.svg'\n        : getScrollForwardButtonIcon(sense)\n      scrollForwardButton.firstChild.setAttribute(\n        'src',\n        UI.icons.iconBase + scrollForwardIcon\n      )\n\n      function getScrollForwardButtonIcon (sense) {\n        return !sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollForwardButtonHandler (_event) {\n      if (messageTable.extendedForwards) {\n        removePreviousMessages(false, messageTable)\n        messageTable.extendedForwards = false\n        setScrollForwardButtonIcon()\n      } else {\n        await extendForwards() // async\n        latest.messageTable.scrollIntoView(newestFirst)\n      }\n    }\n\n    /// ///////////////////////\n\n    var messageTable = dom.createElement('table')\n\n    messageTable.extendBackwards = extendBackwards // Make function available to scroll stuff\n    messageTable.extendForwards = extendForwards // Make function available to scroll stuff\n    // var messageButton\n    messageTable.date = date\n    var chatDocument = dateFolder.leafDocumentFromDate(date)\n    messageTable.chatDocument = chatDocument\n\n    messageTable.fresh = false\n    messageTable.setAttribute('style', 'width: 100%;') // fill that div!\n\n    if (live) {\n      messageTable.final = true\n      liveMessageTable = messageTable\n      latest.messageTable = messageTable\n      var tr = newMessageForm(messageTable)\n      if (newestFirst) {\n        messageTable.insertBefore(tr, messageTable.firstChild) // If newestFirst\n      } else {\n        messageTable.appendChild(tr) // not newestFirst\n      }\n      messageTable.inputRow = tr\n    }\n\n    /// ///// Infinite scroll\n    //\n    // @@ listen for swipe past end event not just button\n    if (options.infinite) {\n      const scrollBackButtonTR = dom.createElement('tr')\n      const scrollBackButtonCell = scrollBackButtonTR.appendChild(\n        dom.createElement('td')\n      )\n      // up traingles: noun_1369237.svg\n      // down triangles: noun_1369241.svg\n      const scrollBackIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollBackButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + scrollBackIcon,\n        'Previous messages ...'\n      )\n      scrollBackButtonCell.style = 'width:3em; height:3em;'\n      scrollBackButton.addEventListener('click', scrollBackButtonHandler, false)\n      messageTable.extendedBack = false\n      scrollBackButtonCell.appendChild(scrollBackButton)\n      setScrollBackButtonIcon()\n\n      const dateCell = scrollBackButtonTR.appendChild(dom.createElement('td'))\n      dateCell.style =\n        'text-align: center; vertical-align: middle; color: #888; font-style: italic;'\n      dateCell.textContent = UI.widgets.shortDate(date.toISOString(), true) // no time, only date\n\n      // @@@@@@@@@@@ todo move this button to other end of  message cell, o\n      const scrollForwardButtonCell = scrollBackButtonTR.appendChild(\n        dom.createElement('td')\n      )\n      const scrollForwardIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollForwardButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + scrollForwardIcon,\n        'Later messages ...'\n      )\n      scrollForwardButtonCell.appendChild(scrollForwardButton)\n      scrollForwardButtonCell.style = 'width:3em; height:3em;'\n      scrollForwardButton.addEventListener(\n        'click',\n        scrollForwardButtonHandler,\n        false\n      )\n      messageTable.extendedForward = false\n      setScrollForwardButtonIcon()\n\n      messageTable.extendedForwards = false\n\n      if (!newestFirst) {\n        // opposite end from the entry field\n        messageTable.insertBefore(scrollBackButtonTR, messageTable.firstChild) // If not newestFirst\n      } else {\n        messageTable.appendChild(scrollBackButtonTR) //  newestFirst\n      }\n    }\n\n    const sts = kb.statementsMatching(null, WF('message'), null, chatDocument)\n    if (!live && sts.length === 0) {\n      // not todays\n      // no need buttomns at the moment\n      // messageTable.style.visibility = 'collapse' // Hide files with no messages\n    }\n    sts.forEach(st => {\n      addMessage(st.object, messageTable)\n    })\n    messageTable.fresh = true\n\n    // loadMessageTable(messageTable, chatDocument)\n    messageTable.fresh = false\n    return messageTable\n  } // renderMessageTable\n\n  async function addNewTableIfNewDay (now) {\n    // let now = new Date()\n    // @@ Remove listener from previous table as it is now static\n    const newChatDocument = dateFolder.leafDocumentFromDate(now)\n    if (!newChatDocument.sameTerm(latest.messageTable.chatDocument)) {\n      // It is a new day\n      if (liveMessageTable.inputRow) {\n        liveMessageTable.removeChild(liveMessageTable.inputRow)\n        delete liveMessageTable.inputRow\n      }\n      var oldChatDocument = latest.messageTable.chatDocument\n      await appendCurrentMessages()\n      // Adding a link in the document will ping listeners to add the new block too\n      if (\n        !kb.holds(\n          oldChatDocument,\n          ns.rdfs('seeAlso'),\n          newChatDocument,\n          oldChatDocument\n        )\n      ) {\n        const sts = [\n          $rdf.st(\n            oldChatDocument,\n            ns.rdfs('seeAlso'),\n            newChatDocument,\n            oldChatDocument\n          )\n        ]\n        updater.update([], sts, function (ok, body) {\n          if (!ok) {\n            alert('Unable to link old message block to new one.' + body)\n          }\n        })\n      }\n    }\n  }\n\n  /*\n  function messageCount () {\n    var n = 0\n    const tables = div.children\n    for (let i = 0; i < tables.length; i++) {\n      n += tables[i].children.length - 1\n      // debug.log('    table length:' + tables[i].children.length)\n    }\n    return n\n  }\n*/\n\n  /* Add the live message block with entry field for today\n   */\n  async function appendCurrentMessages () {\n    var now = new Date()\n    var chatDocument = dateFolder.leafDocumentFromDate(now)\n\n    /*   Don't actually make the documemnt until a message is sent  @@@@@ WHEN SERVER FIXED\n     * currently server won't patch to a file ina non-existent directory\n     */\n    /*\n    if (SERVER_MKDIRP_BUG) {\n      try {\n        await createIfNotExists(chatDocument)\n      } catch (e) {\n        div.appendChild(UI.widgets.errorMessageBlock(\n          dom, 'Problem accessing chat file: ' + e))\n        return\n      }\n    }\n    */\n    /// ///////////////////////////////////////////////////////////\n    const messageTable = await createMessageTable(now, true)\n    div.appendChild(messageTable)\n    div.refresh = function () {\n      // only the last messageTable is live\n      addNewTableIfNewDay(new Date()).then(() => {\n        syncMessages(chatChannel, messageTable)\n        desktopNotification(chatChannel)\n      })\n    } // The short chat version fors live update in the pane but we do it in the widget\n    kb.updater.addDownstreamChangeListener(chatDocument, div.refresh) // Live update\n    liveMessageTable = messageTable\n    latest.messageTable = liveMessageTable\n    return messageTable\n  }\n\n  var liveMessageTable\n  var earliest = { messageTable: null } // Stuff about each end of the loaded days\n  var latest = { messageTable: null }\n\n  var lock = false\n\n  async function loadMoreWhereNeeded (event, fixScroll) {\n    if (lock) return\n    lock = true\n    const freeze = !fixScroll\n    const magicZone = 150\n    // const top = div.scrollTop\n    // const bottom = div.scrollHeight - top - div.clientHeight\n    var done\n\n    while (\n      div.scrollTop < magicZone &&\n      earliest.messageTable &&\n      !earliest.messageTable.initial &&\n      earliest.messageTable.extendBackwards\n    ) {\n      const scrollBottom = div.scrollHeight - div.scrollTop\n      debug.log('infinite scroll: adding above: top ' + div.scrollTop)\n      done = await earliest.messageTable.extendBackwards()\n      if (freeze) {\n        div.scrollTop = div.scrollHeight - scrollBottom\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    while (\n      options.selectedMessage && // we started in the middle not at the bottom\n      div.scrollHeight - div.scrollTop - div.clientHeight < magicZone && // we are scrolled right to the bottom\n      latest.messageTable &&\n      !latest.messageTable.final && // there is more data to come\n      latest.messageTable.extendForwards\n    ) {\n      const scrollTop = div.scrollTop\n      debug.log(\n        'infinite scroll: adding below: bottom: ' +\n        (div.scrollHeight - div.scrollTop - div.clientHeight)\n      )\n      done = await latest.messageTable.extendForwards() // then add more data on the bottom\n      if (freeze) {\n        div.scrollTop = scrollTop // while adding below keep same things in view\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    lock = false\n  }\n\n  async function go () {\n    function yank () {\n      selectedMessageTable.selectedElement.scrollIntoView({ block: 'center' })\n    }\n\n    // During initial load ONLY keep scroll to selected thing or bottom\n    function fixScroll () {\n      if (options.selectedElement) {\n        options.selectedElement.scrollIntoView({ block: 'center' }) // allign tops or bopttoms\n      } else {\n        liveMessageTable.inputRow.scrollIntoView(newestFirst) // allign tops or bopttoms\n      }\n    }\n\n    var live\n    if (options.selectedMessage) {\n      var selectedDocument = options.selectedMessage.doc()\n      var now = new Date()\n      var todayDocument = dateFolder.leafDocumentFromDate(now)\n      live = todayDocument.sameTerm(selectedDocument)\n    }\n    if (options.selectedMessage && !live) {\n      var selectedDate = dateFolder.dateFromLeafDocument(selectedDocument)\n      var selectedMessageTable = await createMessageTable(selectedDate, live)\n      div.appendChild(selectedMessageTable)\n      earliest.messageTable = selectedMessageTable\n      latest.messageTable = selectedMessageTable\n      yank()\n      setTimeout(yank, 1000) // @@ kludge - restore position distubed by other cHANGES\n    } else {\n      // Live end\n      await appendCurrentMessages()\n      earliest.messageTable = liveMessageTable\n      latest.messageTable = liveMessageTable\n    }\n\n    await loadMoreWhereNeeded(null, fixScroll)\n    div.addEventListener('scroll', loadMoreWhereNeeded)\n    if (options.solo) {\n      document.body.addEventListener('scroll', loadMoreWhereNeeded)\n    }\n  }\n\n  go()\n  return div\n}\n"],"file":"infinite.js"}