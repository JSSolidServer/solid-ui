{"version":3,"sources":["../../src/chat/infinite.js"],"names":["UI","authn","icons","ns","media","pad","$rdf","store","style","utils","widgets","SERVER_MKDIRP_BUG","createIfNotExists","doc","contentType","data","fetcher","load","response","status","debug","log","webOperation","uri","requested","desktopNotification","str","window","warn","Notification","permission","requestPermission","then","infiniteMessageArea","dom","kb","chatChannel","options","newMessageForm","syncMessages","addMessage","insertPreviousMessages","removePreviousMessages","createMessageTable","renderMessageTable","addNewTableIfNewDay","appendCurrentMessages","loadMoreWhereNeeded","loadInitialContent","yank","fixScroll","selectedElement","scrollIntoView","block","liveMessageTable","inputRow","newestFirst","selectedMessageTable","selectedMessage","selectedDocument","now","Date","todayDocument","dateFolder","leafDocumentFromDate","live","sameTerm","selectedDate","dateFromLeafDocument","div","appendChild","earliest","messageTable","latest","setTimeout","addEventListener","solo","document","body","event","lock","freeze","magicZone","scrollTop","initial","extendBackwards","scrollHeight","scrollBottom","done","clientHeight","extendForwards","chatDocument","refresh","updater","addDownstreamChangeListener","newChatDocument","removeChild","oldChatDocument","holds","rdfs","sts","st","update","ok","alert","date","scrollBackButton","scrollForwardButton","firstChild","setAttribute","iconBase","disabled","extendedBack","setScrollBackButtonIcon","sense","scrollBackIcon","getScrollbackIcon","scrollBackButtonHandler","_event","extendedForwards","setScrollForwardButtonIcon","scrollForwardIcon","getScrollForwardButtonIcon","scrollForwardButtonHandler","createElement","fresh","tr","insertBefore","infinite","scrollBackButtonTR","scrollBackButtonCell","button","dateCell","textContent","shortDate","toISOString","scrollForwardButtonCell","extendedForward","statementsMatching","WF","length","forEach","object","statusTR","errorMessageBlock","backwards","nextSibling","previousSibling","extr","extremity","loadPrevious","todayDoc","newMessageTable","message","bindings","any","foaf","DCT","sioc","userContext","about","displayed","ele","ele2","AJAR_subject","messages","wf","map","stored","m","refreshTree","form","lhs","middle","rhs","AJAR_date","field","sendButton","sendMessage","text","sendComplete","content","dateStamp","me","value","messageBodyStyle","focus","select","timestamp","getTime","term","sym","literal","push","Statement","undefined","droppedFileHandler","files","base","dir","uploadFiles","theFile","destURI","droppedURIHandler","uris","turnOnInput","menuHandler","menuButton","menuOptions","newBase","innerHTML","rows","e","keyCode","altKey","makeDropTarget","buttonStyle","imageDoc","getImageDoc","tookPicture","cameraButton","recordParticipation","context","logIn","Object","assign","bookmarkDocument","Namespace","DateFolder","authorAboveContent","statusArea"],"mappings":"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","sourcesContent":["/**\n * Contains the [[infiniteMessageArea]] class\n * @packageDocumentation\n */\nimport { authn } from '../authn/index'\nimport * as debug from '../debug'\nimport { icons } from '../iconBase'\nimport { store } from '../logic'\nimport { media } from '../media/index'\nimport * as ns from '../ns'\nimport * as pad from '../pad'\nimport { DateFolder } from './dateFolder'\nimport { renderMessage, creatorAndDate } from './message'\nimport { findBookmarkDocument } from './bookmarks'\n\nimport * as $rdf from 'rdflib' // pull in first avoid cross-refs\nimport * as style from '../style'\nimport * as utils from '../utils'\nimport * as widgets from '../widgets'\n\nconst UI = { authn, icons, ns, media, pad, $rdf, store, style, utils, widgets }\n\n/* global alert */\n\nconst SERVER_MKDIRP_BUG = false // Set false timbl 2021-10-31 should be fixed by now\n\nexport async function createIfNotExists (doc, contentType = 'text/turtle', data = '') {\n  const fetcher = UI.store.fetcher\n  let response\n  try {\n    response = await fetcher.load(doc)\n  } catch (err) {\n    if (err.response.status === 404) {\n      debug.log(\n        'createIfNotExists: doc does NOT exist, will create... ' + doc\n      )\n      try {\n        response = await fetcher.webOperation('PUT', doc.uri, {\n          data,\n          contentType\n        })\n      } catch (err) {\n        debug.log('createIfNotExists doc FAILED: ' + doc + ': ' + err)\n        throw err\n      }\n      delete fetcher.requested[doc.uri] // delete cached 404 error\n      // debug.log('createIfNotExists doc created ok ' + doc)\n      return response\n    } else {\n      debug.log(\n        'createIfNotExists doc load error NOT 404:  ' + doc + ': ' + err\n      )\n      throw err\n    }\n  }\n  // debug.log('createIfNotExists: doc exists, all good: ' + doc)\n  return response\n}\n\nexport function desktopNotification (str) {\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    debug.warn('This browser does not support desktop notification')\n  } else if (Notification.permission === 'granted') {\n    // Let's check whether notification permissions have already been granted\n    // eslint-disable-next-line no-new\n    new Notification(str)\n  } else if (Notification.permission !== 'denied') {\n    // Otherwise, we need to ask the user for permission\n    Notification.requestPermission().then(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === 'granted') {\n        // eslint-disable-next-line no-new\n        new Notification(str)\n      }\n    })\n  }\n\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n\n/**\n * Common code for a chat (discussion area of messages about something)\n * This version runs over a series of files for different time periods\n *\n * Parameters for the whole chat like its title are stored on\n * index.ttl#this and the chats messages are stored in YYYY/MM/DD/chat.ttl\n */\nexport async function infiniteMessageArea (dom, kb, chatChannel, options) {\n  kb = kb || UI.store\n  const ns = UI.ns\n  const WF = $rdf.Namespace('http://www.w3.org/2005/01/wf/flow#')\n  const DCT = $rdf.Namespace('http://purl.org/dc/terms/')\n  // const POSIX = $rdf.Namespace('http://www.w3.org/ns/posix/stat#')\n\n  options = options || {}\n\n  const newestFirst = options.newestFirst === '1' || options.newestFirst === true // hack for now\n\n  const dateFolder = new DateFolder(chatChannel, 'chat.ttl')\n\n  options.authorAboveContent = true\n\n  // var participation // An object tracking users use and prefs\n  const messageBodyStyle = UI.style.messageBodyStyle\n\n  // var messageBodyStyle = 'white-space: pre-wrap; width: 90%; font-size:100%; border: 0.07em solid #eee; padding: .2em 0.5em; margin: 0.1em 1em 0.1em 1em;'\n  // 'font-size: 100%; margin: 0.1em 1em 0.1em 1em;  background-color: white; white-space: pre-wrap; padding: 0.1em;'\n\n  const div = dom.createElement('div')\n  let menuButton\n  const statusArea = div.appendChild(dom.createElement('div'))\n  const userContext = { dom, statusArea, div: statusArea } // logged on state, pointers to user's stuff\n  let me\n\n  const updater = UI.store.updater\n\n  /** Does a file exist on the web?\n   * @returns {Boolean}\n   */\n  /*\n  async function documentExists (doc) {\n    try {\n      await kb.fetcher.load(doc)\n    } catch (err) {\n      if (err.response.status === 404) {\n        return false\n      } else {\n        debug.log('documentExists: doc load error NOT 404:  ' + doc + ': ' + err)\n        throw err\n      }\n    }\n    return true\n  }\n*/\n\n  /*       Form for a new message\n   */\n  function newMessageForm (messageTable) {\n    const form = dom.createElement('tr')\n    const lhs = dom.createElement('td')\n    const middle = dom.createElement('td')\n    const rhs = dom.createElement('td')\n    form.appendChild(lhs)\n    form.appendChild(middle)\n    form.appendChild(rhs)\n    form.AJAR_date = '9999-01-01T00:00:00Z' // ISO format for field sort\n    let field, sendButton\n\n    async function sendMessage (text) {\n      const now = new Date()\n      await addNewTableIfNewDay(now)\n\n      if (!text) {\n        field.setAttribute('style', messageBodyStyle + 'color: #bbb;') // pendingedit\n        field.disabled = true\n      }\n      const sts = []\n      const timestamp = '' + now.getTime()\n      const dateStamp = $rdf.term(now)\n      const chatDocument = dateFolder.leafDocumentFromDate(now)\n\n      const message = kb.sym(chatDocument.uri + '#' + 'Msg' + timestamp)\n      const content = kb.literal(text || field.value)\n      // if (text) field.value = text  No - don't destroy half-finsihed user input\n\n      sts.push(\n        new $rdf.Statement(chatChannel, ns.wf('message'), message, chatDocument)\n      )\n      sts.push(\n        new $rdf.Statement(message, ns.sioc('content'), content, chatDocument)\n      )\n      sts.push(\n        new $rdf.Statement(message, DCT('created'), dateStamp, chatDocument)\n      )\n      if (me) {\n        sts.push(\n          new $rdf.Statement(message, ns.foaf('maker'), me, chatDocument)\n        )\n      }\n\n      function sendComplete () {\n        const bindings = {\n          '?msg': message,\n          '?content': content,\n          '?date': dateStamp,\n          '?creator': me\n        }\n        renderMessage(liveMessageTable, bindings, false, options, userContext) // not green\n\n        if (!text) {\n          field.value = '' // clear from out for reuse\n          field.setAttribute('style', messageBodyStyle)\n          field.disabled = false\n          field.scrollIntoView(newestFirst) // allign bottom (top)\n          field.focus() // Start typing next line immediately\n          field.select()\n        }\n      }\n\n      if (\n        SERVER_MKDIRP_BUG &&\n        (kb.fetcher.requested[chatDocument.uri] === undefined ||\n          kb.fetcher.requested[chatDocument.uri] === 404)\n      ) {\n        debug.log(\n          '@@@ SERVER_MKDIRP_BUG: Should only happen once: create chat file: ' +\n          chatDocument\n        )\n        await createIfNotExists(chatDocument)\n        // Otherwise, create the document, if necessary, with a PATCH:\n      }\n      try {\n        await updater.update([], sts)\n      } catch (err) {\n        form.appendChild(\n          UI.widgets.errorMessageBlock(dom, 'Error writing message: ' + err)\n        )\n        return\n      }\n      sendComplete()\n    } // sendMessage\n\n    form.appendChild(dom.createElement('br'))\n\n    //    DRAG AND DROP\n    function droppedFileHandler (files) {\n      const base = messageTable.chatDocument.dir().uri\n      UI.widgets.uploadFiles(\n        kb.fetcher,\n        files,\n        base + 'Files',\n        base + 'Pictures',\n        async function (theFile, destURI) {\n          // @@@@@@ Wait for eachif several\n          await sendMessage(destURI)\n        }\n      )\n    }\n\n    // When a set of URIs are dropped on the field\n    const droppedURIHandler = async function (uris) {\n      for (const uri of uris) {\n        await sendMessage(uri)\n      }\n    }\n\n    // When we are actually logged on\n    function turnOnInput () {\n      if (options.menuHandler && menuButton) {\n        const menuOptions = {\n          me,\n          dom,\n          div,\n          newBase: messageTable.chatDocument.dir().uri\n        }\n        menuButton.addEventListener(\n          'click',\n          event => {\n            options.menuHandler(event, chatChannel, menuOptions)\n          },\n          false\n        )\n      }\n\n      // Turn on message input\n      creatorAndDate(lhs, me, '', null)\n\n      field = dom.createElement('textarea')\n      middle.innerHTML = ''\n      middle.appendChild(field)\n      field.rows = 3\n      // field.cols = 40\n      field.setAttribute('style', messageBodyStyle + 'background-color: #eef;')\n\n      // Trap the Enter BEFORE it is used ti make a newline\n      field.addEventListener(\n        'keydown',\n        async function (e) {\n          // User preference?\n          if (e.keyCode === 13) {\n            if (!e.altKey) {\n              // Alt-Enter just adds a new line\n              await sendMessage()\n            }\n          }\n        },\n        false\n      )\n      UI.widgets.makeDropTarget(field, droppedURIHandler, droppedFileHandler)\n\n      rhs.innerHTML = ''\n      sendButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + 'noun_383448.svg',\n        'Send'\n      )\n      sendButton.setAttribute('style', UI.style.buttonStyle + 'float: right;')\n      sendButton.addEventListener('click', _event => sendMessage(), false)\n      rhs.appendChild(sendButton)\n\n      const chatDocument = dateFolder.leafDocumentFromDate(new Date())\n      let imageDoc\n\n      function getImageDoc () {\n        imageDoc = kb.sym(\n          chatDocument.dir().uri + 'Image_' + Date.now() + '.png'\n        )\n        return imageDoc\n      }\n\n      async function tookPicture (imageDoc) {\n        if (imageDoc) {\n          await sendMessage(imageDoc.uri)\n        }\n      }\n\n      middle.appendChild(\n        UI.media.cameraButton(dom, kb, getImageDoc, tookPicture)\n      )\n\n      UI.pad.recordParticipation(chatChannel, chatChannel.doc()) // participation =\n    } // turn on inpuut\n\n    const context = { div: middle, dom: dom }\n    UI.authn.logIn(context).then(context => {\n      me = context.me\n      turnOnInput()\n      Object.assign(context, userContext)\n      findBookmarkDocument(context).then(context => {\n        debug.log('Bookmark file: ' + context.bookmarkDocument)\n      })\n    })\n\n    return form\n  }\n\n  // ///////////////////////////////////////////////////////////////////////\n\n  function syncMessages (about, messageTable) {\n    const displayed = {}\n    let ele, ele2\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        displayed[ele.AJAR_subject.uri] = true\n      }\n    }\n\n    const messages = kb\n      .statementsMatching(\n        about,\n        ns.wf('message'),\n        null,\n        messageTable.chatDocument\n      )\n      .map(st => {\n        return st.object\n      })\n    const stored = {}\n    messages.forEach(function (m) {\n      stored[m.uri] = true\n      if (!displayed[m.uri]) {\n        addMessage(m, messageTable)\n      }\n    })\n\n    // eslint-disable-next-line space-in-parens\n    for (ele = messageTable.firstChild; ele;) {\n      ele2 = ele.nextSibling\n      if (ele.AJAR_subject && !stored[ele.AJAR_subject.uri]) {\n        messageTable.removeChild(ele)\n      }\n      ele = ele2\n    }\n    for (ele = messageTable.firstChild; ele; ele = ele.nextSibling) {\n      if (ele.AJAR_subject) {\n        // Refresh thumbs up etc\n        UI.widgets.refreshTree(ele) // Things inside may have changed too\n      }\n    }\n  } // syncMessages\n\n  function addMessage (message, messageTable) {\n    const bindings = {\n      '?msg': message,\n      '?creator': kb.any(message, ns.foaf('maker')),\n      '?date': kb.any(message, DCT('created')),\n      '?content': kb.any(message, ns.sioc('content'))\n    }\n    renderMessage(\n      messageTable,\n      bindings,\n      messageTable.fresh,\n      options,\n      userContext\n    ) // fresh from elsewhere\n  }\n\n  // ////////\n\n  /* Add a new messageTable at the top/bottom\n   */\n  async function insertPreviousMessages (backwards) {\n    const extremity = backwards ? earliest : latest\n    let date = extremity.messageTable.date // day in mssecs\n\n    date = await dateFolder.loadPrevious(date, backwards) // backwards\n    debug.log(\n      `insertPreviousMessages: from ${\n        backwards ? 'backwards' : 'forwards'\n      } loadPrevious: ${date}`\n    )\n    if (!date && !backwards && !liveMessageTable) {\n      await appendCurrentMessages() // If necessary skip to today and add that\n    }\n    if (!date) return true // done\n    let live = false\n    if (!backwards) {\n      const todayDoc = dateFolder.leafDocumentFromDate(new Date())\n      const doc = dateFolder.leafDocumentFromDate(date)\n      live = doc.sameTerm(todayDoc) // Is this todays?\n    }\n    const newMessageTable = await createMessageTable(date, live)\n    extremity.messageTable = newMessageTable // move pointer to earliest\n    if (backwards ? newestFirst : !newestFirst) {\n      // put on bottom or top\n      div.appendChild(newMessageTable)\n    } else {\n      // put on top as we scroll back\n      div.insertBefore(newMessageTable, div.firstChild)\n    }\n    return live // not done\n  }\n\n  /* Remove message tables earlier than this one\n   */\n  function removePreviousMessages (backwards, messageTable) {\n    if (backwards ? newestFirst : !newestFirst) {\n      // it was put on bottom\n      while (messageTable.nextSibling) {\n        div.removeChild(messageTable.nextSibling)\n      }\n    } else {\n      // it was put on top as we scroll back\n      while (messageTable.previousSibling) {\n        div.removeChild(messageTable.previousSibling)\n      }\n    }\n    const extr = backwards ? earliest : latest\n    extr.messageTable = messageTable\n  }\n\n  /* Load and render message table\n   ** @returns DOM element generates\n   */\n  async function createMessageTable (date, live) {\n    debug.log('   createMessageTable for  ' + date)\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    try {\n      await kb.fetcher.load(chatDocument)\n    } catch (err) {\n      const messageTable = dom.createElement('table')\n      const statusTR = messageTable.appendChild(dom.createElement('tr')) // ### find status in exception\n      if (err.response && err.response.status && err.response.status === 404) {\n        debug.log('Error 404 for chat file ' + chatDocument)\n        return renderMessageTable(date, live) // no mssage file is fine.. will be craeted later\n        // statusTR.appendChild(UI.widgets.errorMessageBlock(dom, 'no message file', 'white'))\n      } else {\n        debug.log('*** Error NON 404 for chat file ' + chatDocument)\n        statusTR.appendChild(UI.widgets.errorMessageBlock(dom, err, 'pink'))\n      }\n      return statusTR\n    }\n    return renderMessageTable(date, live)\n  }\n\n  function renderMessageTable (date, live) {\n    let scrollBackButton\n    let scrollForwardButton\n\n    /// /////////////////   Scroll down adding more above\n\n    async function extendBackwards () {\n      const done = await insertPreviousMessages(true)\n      if (done) {\n        if (scrollBackButton) {\n          scrollBackButton.firstChild.setAttribute(\n            'src',\n            UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n          ) // T\n          scrollBackButton.disabled = true\n        }\n        messageTable.initial = true\n      } else {\n        messageTable.extendedBack = true\n      }\n      setScrollBackButtonIcon()\n      return done\n    }\n\n    function setScrollBackButtonIcon () {\n      if (!scrollBackButton) {\n        return\n      }\n      const sense = messageTable.extendedBack ? !newestFirst : newestFirst\n      const scrollBackIcon = messageTable.initial\n        ? 'noun_T-Block_1114655_000000.svg'\n        : getScrollbackIcon(sense)\n      scrollBackButton.firstChild.setAttribute(\n        'src',\n        UI.icons.iconBase + scrollBackIcon\n      )\n\n      function getScrollbackIcon (sense) {\n        return sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollBackButtonHandler (_event) {\n      if (messageTable.extendedBack) {\n        removePreviousMessages(true, messageTable)\n        messageTable.extendedBack = false\n        setScrollBackButtonIcon()\n      } else {\n        await extendBackwards()\n      }\n    }\n\n    /// ////////////// Scroll up adding more below\n\n    async function extendForwards () {\n      const done = await insertPreviousMessages(false)\n      if (done) {\n        scrollForwardButton.firstChild.setAttribute(\n          'src',\n          UI.icons.iconBase + 'noun_T-Block_1114655_000000.svg'\n        )\n        scrollForwardButton.disabled = true\n        messageTable.final = true\n      } else {\n        messageTable.extendedForwards = true\n      }\n      setScrollForwardButtonIcon()\n      return done\n    }\n\n    function setScrollForwardButtonIcon () {\n      const sense = messageTable.extendedForwards ? !newestFirst : newestFirst // noun_T-Block_1114657_000000.svg\n      const scrollForwardIcon = messageTable.final\n        ? 'noun_T-Block_1114657_000000.svg'\n        : getScrollForwardButtonIcon(sense)\n      scrollForwardButton.firstChild.setAttribute(\n        'src',\n        UI.icons.iconBase + scrollForwardIcon\n      )\n\n      function getScrollForwardButtonIcon (sense) {\n        return !sense ? 'noun_1369241.svg' : 'noun_1369237.svg'\n      }\n    }\n\n    async function scrollForwardButtonHandler (_event) {\n      if (messageTable.extendedForwards) {\n        removePreviousMessages(false, messageTable)\n        messageTable.extendedForwards = false\n        setScrollForwardButtonIcon()\n      } else {\n        await extendForwards() // async\n        latest.messageTable.scrollIntoView(newestFirst)\n      }\n    }\n\n    /// ///////////////////////\n\n    const messageTable = dom.createElement('table')\n    messageTable.extendBackwards = extendBackwards // Make function available to scroll stuff\n    messageTable.extendForwards = extendForwards // Make function available to scroll stuff\n\n    messageTable.date = date\n    const chatDocument = dateFolder.leafDocumentFromDate(date)\n    messageTable.chatDocument = chatDocument\n\n    messageTable.fresh = false\n    messageTable.setAttribute('style', 'width: 100%;') // fill that div!\n    if (live) {\n      messageTable.final = true\n      liveMessageTable = messageTable\n      latest.messageTable = messageTable\n      const tr = newMessageForm(messageTable)\n      if (newestFirst) {\n        messageTable.insertBefore(tr, messageTable.firstChild) // If newestFirst\n      } else {\n        messageTable.appendChild(tr) // not newestFirst\n      }\n      messageTable.inputRow = tr\n    }\n\n    /// ///// Infinite scroll\n    //\n    // @@ listen for swipe past end event not just button\n    if (options.infinite) {\n      const scrollBackButtonTR = dom.createElement('tr')\n      const scrollBackButtonCell = scrollBackButtonTR.appendChild(\n        dom.createElement('td')\n      )\n      // up traingles: noun_1369237.svg\n      // down triangles: noun_1369241.svg\n      const scrollBackIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollBackButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + scrollBackIcon,\n        'Previous messages ...'\n      )\n      scrollBackButtonCell.style = 'width:3em; height:3em;'\n      scrollBackButton.addEventListener('click', scrollBackButtonHandler, false)\n      messageTable.extendedBack = false\n      scrollBackButtonCell.appendChild(scrollBackButton)\n      setScrollBackButtonIcon()\n\n      const dateCell = scrollBackButtonTR.appendChild(dom.createElement('td'))\n      dateCell.style =\n        'text-align: center; vertical-align: middle; color: #888; font-style: italic;'\n      dateCell.textContent = UI.widgets.shortDate(date.toISOString(), true) // no time, only date\n\n      // @@@@@@@@@@@ todo move this button to other end of  message cell, o\n      const scrollForwardButtonCell = scrollBackButtonTR.appendChild(\n        dom.createElement('td')\n      )\n      const scrollForwardIcon = newestFirst\n        ? 'noun_1369241.svg'\n        : 'noun_1369237.svg' // down and up arrows respoctively\n      scrollForwardButton = UI.widgets.button(\n        dom,\n        UI.icons.iconBase + scrollForwardIcon,\n        'Later messages ...'\n      )\n      scrollForwardButtonCell.appendChild(scrollForwardButton)\n      scrollForwardButtonCell.style = 'width:3em; height:3em;'\n      scrollForwardButton.addEventListener(\n        'click',\n        scrollForwardButtonHandler,\n        false\n      )\n      messageTable.extendedForward = false\n      setScrollForwardButtonIcon()\n\n      messageTable.extendedForwards = false\n\n      if (!newestFirst) {\n        // opposite end from the entry field\n        messageTable.insertBefore(scrollBackButtonTR, messageTable.firstChild) // If not newestFirst\n      } else {\n        messageTable.appendChild(scrollBackButtonTR) //  newestFirst\n      }\n    }\n\n    const sts = kb.statementsMatching(null, WF('message'), null, chatDocument)\n    if (!live && sts.length === 0) {\n      // not todays\n      // no need buttomns at the moment\n      // messageTable.style.visibility = 'collapse' // Hide files with no messages\n    }\n    sts.forEach(st => {\n      addMessage(st.object, messageTable)\n    })\n    messageTable.fresh = true\n\n    // loadMessageTable(messageTable, chatDocument)\n    messageTable.fresh = false\n    return messageTable\n  } // renderMessageTable\n\n  async function addNewTableIfNewDay (now) {\n    // let now = new Date()\n    // @@ Remove listener from previous table as it is now static\n    const newChatDocument = dateFolder.leafDocumentFromDate(now)\n    if (!newChatDocument.sameTerm(latest.messageTable.chatDocument)) {\n      // It is a new day\n      if (liveMessageTable.inputRow) {\n        liveMessageTable.removeChild(liveMessageTable.inputRow)\n        delete liveMessageTable.inputRow\n      }\n      const oldChatDocument = latest.messageTable.chatDocument\n      await appendCurrentMessages()\n      // Adding a link in the document will ping listeners to add the new block too\n      if (\n        !kb.holds(\n          oldChatDocument,\n          ns.rdfs('seeAlso'),\n          newChatDocument,\n          oldChatDocument\n        )\n      ) {\n        const sts = [\n          $rdf.st(\n            oldChatDocument,\n            ns.rdfs('seeAlso'),\n            newChatDocument,\n            oldChatDocument\n          )\n        ]\n        updater.update([], sts, function (ok, body) {\n          if (!ok) {\n            alert('Unable to link old message block to new one.' + body)\n          }\n        })\n      }\n    }\n  }\n\n  /*\n  function messageCount () {\n    var n = 0\n    const tables = div.children\n    for (let i = 0; i < tables.length; i++) {\n      n += tables[i].children.length - 1\n      // debug.log('    table length:' + tables[i].children.length)\n    }\n    return n\n  }\n*/\n\n  /* Add the live message block with entry field for today\n   */\n  async function appendCurrentMessages () {\n    const now = new Date()\n    const chatDocument = dateFolder.leafDocumentFromDate(now)\n\n    /*   Don't actually make the documemnt until a message is sent  @@@@@ WHEN SERVER FIXED\n     * currently server won't patch to a file ina non-existent directory\n     */\n    /*\n    if (SERVER_MKDIRP_BUG) {\n      try {\n        await createIfNotExists(chatDocument)\n      } catch (e) {\n        div.appendChild(UI.widgets.errorMessageBlock(\n          dom, 'Problem accessing chat file: ' + e))\n        return\n      }\n    }\n    */\n    /// ///////////////////////////////////////////////////////////\n    const messageTable = await createMessageTable(now, true)\n    div.appendChild(messageTable)\n    div.refresh = function () {\n      // only the last messageTable is live\n      addNewTableIfNewDay(new Date()).then(() => {\n        syncMessages(chatChannel, messageTable)\n        desktopNotification(chatChannel)\n      })\n    } // The short chat version fors live update in the pane but we do it in the widget\n    kb.updater.addDownstreamChangeListener(chatDocument, div.refresh) // Live update\n    liveMessageTable = messageTable\n    latest.messageTable = liveMessageTable\n    return messageTable\n  }\n\n  let liveMessageTable\n  const earliest = { messageTable: null } // Stuff about each end of the loaded days\n  const latest = { messageTable: null }\n\n  let lock = false\n\n  async function loadMoreWhereNeeded (event, fixScroll) {\n    if (lock) return\n    lock = true\n    const freeze = !fixScroll\n    const magicZone = 150\n    // const top = div.scrollTop\n    // const bottom = div.scrollHeight - top - div.clientHeight\n    let done\n\n    while (\n      div.scrollTop < magicZone &&\n      earliest.messageTable &&\n      !earliest.messageTable.initial &&\n      earliest.messageTable.extendBackwards\n    ) {\n      // If this has been called before the element is actually in the\n      // user's DOM tree, then this scrollTop check won't work -> loop forever\n      // https://github.com/solid/solid-ui/issues/366\n      if (div.scrollHeight === 0) {\n        // console.log('    chat/loadMoreWhereNeeded: trying later...')\n        setTimeout(loadMoreWhereNeeded, 2000) // couple be less\n        lock = false\n        return // abandon now, do later\n      }\n      // console.log('    chat/loadMoreWhereNeeded: Going now')\n      const scrollBottom = div.scrollHeight - div.scrollTop\n      debug.log('infinite scroll: adding above: top ' + div.scrollTop)\n      done = await earliest.messageTable.extendBackwards()\n      if (freeze) {\n        div.scrollTop = div.scrollHeight - scrollBottom\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    while (\n      options.selectedMessage && // we started in the middle not at the bottom\n      div.scrollHeight - div.scrollTop - div.clientHeight < magicZone && // we are scrolled right to the bottom\n      latest.messageTable &&\n      !latest.messageTable.final && // there is more data to come\n      latest.messageTable.extendForwards\n    ) {\n      const scrollTop = div.scrollTop\n      debug.log(\n        'infinite scroll: adding below: bottom: ' +\n        (div.scrollHeight - div.scrollTop - div.clientHeight)\n      )\n      done = await latest.messageTable.extendForwards() // then add more data on the bottom\n      if (freeze) {\n        div.scrollTop = scrollTop // while adding below keep same things in view\n      }\n      if (fixScroll) fixScroll()\n      if (done) break\n    }\n    lock = false\n  }\n\n  async function loadInitialContent () {\n    function yank () {\n      selectedMessageTable.selectedElement.scrollIntoView({ block: 'center' })\n    }\n\n    // During initial load ONLY keep scroll to selected thing or bottom\n    function fixScroll () {\n      if (options.selectedElement) {\n        options.selectedElement.scrollIntoView({ block: 'center' }) // align tops or bottoms\n      } else {\n        if (liveMessageTable.inputRow.scrollIntoView) {\n          liveMessageTable.inputRow.scrollIntoView(newestFirst) // align tops or bottoms\n        }\n      }\n    }\n\n    let live, selectedDocument\n    if (options.selectedMessage) {\n      selectedDocument = options.selectedMessage.doc()\n      const now = new Date()\n      const todayDocument = dateFolder.leafDocumentFromDate(now)\n      live = todayDocument.sameTerm(selectedDocument)\n    }\n    let selectedMessageTable\n    if (options.selectedMessage && !live) {\n      const selectedDate = dateFolder.dateFromLeafDocument(selectedDocument)\n      selectedMessageTable = await createMessageTable(selectedDate, live)\n      div.appendChild(selectedMessageTable)\n      earliest.messageTable = selectedMessageTable\n      latest.messageTable = selectedMessageTable\n      yank()\n      setTimeout(yank, 1000) // @@ kludge - restore position distubed by other cHANGES\n    } else {\n      // Live end\n      await appendCurrentMessages()\n      earliest.messageTable = liveMessageTable\n      latest.messageTable = liveMessageTable\n    }\n\n    await loadMoreWhereNeeded(null, fixScroll)\n    div.addEventListener('scroll', loadMoreWhereNeeded)\n    if (options.solo) {\n      document.body.addEventListener('scroll', loadMoreWhereNeeded)\n    }\n  }\n\n  await loadInitialContent()\n  return div\n}\n"],"file":"infinite.js"}