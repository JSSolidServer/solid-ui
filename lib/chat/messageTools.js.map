{"version":3,"sources":["../../src/chat/messageTools.js"],"names":["dom","window","document","PENCIL_ICON","THUMBS_UP_ICON","THUMBS_DOWN_ICON","emoji","ns","schema","sentimentStrip","target","doc","latest","actions","store","holds","value","each","sentiments","map","a","any","rdf","sort","strings","x","createTextNode","join","sentimentStripLinked","strip","createElement","refresh","innerHTML","uri","forEach","ss","theClass","agent","res","setAttribute","textContent","appendChild","messageToolbar","message","messageRow","userContext","channelObject","deleteMessage","author","foaf","me","alert","sameTerm","msg","debug","warn","area","statusArea","parentNode","widgets","errorMessageBlock","removeChild","closeToolbar","editMessage","div","parentElement","deleteThingThen","updater","update","connectedStatements","authn","currentUser","deleteButtonWithCheck","button","icons","iconBase","then","bookmarkButton","sentimentButton","context","icon","actionClass","mutuallyExclusive","setColor","style","backgroundColor","action","utils","label","_event","newThing","insertMe","st","dirty","i","length","existingAction","refreshTree","filter","context1","cancelButton","firstChild","opacity","addEventListener"],"mappings":"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","sourcesContent":["/**\n * Tools for doing things with a message\n * Let us be creative here.  Allow all sorts of things to\n * be done to a message - linking to new or old objects in an open way\n *\n * Ideas: Bookmark, Like, star, pin at top of chat, reply as new thread,\n * If you made it originally: edit, delete, attach\n * @packageDocumentation\n */\nimport * as debug from '../debug'\nimport { authn } from '../authn/index'\nimport { icons } from '../iconBase'\nimport { store } from '../logic'\n// import { media } from '../media/index'\nimport * as ns from '../ns'\n// import * as pad from '../pad'\nimport * as rdf from 'rdflib' // pull in first avoid cross-refs\n// import * as style from '../style'\nimport * as utils from '../utils'\nimport * as widgets from '../widgets'\nimport { renderBookmarksButton } from './bookmarks'\nimport { mostRecentVersion } from './chatLogic'\nimport { switchToEditor } from './message'\n\n// import { infiniteMessageArea } from './infinite.js'\n// import { renderMessage, creatorAndDate } from './message'\n// import * as debug from '../debug'\n\nconst dom = window.document\n\n// THE UNUSED ICONS are here as reminders for possible future functionality\n// const BOOKMARK_ICON = 'noun_45961.svg'\n// const HEART_ICON = 'noun_130259.svg' -> Add this to my (private) favorites\n// const MENU_ICON = 'noun_897914.svg'\n// const PAPERCLIP_ICON = 'noun_25830.svg' -> add attachments to this message\n// const PIN_ICON = 'noun_562340.svg'  -> pin this message permanently in the chat UI\nconst PENCIL_ICON = 'noun_253504.svg' // edit a message\n// const SPANNER_ICON = 'noun_344563.svg' -> settings\nconst THUMBS_UP_ICON = 'noun_1384132.svg'\nconst THUMBS_DOWN_ICON = 'noun_1384135.svg'\n/**\n * Emoji in Unicode\n */\nconst emoji = {}\nemoji[ns.schema('AgreeAction')] = '👍'\nemoji[ns.schema('DisagreeAction')] = '👎'\nemoji[ns.schema('EndorseAction')] = '⭐️'\nemoji[ns.schema('LikeAction')] = '❤️'\n\n/**\n * Create strip of sentiments expressed\n */\nexport function sentimentStrip (target, doc) { // alain seems not used\n  const latest = mostRecentVersion(target)\n  const actions = store.holds(latest, ns.schema('dateDeleted').value, null, latest.doc()) ? store.each(null, ns.schema('target'), target, doc) : []\n  const sentiments = actions.map(a => store.any(a, ns.rdf('type'), null, doc))\n  sentiments.sort()\n  const strings = sentiments.map(x => emoji[x] || '')\n  return dom.createTextNode(strings.join(' '))\n}\n/**\n * Create strip of sentiments expressed, with hyperlinks\n *\n * @param target {NamedNode} - The thing about which they are expressed\n * @param doc {NamedNode} - The document in which they are expressed\n */\nexport function sentimentStripLinked (target, doc) {\n  const strip = dom.createElement('span')\n  function refresh () {\n    strip.innerHTML = ''\n    const actions = (mostRecentVersion(target).uri !== ns.schema('dateDeleted').uri) ? store.each(null, ns.schema('target'), target, doc) : []\n    const sentiments = actions.map(a => [\n      store.any(a, ns.rdf('type'), null, doc),\n      store.any(a, ns.schema('agent'), null, doc)\n    ])\n    sentiments.sort()\n    sentiments.forEach(ss => {\n      const [theClass, agent] = ss\n      let res\n      if (agent) {\n        res = dom.createElement('a')\n        res.setAttribute('href', agent.uri)\n      } else {\n        res = dom.createTextNode('')\n      }\n      res.textContent = emoji[theClass] || '*'\n      strip.appendChild(res)\n    })\n  }\n  refresh()\n  strip.refresh = refresh\n  return strip\n}\n/**\n * Creates a message toolbar component\n */\nexport function messageToolbar (message, messageRow, userContext, channelObject) {\n  async function deleteMessage () {\n    const author = store.any(message, ns.foaf('maker'))\n    if (!me) {\n      alert('You can\\'t delete the message, you are not logged in.')\n    } else if (me.sameTerm(author)) {\n      try {\n        await channelObject.deleteMessage(message)\n      } catch (err) {\n        const msg = 'Error deleting messaage ' + err\n        debug.warn(msg)\n        alert(msg)\n        const area = userContext.statusArea || messageRow.parentNode\n        area.appendChild(widgets.errorMessageBlock(dom, msg))\n      }\n      messageRow.parentNode.removeChild(messageRow)\n    } else {\n      alert('You can\\'t delete the message, you are not logged in as the author, ' + author)\n    }\n    closeToolbar()\n  }\n\n  async function editMessage (messageRow) {\n    if (me.value === store.any(message, ns.foaf('maker')).value) {\n      closeToolbar() // edit is a one-off action\n      switchToEditor(messageRow, message, channelObject, userContext)\n    }\n  }\n\n  // alain TODO allow chat owner to fully delete message + sentiments and replacing messages\n\n  const div = dom.createElement('div')\n  // is message deleted ?\n  if (mostRecentVersion(message).value === ns.schema('dateDeleted').value) return div\n  function closeToolbar () {\n    div.parentElement.parentElement.removeChild(div.parentElement) // remive the TR\n  }\n\n  async function deleteThingThen (x) {\n    await store.updater.update(store.connectedStatements(x), [])\n  }\n\n  // Things only the original author can do\n  let me = authn.currentUser() // If already logged on\n  if (me && store.holds(message, ns.foaf('maker'), me)) {\n    // button to delete the message\n    div.appendChild(widgets.deleteButtonWithCheck(dom, div, 'message', deleteMessage))\n    // button to edit the message\n    div.appendChild(widgets.button(dom, icons.iconBase + PENCIL_ICON, 'edit', () => editMessage(messageRow)))\n  } // if mine\n  // Things anyone can do if they have a bookmark list async\n  /*\n var bookmarkButton = await bookmarks.renderBookmarksButton(userContext)\n if (bookmarkButton) {\n   div.appendChild(bookmarkButton)\n }\n */\n  // Things anyone can do if they have a bookmark list\n\n  renderBookmarksButton(userContext).then(bookmarkButton => {\n    if (bookmarkButton) div.appendChild(bookmarkButton)\n  })\n\n  /**   Button to allow user to express a sentiment (like, endorse, etc) about a target\n   *\n   * @param context {Object} - Provide dom and me\n   * @param target {NamedNode} - The thing the user expresses an opnion about\n   * @param icon {uristring} - The icon to be used for the button\n   * @param actionClass {NamedNode} - The RDF class  - typically a subclass of schema:Action\n   * @param doc - {NamedNode} - the Solid document iunto which the data should be written\n   * @param mutuallyExclusive {Array<NamedNode>} - Any RDF classes of sentimentswhich are mutiually exclusive\n   */\n  function sentimentButton (\n    context,\n    target,\n    icon,\n    actionClass,\n    doc,\n    mutuallyExclusive\n  ) {\n    function setColor () {\n      button.style.backgroundColor = action ? 'yellow' : 'white'\n    }\n    const button = widgets.button(\n      dom,\n      icon,\n      utils.label(actionClass),\n      async function (_event) {\n        if (action) {\n          await deleteThingThen(action)\n          action = null\n          setColor()\n        } else {\n          // no action\n          action = widgets.newThing(doc)\n          const insertMe = [\n            rdf.st(action, ns.schema('agent'), context.me, doc),\n            rdf.st(action, ns.rdf('type'), actionClass, doc),\n            rdf.st(action, ns.schema('target'), target, doc)\n          ]\n          await store.updater.update([], insertMe)\n          setColor()\n\n          if (mutuallyExclusive) {\n            // Delete incompative sentiments\n            let dirty = false\n            for (let i = 0; i < mutuallyExclusive.length; i++) {\n              const a = existingAction(mutuallyExclusive[i])\n              if (a) {\n                await deleteThingThen(a) // but how refresh? refreshTree the parent?\n                dirty = true\n              }\n            }\n            if (dirty) {\n              // widgets.refreshTree(button.parentNode) // requires them all to be immediate siblings\n              widgets.refreshTree(messageRow) // requires them all to be immediate siblings\n            }\n          }\n        }\n      }\n    )\n    function existingAction (actionClass) {\n      const actions = store\n        .each(null, ns.schema('agent'), context.me, doc)\n        .filter(x => store.holds(x, ns.rdf('type'), actionClass, doc))\n        .filter(x => store.holds(x, ns.schema('target'), target, doc))\n      return actions.length ? actions[0] : null\n    }\n    function refresh () {\n      action = existingAction(actionClass)\n      setColor()\n    }\n    let action\n    button.refresh = refresh // If the file changes, refresh live\n    refresh()\n    return button\n  }\n\n  // THUMBS_UP_ICON\n  // https://schema.org/AgreeAction\n  me = authn.currentUser() // If already logged on\n  // debug.log('Actions 3' + mostRecentVersion(message).value + ' ' + ns.schema('dateDeleted').value + ' ' + (mostRecentVersion(message).value !== ns.schema('dateDeleted').value))\n\n  if (me && (mostRecentVersion(message).value !== ns.schema('dateDeleted').value)) {\n    const context1 = { me, dom, div }\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message, // @@ TODO use widgets.sentimentButton\n        icons.iconBase + THUMBS_UP_ICON,\n        ns.schema('AgreeAction'),\n        message.doc(),\n        [ns.schema('DisagreeAction')]\n      )\n    )\n    // Thumbs down\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message,\n        icons.iconBase + THUMBS_DOWN_ICON,\n        ns.schema('DisagreeAction'),\n        message.doc(),\n        [ns.schema('AgreeAction')]\n      )\n    )\n  }\n  // X button to remove the tool UI itself\n  const cancelButton = div.appendChild(widgets.cancelButton(dom))\n  cancelButton.style.float = 'right'\n  cancelButton.firstChild.style.opacity = '0.3'\n  cancelButton.addEventListener('click', closeToolbar)\n  return div\n}\n"],"file":"messageTools.js"}