{"version":3,"sources":["../../src/chat/messageTools.js"],"names":["UI","authn","icons","ns","media","pad","rdf","store","style","utils","widgets","dom","window","document","kb","THUMBS_UP_ICON","THUMBS_DOWN_ICON","updatePromise","del","ins","Promise","resolve","reject","updater","update","uri","ok","errorBody","Error","emoji","schema","sentimentStrip","target","doc","actions","each","sentiments","map","a","any","sort","strings","x","createTextNode","join","sentimentStripLinked","strip","createElement","refresh","innerHTML","forEach","ss","theClass","agent","res","setAttribute","textContent","appendChild","messageToolbar","message","messageRow","userContext","div","closeToolbar","parentElement","removeChild","deleteThingThen","connectedStatements","me","currentUser","holds","foaf","deleteButton","deleteButtonWithCheck","then","bookmarkButton","sentimentButton","context","icon","actionClass","mutuallyExclusive","setColor","button","backgroundColor","action","label","_event","newThing","insertMe","$rdf","st","dirty","i","length","existingAction","refreshTree","filter","context1","iconBase","cancelButton","firstChild","opacity","addEventListener"],"mappings":"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","sourcesContent":["/**\n * Tools for doing things with a message\n * Let us be creative here.  Allow all sorts of things to\n * be done to a message - linking to new or old objects in an open way\n *\n * Ideas: Bookmark, Like, star, pin at top of chat, reply as new thread,\n * If you made it originally: edit, delete, attach\n * @packageDocumentation\n */\n/* global $rdf */\n\nimport { authn } from '../authn/index'\nimport { icons } from '../iconBase'\nimport { store } from '../logic'\nimport { media } from '../media/index'\nimport * as ns from '../ns'\nimport * as pad from '../pad'\nimport * as rdf from 'rdflib' // pull in first avoid cross-refs\nimport * as style from '../style'\nimport * as utils from '../utils'\nimport * as widgets from '../widgets'\nimport { renderBookmarksButton } from './bookmarks'\n\nconst UI = { authn, icons, ns, media, pad, rdf, store, style, utils, widgets }\n\nconst dom = window.document\n\nconst kb = store\n// const label = UI.utils.label\n\n// THE UNUSED ICONS are here as reminders for possible future functionality\n// const BOOKMARK_ICON = 'noun_45961.svg'\n// const HEART_ICON = 'noun_130259.svg' -> Add this to my (private) favorites\n// const MENU_ICON = 'noun_897914.svg'\n// const PAPERCLIP_ICON = 'noun_25830.svg' -> add attachments to this message\n// const PIN_ICON = 'noun_562340.svg'  -> pin this message permanently in the chat UI\n// const PENCIL_ICON = 'noun_253504.svg'\n// const SPANNER_ICON = 'noun_344563.svg' -> settings\nconst THUMBS_UP_ICON = 'noun_1384132.svg'\nconst THUMBS_DOWN_ICON = 'noun_1384135.svg'\n\n// module.export = { messageTools, sentimentStripLinked, sentimentStrip }\n\n// @@@@ use the one in rdflib.js when it is avaiable and delete this\nfunction updatePromise (del, ins) {\n  return new Promise(function (resolve, reject) {\n    kb.updater.update(del, ins, function (uri, ok, errorBody) {\n      if (!ok) {\n        reject(new Error(errorBody))\n      } else {\n        resolve()\n      }\n    }) // callback\n  }) // promise\n}\n\n/**\n * Emoji in Unicode\n */\n\nconst emoji = {}\nemoji[ns.schema('AgreeAction')] = '👍'\nemoji[ns.schema('DisagreeAction')] = '👎'\nemoji[ns.schema('EndorseAction')] = '⭐️'\nemoji[ns.schema('LikeAction')] = '❤️'\n\n/**\n * Create strip of sentiments expressed\n */\nexport function sentimentStrip (target, doc) {\n  const actions = kb.each(null, ns.schema('target'), target, doc)\n  const sentiments = actions.map(a => kb.any(a, ns.rdf('type'), null, doc))\n  sentiments.sort()\n  const strings = sentiments.map(x => emoji[x] || '')\n  return dom.createTextNode(strings.join(' '))\n}\n/**\n * Create strip of sentiments expressed, with hyperlinks\n *\n * @param target {NamedNode} - The thing about which they are expressed\n * @param doc {NamedNode} - The document in which they are expressed\n */\nexport function sentimentStripLinked (target, doc) {\n  const strip = dom.createElement('span')\n  function refresh () {\n    strip.innerHTML = ''\n    const actions = kb.each(null, ns.schema('target'), target, doc)\n    const sentiments = actions.map(a => [\n      kb.any(a, ns.rdf('type'), null, doc),\n      kb.any(a, ns.schema('agent'), null, doc)\n    ])\n    sentiments.sort()\n    sentiments.forEach(ss => {\n      const [theClass, agent] = ss\n      let res\n      if (agent) {\n        res = dom.createElement('a')\n        res.setAttribute('href', agent.uri)\n      } else {\n        res = dom.createTextNode('')\n      }\n      res.textContent = emoji[theClass] || '*'\n      strip.appendChild(res)\n    })\n  }\n  refresh()\n  strip.refresh = refresh\n  return strip\n}\n\n/**\n * Creates a message toolbar component\n */\nexport function messageToolbar (message, messageRow, userContext) {\n  const div = dom.createElement('div')\n  function closeToolbar () {\n    div.parentElement.parentElement.removeChild(div.parentElement) // remive the TR\n  }\n\n  async function deleteThingThen (x) {\n    await updatePromise(kb.connectedStatements(x), [])\n  }\n\n  // Things only the original author can do\n  let me = UI.authn.currentUser() // If already logged on\n  if (me && kb.holds(message, ns.foaf('maker'), me)) {\n    // button to delete the message\n    const deleteButton = UI.widgets.deleteButtonWithCheck(\n      dom,\n      div,\n      'message',\n      async function () {\n        await kb.updater.update(kb.connectedStatements[message], [])\n        closeToolbar()\n      }\n    )\n    div.appendChild(deleteButton)\n  } // if mine\n\n  // Things anyone can do if they have a bookmark list async\n  /*\n var bookmarkButton = await bookmarks.renderBookmarksButton(userContext)\n if (bookmarkButton) {\n   div.appendChild(bookmarkButton)\n }\n */\n  // Things anyone can do if they have a bookmark list\n\n  renderBookmarksButton(userContext).then(bookmarkButton => {\n    if (bookmarkButton) div.appendChild(bookmarkButton)\n  })\n\n  /**   Button to allow user to express a sentiment (like, endorse, etc) about a target\n   *\n   * @param context {Object} - Provide dom and me\n   * @param target {NamedNode} - The thing the user expresses an opnion about\n   * @param icon {uristring} - The icon to be used for the button\n   * @param actionClass {NamedNode} - The RDF class  - typically a subclass of schema:Action\n   * @param doc - {NamedNode} - the Solid document iunto which the data should be written\n   * @param mutuallyExclusive {Array<NamedNode>} - Any RDF classes of sentimentswhich are mutiually exclusive\n   */\n  function sentimentButton (\n    context,\n    target,\n    icon,\n    actionClass,\n    doc,\n    mutuallyExclusive\n  ) {\n    function setColor () {\n      button.style.backgroundColor = action ? 'yellow' : 'white'\n    }\n    const button = UI.widgets.button(\n      dom,\n      icon,\n      UI.utils.label(actionClass),\n      async function (_event) {\n        if (action) {\n          await deleteThingThen(action)\n          action = null\n          setColor()\n        } else {\n          // no action\n          action = UI.widgets.newThing(doc)\n          const insertMe = [\n            $rdf.st(action, ns.schema('agent'), context.me, doc),\n            $rdf.st(action, ns.rdf('type'), actionClass, doc),\n            $rdf.st(action, ns.schema('target'), target, doc)\n          ]\n          await updatePromise([], insertMe)\n          setColor()\n\n          if (mutuallyExclusive) {\n            // Delete incompative sentiments\n            let dirty = false\n            for (let i = 0; i < mutuallyExclusive.length; i++) {\n              const a = existingAction(mutuallyExclusive[i])\n              if (a) {\n                await deleteThingThen(a) // but how refresh? refreshTree the parent?\n                dirty = true\n              }\n            }\n            if (dirty) {\n              // UI.widgets.refreshTree(button.parentNode) // requires them all to be immediate siblings\n              UI.widgets.refreshTree(messageRow) // requires them all to be immediate siblings\n            }\n          }\n        }\n      }\n    )\n    function existingAction (actionClass) {\n      const actions = kb\n        .each(null, ns.schema('agent'), context.me, doc)\n        .filter(x => kb.holds(x, ns.rdf('type'), actionClass, doc))\n        .filter(x => kb.holds(x, ns.schema('target'), target, doc))\n      return actions.length ? actions[0] : null\n    }\n    function refresh () {\n      action = existingAction(actionClass)\n      setColor()\n    }\n    let action\n    button.refresh = refresh // If the file changes, refresh live\n    refresh()\n    return button\n  }\n\n  // THUMBS_UP_ICON\n  // https://schema.org/AgreeAction\n  me = UI.authn.currentUser() // If already logged on\n  if (me) {\n    // Things you mnust be logged in for\n    const context1 = { me, dom, div }\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message, // @@ TODO use UI.widgets.sentimentButton\n        UI.icons.iconBase + THUMBS_UP_ICON,\n        ns.schema('AgreeAction'),\n        message.doc(),\n        [ns.schema('DisagreeAction')]\n      )\n    )\n    // Thumbs down\n    div.appendChild(\n      sentimentButton(\n        context1,\n        message,\n        UI.icons.iconBase + THUMBS_DOWN_ICON,\n        ns.schema('DisagreeAction'),\n        message.doc(),\n        [ns.schema('AgreeAction')]\n      )\n    )\n  }\n  // X button to remove the tool UI itself\n  const cancelButton = div.appendChild(UI.widgets.cancelButton(dom))\n  cancelButton.style.float = 'right'\n  cancelButton.firstChild.style.opacity = '0.3'\n  cancelButton.addEventListener('click', closeToolbar)\n  return div\n}\n"],"file":"messageTools.js"}