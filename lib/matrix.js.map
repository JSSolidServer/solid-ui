{"version":3,"sources":["../src/matrix.js"],"names":["UI","icons","require","ns","rdf","store","widgets","utils","kb","module","exports","matrixForQuery","dom","query","vx","vy","vvalue","options","whenDone","matrix","createElement","header","corner","appendChild","setAttribute","lastHeader","columns","rows","setCell","cell","x","y","value","firstChild","removeChild","style","textAlign","cellFunction","textContent","label","old","rowFor","y1","toNT","tr","termType","fetcher","nowOrWhenFetched","uri","split","undefined","ok","_body","_response","i","length","$rdf","fromNT","dataValueNT","ele","nextSibling","yDecreasing","insertBefore","columnNumberFor","x1","xNT","col","xDecreasing","slice","concat","push","row","td","t","j","markOldCells","children","clearOldCells","colsUsed","rowsUsed","set_y","k","set_x","newcolumns","refresh","addCellFromBindings","bindings","colNo"],"mappings":"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","sourcesContent":["/* global $rdf */\n//      Build a 2D matrix of values\n//\n//  dom      AKA document\n//  query    a Query object of rdflib.js with a valid pattern\n//  vx       A variable object, the one to be used for the X variable (horiz)\n//  vy       A variable object, the one to be used for the Y variable (vertical)\n//  vvalue       A variable object, the one to be used for the cell value\n//  returns  A DOM element with the matrix in it, which has a .refresh() function.\n//\n// Options:\n//     cellFunction(td, x, y, value)  fill the TD element of a single cell\n//     xDecreasing  set true for x axis to be in decreasiong order.\n//     yDecreasing  set true for y axis to be in decreasiong order.\n//     set_x        array of X values to be define initial rows (order irrelevant)\n//     set_y        array of Y values to be define initial columns\n//\n// Features:\n//   Header row at top (x axis) and left (y-axis) generated automatically.\n//   Extra rows and columns are inserted as needed to hold new data points\n//   matrix.refresh() will re-run the query and adjust the display\n\nvar UI = {\n  icons: require('./iconBase'),\n  ns: require('./ns'),\n  rdf: require('rdflib'),\n  store: require('./store'),\n  widgets: require('./widgets')\n}\n\nconst utils = require('./utils')\nconst kb = UI.store\n\nmodule.exports.matrixForQuery = function (\n  dom,\n  query,\n  vx,\n  vy,\n  vvalue,\n  options,\n  whenDone\n) {\n  var matrix = dom.createElement('table')\n  var header = dom.createElement('tr')\n  var corner = header.appendChild(dom.createElement('td'))\n  corner.setAttribute('class', 'MatrixCorner')\n  matrix.appendChild(header) // just one for now\n  matrix.lastHeader = header // Element before data\n  var columns = [] // Vector\n  var rows = [] // Associative array\n\n  var setCell = function (cell, x, y, value) {\n    while (cell.firstChild) {\n      // Empty any previous\n      cell.removeChild(cell.firstChild)\n    }\n    cell.setAttribute('style', '')\n    cell.style.textAlign = 'center'\n\n    if (options.cellFunction) {\n      options.cellFunction(cell, x, y, value)\n    } else {\n      cell.textContent = utils.label(value)\n      cell.setAttribute('style', 'padding: 0.3em')\n    }\n    delete cell.old\n  }\n\n  var rowFor = function (y1) {\n    var y = y1.toNT()\n    if (rows[y]) return rows[y]\n    var tr = dom.createElement('tr')\n    var header = tr.appendChild(dom.createElement('td'))\n    header.setAttribute('style', 'padding: 0.3em;')\n    header.textContent = utils.label(y1) // first approximation\n    if (y1.termType === 'NamedNode') {\n      kb.fetcher.nowOrWhenFetched(y1.uri.split('#')[0], undefined, function (\n        ok,\n        _body,\n        _response\n      ) {\n        if (ok) header.textContent = utils.label(y1)\n      })\n    }\n    for (var i = 0; i < columns.length; i++) {\n      setCell(\n        tr.appendChild(dom.createElement('td')),\n        $rdf.fromNT(columns[i]),\n        y1,\n        null\n      )\n    }\n    tr.dataValueNT = y\n    rows[y] = tr\n    for (var ele = matrix.lastHeader.nextSibling; ele; ele = ele.nextSibling) {\n      // skip header\n      if (\n        (y > ele.dataValueNT && options && options.yDecreasing) ||\n        (y < ele.dataValueNT && !(options && options.yDecreasing))\n      ) {\n        return matrix.insertBefore(tr, ele) // return the tr\n      }\n    }\n    return matrix.appendChild(tr) // return the tr\n  }\n\n  var columnNumberFor = function (x1) {\n    var xNT = x1.toNT() // xNT is a NT string\n    var col = null\n    // These are data columns (not headings)\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i] === xNT) {\n        return i\n      }\n\n      if (\n        (xNT > columns[i] && options.xDecreasing) ||\n        (xNT < columns[i] && !options.xDecreasing)\n      ) {\n        columns = columns\n          .slice(0, i)\n          .concat([xNT])\n          .concat(columns.slice(i))\n        col = i\n        break\n      }\n    }\n\n    if (col === null) {\n      col = columns.length\n      columns.push(xNT)\n    }\n\n    // col is the number of the new column, starting from 0\n    for (var row = matrix.firstChild; row; row = row.nextSibling) {\n      // For every row header or not\n      var y = row.dataValueNT\n      var td = dom.createElement('td') // Add a new cell\n      td.style.textAlign = 'center'\n      if (row === matrix.firstChild) {\n        td.textContent = utils.label(x1)\n      } else {\n        setCell(td, x1, $rdf.fromNT(y), null)\n      }\n      if (col === columns.length - 1) {\n        row.appendChild(td)\n      } else {\n        var t = row.firstChild\n        for (var j = 0; j < col + 1; j++) {\n          // Skip header col too\n          t = t.nextSibling\n        }\n        row.insertBefore(td, t)\n      }\n    }\n    return col\n  }\n\n  var markOldCells = function () {\n    for (var i = 1; i < matrix.children.length; i++) {\n      var row = matrix.children[i]\n      for (var j = 1; j < row.children.length; j++) {\n        row.children[j].old = true\n      }\n    }\n  }\n\n  var clearOldCells = function () {\n    var row, cell\n    var colsUsed = []\n    var rowsUsed = []\n\n    if (options.set_y) {\n      // Knows y values create rows\n      for (var k = 0; k < options.set_y.length; k++) {\n        rowsUsed[options.set_y[k]] = true\n      }\n    }\n    if (options.set_x) {\n      for (k = 0; k < options.set_x.length; k++) {\n        colsUsed[columnNumberFor(options.set_x[k]) + 1] = true\n      }\n    }\n\n    for (let i = 1; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      for (let j = 1; j < row.children.length; j++) {\n        cell = row.children[j]\n        if (cell.old) {\n          var y = $rdf.fromNT(row.dataValueNT)\n          var x = $rdf.fromNT(columns[j - 1])\n          setCell(cell, x, y, null)\n        } else {\n          rowsUsed[row.dataValueNT] = true\n          colsUsed[j] = true\n        }\n      }\n    }\n\n    for (let i = 0; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      if (i > 0 && !rowsUsed[row.dataValueNT]) {\n        delete rows[row.dataValueNT]\n        matrix.removeChild(row)\n      } else {\n        for (var j = row.children.length - 1; j > 0; j--) {\n          // backwards\n          const cell = row.children[j]\n          if (!colsUsed[j]) {\n            row.removeChild(cell)\n          }\n        }\n      }\n    }\n    var newcolumns = []\n    for (let j = 0; j < columns.length; j++) {\n      if (colsUsed[j + 1]) {\n        newcolumns.push(columns[j])\n      }\n    }\n    columns = newcolumns\n  }\n\n  matrix.refresh = function () {\n    markOldCells()\n    kb.query(query, addCellFromBindings, undefined, clearOldCells)\n  }\n\n  var addCellFromBindings = function (bindings) {\n    var x = bindings[vx]\n    var y = bindings[vy]\n    var value = bindings[vvalue]\n    var row = rowFor(y)\n    var colNo = columnNumberFor(x)\n    var cell = row.children[colNo + 1] // number of Y axis headings\n    setCell(cell, x, y, value)\n  }\n\n  if (options.set_y) {\n    // Knows y values create rows\n    for (var k = 0; k < options.set_y.length; k++) {\n      rowFor(options.set_y[k])\n    }\n  }\n  if (options.set_x) {\n    for (k = 0; k < options.set_x.length; k++) {\n      columnNumberFor(options.set_x[k])\n    }\n  }\n\n  kb.query(query, addCellFromBindings, undefined, whenDone) // Populate the matrix\n  return matrix\n}\n"],"file":"matrix.js"}