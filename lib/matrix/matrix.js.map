{"version":3,"file":"matrix.js","names":["kb","solidLogicSingleton","store","matrixForQuery","dom","query","vx","vy","vvalue","options","whenDone","matrix","createElement","header","corner","appendChild","setAttribute","lastHeader","columns","rows","setCell","cell","x","y","value","firstChild","removeChild","style","textAlign","cellFunction","textContent","utils","label","old","rowFor","y1","toNT","tr","termType","fetcher","nowOrWhenFetched","uri","split","undefined","ok","_body","_response","i","length","$rdf","fromNT","dataValueNT","ele","nextSibling","yDecreasing","insertBefore","columnNumberFor","x1","xNT","col","xDecreasing","slice","concat","push","row","td","t","j","markOldCells","children","clearOldCells","colsUsed","rowsUsed","set_y","k","set_x","newcolumns","refresh","addCellFromBindings","bindings","toString","colNo"],"sources":["../../src/matrix/matrix.ts"],"sourcesContent":["//      Build a 2D matrix of values\n//\n//  dom      AKA document\n//  query    a Query object of rdflib.js with a valid pattern\n//  vx       A variable object, the one to be used for the X variable (horiz)\n//  vy       A variable object, the one to be used for the Y variable (vertical)\n//  vvalue       A variable object, the one to be used for the cell value\n//  returns  A DOM element with the matrix in it, which has a .refresh() function.\n//\n// Options:\n//     cellFunction(td, x, y, value)  fill the TD element of a single cell\n//     xDecreasing  set true for x axis to be in decreasing order.\n//     yDecreasing  set true for y axis to be in decreasing order.\n//     set_x        array of X values to be define initial rows (order irrelevant)\n//     set_y        array of Y values to be define initial columns\n//\n// Features:\n//   Header row at top (x axis) and left (y-axis) generated automatically.\n//   Extra rows and columns are inserted as needed to hold new data points\n//   matrix.refresh() will re-run the query and adjust the display\n\nimport * as utils from '../utils'\nimport * as $rdf from 'rdflib'\nimport { MatrixOptions } from './types'\nimport { solidLogicSingleton } from 'solid-logic'\n\nconst kb = solidLogicSingleton.store\n\nexport function matrixForQuery (\n  dom: HTMLDocument,\n  query: $rdf.Query,\n  vx: $rdf.Variable,\n  vy: $rdf.Variable,\n  vvalue: $rdf.Variable,\n  options: MatrixOptions,\n  whenDone: () => void\n) {\n  // @@ TODO Remove need to cast to any\n  const matrix: any = dom.createElement('table')\n  const header = dom.createElement('tr')\n  const corner = header.appendChild(dom.createElement('td'))\n  corner.setAttribute('class', 'MatrixCorner')\n  matrix.appendChild(header) // just one for now\n  matrix.lastHeader = header // Element before data\n  let columns: any[] = [] // Vector\n  const rows: any[] = [] // Associative array\n\n  const setCell = function (cell, x, y, value) {\n    while (cell.firstChild) {\n      // Empty any previous\n      cell.removeChild(cell.firstChild)\n    }\n    cell.setAttribute('style', '')\n    cell.style.textAlign = 'center'\n\n    if (options.cellFunction) {\n      options.cellFunction(cell, x, y, value)\n    } else {\n      cell.textContent = utils.label(value)\n      cell.setAttribute('style', 'padding: 0.3em')\n    }\n    delete cell.old\n  }\n\n  const rowFor = function (y1) {\n    const y = y1.toNT()\n    if (rows[y]) return rows[y]\n    // @@ TODO Remove need for casting to any\n    const tr: any = dom.createElement('tr')\n    const header = tr.appendChild(dom.createElement('td'))\n    header.setAttribute('style', 'padding: 0.3em;')\n    header.textContent = utils.label(y1) // first approximation\n    if (y1.termType === 'NamedNode') {\n      kb.fetcher!.nowOrWhenFetched(y1.uri.split('#')[0], undefined, function (\n        ok,\n        _body,\n        _response\n      ) {\n        if (ok) header.textContent = utils.label(y1)\n      })\n    }\n    for (let i = 0; i < columns.length; i++) {\n      setCell(\n        tr.appendChild(dom.createElement('td')),\n        $rdf.fromNT(columns[i]),\n        y1,\n        null\n      )\n    }\n    tr.dataValueNT = y\n    rows[y] = tr\n    for (let ele = matrix.lastHeader.nextSibling; ele; ele = ele.nextSibling) {\n      // skip header\n      if (\n        (y > ele.dataValueNT && options && options.yDecreasing) ||\n        (y < ele.dataValueNT && !(options && options.yDecreasing))\n      ) {\n        return matrix.insertBefore(tr, ele) // return the tr\n      }\n    }\n    return matrix.appendChild(tr) // return the tr\n  }\n\n  const columnNumberFor = function (x1): number {\n    const xNT: any = x1.toNT() // xNT is a NT string\n    let col: any = null\n    // These are data columns (not headings)\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i] === xNT) {\n        return i\n      }\n\n      if (\n        (xNT > columns[i] && options.xDecreasing) ||\n        (xNT < columns[i] && !options.xDecreasing)\n      ) {\n        columns = columns\n          .slice(0, i)\n          .concat([xNT])\n          .concat(columns.slice(i))\n        col = i\n        break\n      }\n    }\n\n    if (col === null) {\n      col = columns.length\n      columns.push(xNT)\n    }\n\n    // col is the number of the new column, starting from 0\n    for (let row = matrix.firstChild; row; row = row.nextSibling) {\n      // For every row header or not\n      const y = row.dataValueNT\n      const td = dom.createElement('td') // Add a new cell\n      td.style.textAlign = 'center'\n      if (row === matrix.firstChild) {\n        td.textContent = utils.label(x1)\n      } else {\n        setCell(td, x1, $rdf.fromNT(y), null)\n      }\n      if (col === columns.length - 1) {\n        row.appendChild(td)\n      } else {\n        let t = row.firstChild\n        for (let j = 0; j < col + 1; j++) {\n          // Skip header col too\n          t = t.nextSibling\n        }\n        row.insertBefore(td, t)\n      }\n    }\n    return col\n  }\n\n  const markOldCells = function () {\n    for (let i = 1; i < matrix.children.length; i++) {\n      const row = matrix.children[i]\n      for (let j = 1; j < row.children.length; j++) {\n        row.children[j].old = true\n      }\n    }\n  }\n\n  const clearOldCells = function () {\n    let row, cell\n    const colsUsed: any[] = []\n    const rowsUsed: any[] = []\n\n    if (options.set_y) {\n      // Knows y values create rows\n      for (let k = 0; k < options.set_y.length; k++) {\n        rowsUsed[options.set_y[k]] = true\n      }\n    }\n    if (options.set_x) {\n      for (let k = 0; k < options.set_x.length; k++) {\n        colsUsed[columnNumberFor(options.set_x[k]) + 1] = true\n      }\n    }\n\n    for (let i = 1; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      for (let j = 1; j < row.children.length; j++) {\n        cell = row.children[j]\n        if (cell.old) {\n          const y = $rdf.fromNT(row.dataValueNT)\n          const x = $rdf.fromNT(columns[j - 1])\n          setCell(cell, x, y, null)\n        } else {\n          rowsUsed[row.dataValueNT] = true\n          colsUsed[j] = true\n        }\n      }\n    }\n\n    for (let i = 0; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      if (i > 0 && !rowsUsed[row.dataValueNT]) {\n        delete rows[row.dataValueNT]\n        matrix.removeChild(row)\n      } else {\n        for (let j = row.children.length - 1; j > 0; j--) {\n          // backwards\n          const cell = row.children[j]\n          if (!colsUsed[j]) {\n            row.removeChild(cell)\n          }\n        }\n      }\n    }\n    const newcolumns: any[] = []\n    for (let j = 0; j < columns.length; j++) {\n      if (colsUsed[j + 1]) {\n        newcolumns.push(columns[j])\n      }\n    }\n    columns = newcolumns\n  }\n\n  matrix.refresh = function () {\n    markOldCells()\n    kb.query(query, addCellFromBindings, undefined, clearOldCells)\n  }\n\n  const addCellFromBindings = function (bindings) {\n    const x = bindings[vx.toString()]\n    const y = bindings[vy.toString()]\n    const value = bindings[(vvalue.toString())]\n    const row = rowFor(y)\n    const colNo = columnNumberFor(x)\n    const cell = row.children[colNo + 1] // number of Y axis headings\n    setCell(cell, x, y, value)\n  }\n\n  if (options.set_y) {\n    // Knows y values create rows\n    for (let k = 0; k < options.set_y.length; k++) {\n      rowFor(options.set_y[k])\n    }\n  }\n  if (options.set_x) {\n    for (let k = 0; k < options.set_x.length; k++) {\n      columnNumberFor(options.set_x[k])\n    }\n  }\n\n  kb.query(query, addCellFromBindings, undefined, whenDone) // Populate the matrix\n  return matrix\n}\n"],"mappings":"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"}