{"version":3,"file":"matrix.js","names":["utils","_interopRequireWildcard","require","$rdf","_solidLogic","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","kb","solidLogicSingleton","store","matrixForQuery","dom","query","vx","vy","vvalue","options","whenDone","matrix","createElement","header","corner","appendChild","setAttribute","lastHeader","columns","rows","setCell","cell","x","y","value","firstChild","removeChild","style","textAlign","cellFunction","textContent","label","old","rowFor","y1","toNT","tr","termType","fetcher","nowOrWhenFetched","uri","split","undefined","ok","_body","_response","i","length","fromNT","dataValueNT","ele","nextSibling","yDecreasing","insertBefore","columnNumberFor","x1","xNT","col","xDecreasing","slice","concat","push","row","td","t","j","markOldCells","children","clearOldCells","colsUsed","rowsUsed","set_y","k","set_x","newcolumns","refresh","addCellFromBindings","bindings","toString","colNo"],"sources":["../../src/matrix/matrix.ts"],"sourcesContent":["//      Build a 2D matrix of values\n//\n//  dom      AKA document\n//  query    a Query object of rdflib.js with a valid pattern\n//  vx       A variable object, the one to be used for the X variable (horiz)\n//  vy       A variable object, the one to be used for the Y variable (vertical)\n//  vvalue       A variable object, the one to be used for the cell value\n//  returns  A DOM element with the matrix in it, which has a .refresh() function.\n//\n// Options:\n//     cellFunction(td, x, y, value)  fill the TD element of a single cell\n//     xDecreasing  set true for x axis to be in decreasing order.\n//     yDecreasing  set true for y axis to be in decreasing order.\n//     set_x        array of X values to be define initial rows (order irrelevant)\n//     set_y        array of Y values to be define initial columns\n//\n// Features:\n//   Header row at top (x axis) and left (y-axis) generated automatically.\n//   Extra rows and columns are inserted as needed to hold new data points\n//   matrix.refresh() will re-run the query and adjust the display\n\nimport * as utils from '../utils'\nimport * as $rdf from 'rdflib'\nimport { MatrixOptions } from './types'\nimport { solidLogicSingleton } from 'solid-logic'\n\nconst kb = solidLogicSingleton.store\n\nexport function matrixForQuery (\n  dom: HTMLDocument,\n  query: $rdf.Query,\n  vx: $rdf.Variable,\n  vy: $rdf.Variable,\n  vvalue: $rdf.Variable,\n  options: MatrixOptions,\n  whenDone: () => void\n) {\n  // @@ TODO Remove need to cast to any\n  const matrix: any = dom.createElement('table')\n  const header = dom.createElement('tr')\n  const corner = header.appendChild(dom.createElement('td'))\n  corner.setAttribute('class', 'MatrixCorner')\n  matrix.appendChild(header) // just one for now\n  matrix.lastHeader = header // Element before data\n  let columns: any[] = [] // Vector\n  const rows: any[] = [] // Associative array\n\n  const setCell = function (cell, x, y, value) {\n    while (cell.firstChild) {\n      // Empty any previous\n      cell.removeChild(cell.firstChild)\n    }\n    cell.setAttribute('style', '')\n    cell.style.textAlign = 'center'\n\n    if (options.cellFunction) {\n      options.cellFunction(cell, x, y, value)\n    } else {\n      cell.textContent = utils.label(value)\n      cell.setAttribute('style', 'padding: 0.3em')\n    }\n    delete cell.old\n  }\n\n  const rowFor = function (y1) {\n    const y = y1.toNT()\n    if (rows[y]) return rows[y]\n    // @@ TODO Remove need for casting to any\n    const tr: any = dom.createElement('tr')\n    const header = tr.appendChild(dom.createElement('td'))\n    header.setAttribute('style', 'padding: 0.3em;')\n    header.textContent = utils.label(y1) // first approximation\n    if (y1.termType === 'NamedNode') {\n      kb.fetcher!.nowOrWhenFetched(y1.uri.split('#')[0], undefined, function (\n        ok,\n        _body,\n        _response\n      ) {\n        if (ok) header.textContent = utils.label(y1)\n      })\n    }\n    for (let i = 0; i < columns.length; i++) {\n      setCell(\n        tr.appendChild(dom.createElement('td')),\n        $rdf.fromNT(columns[i]),\n        y1,\n        null\n      )\n    }\n    tr.dataValueNT = y\n    rows[y] = tr\n    for (let ele = matrix.lastHeader.nextSibling; ele; ele = ele.nextSibling) {\n      // skip header\n      if (\n        (y > ele.dataValueNT && options && options.yDecreasing) ||\n        (y < ele.dataValueNT && !(options && options.yDecreasing))\n      ) {\n        return matrix.insertBefore(tr, ele) // return the tr\n      }\n    }\n    return matrix.appendChild(tr) // return the tr\n  }\n\n  const columnNumberFor = function (x1): number {\n    const xNT: any = x1.toNT() // xNT is a NT string\n    let col: any = null\n    // These are data columns (not headings)\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i] === xNT) {\n        return i\n      }\n\n      if (\n        (xNT > columns[i] && options.xDecreasing) ||\n        (xNT < columns[i] && !options.xDecreasing)\n      ) {\n        columns = columns\n          .slice(0, i)\n          .concat([xNT])\n          .concat(columns.slice(i))\n        col = i\n        break\n      }\n    }\n\n    if (col === null) {\n      col = columns.length\n      columns.push(xNT)\n    }\n\n    // col is the number of the new column, starting from 0\n    for (let row = matrix.firstChild; row; row = row.nextSibling) {\n      // For every row header or not\n      const y = row.dataValueNT\n      const td = dom.createElement('td') // Add a new cell\n      td.style.textAlign = 'center'\n      if (row === matrix.firstChild) {\n        td.textContent = utils.label(x1)\n      } else {\n        setCell(td, x1, $rdf.fromNT(y), null)\n      }\n      if (col === columns.length - 1) {\n        row.appendChild(td)\n      } else {\n        let t = row.firstChild\n        for (let j = 0; j < col + 1; j++) {\n          // Skip header col too\n          t = t.nextSibling\n        }\n        row.insertBefore(td, t)\n      }\n    }\n    return col\n  }\n\n  const markOldCells = function () {\n    for (let i = 1; i < matrix.children.length; i++) {\n      const row = matrix.children[i]\n      for (let j = 1; j < row.children.length; j++) {\n        row.children[j].old = true\n      }\n    }\n  }\n\n  const clearOldCells = function () {\n    let row, cell\n    const colsUsed: any[] = []\n    const rowsUsed: any[] = []\n\n    if (options.set_y) {\n      // Knows y values create rows\n      for (let k = 0; k < options.set_y.length; k++) {\n        rowsUsed[options.set_y[k]] = true\n      }\n    }\n    if (options.set_x) {\n      for (let k = 0; k < options.set_x.length; k++) {\n        colsUsed[columnNumberFor(options.set_x[k]) + 1] = true\n      }\n    }\n\n    for (let i = 1; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      for (let j = 1; j < row.children.length; j++) {\n        cell = row.children[j]\n        if (cell.old) {\n          const y = $rdf.fromNT(row.dataValueNT)\n          const x = $rdf.fromNT(columns[j - 1])\n          setCell(cell, x, y, null)\n        } else {\n          rowsUsed[row.dataValueNT] = true\n          colsUsed[j] = true\n        }\n      }\n    }\n\n    for (let i = 0; i < matrix.children.length; i++) {\n      row = matrix.children[i]\n      if (i > 0 && !rowsUsed[row.dataValueNT]) {\n        delete rows[row.dataValueNT]\n        matrix.removeChild(row)\n      } else {\n        for (let j = row.children.length - 1; j > 0; j--) {\n          // backwards\n          const cell = row.children[j]\n          if (!colsUsed[j]) {\n            row.removeChild(cell)\n          }\n        }\n      }\n    }\n    const newcolumns: any[] = []\n    for (let j = 0; j < columns.length; j++) {\n      if (colsUsed[j + 1]) {\n        newcolumns.push(columns[j])\n      }\n    }\n    columns = newcolumns\n  }\n\n  matrix.refresh = function () {\n    markOldCells()\n    kb.query(query, addCellFromBindings, undefined, clearOldCells)\n  }\n\n  const addCellFromBindings = function (bindings) {\n    const x = bindings[vx.toString()]\n    const y = bindings[vy.toString()]\n    const value = bindings[(vvalue.toString())]\n    const row = rowFor(y)\n    const colNo = columnNumberFor(x)\n    const cell = row.children[colNo + 1] // number of Y axis headings\n    setCell(cell, x, y, value)\n  }\n\n  if (options.set_y) {\n    // Knows y values create rows\n    for (let k = 0; k < options.set_y.length; k++) {\n      rowFor(options.set_y[k])\n    }\n  }\n  if (options.set_x) {\n    for (let k = 0; k < options.set_x.length; k++) {\n      columnNumberFor(options.set_x[k])\n    }\n  }\n\n  kb.query(query, addCellFromBindings, undefined, whenDone) // Populate the matrix\n  return matrix\n}\n"],"mappings":"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"}